<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/assign/instruction5	5	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/l2#_0	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/$r0	EdgeIfc	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>
<VertexIter: Vertex next()>/assign/instruction4	4	<VertexIter: Vertex next()>/$r1	<VertexIter: Vertex next()>/$r2	Vertex	<VertexIter: Vertex next()>
<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/assign/instruction5	5	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/l2#_0	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/$r0	Vertex	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>
<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/assign/instruction4	4	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/l1#_0	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/$r1	Vertex	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>
<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/assign/instruction4	4	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/l1#_0	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/$r1	EdgeIfc	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>
<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/assign/instruction5	5	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/l2#_0	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/$r0	Vertex	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>
<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/assign/instruction4	4	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/l1#_0	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/$r1	Vertex	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>
<Graph: void display()>/assign/instruction12	12	<Graph: void display()>/$r4	<Graph: void display()>/$r5	Vertex	<Graph: void display()>

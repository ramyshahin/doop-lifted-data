<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/6	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/4
<lampiro.screens.AddContactScreen: void getGateways()>/catch java.io.IOException/1	<lampiro.screens.AddContactScreen: void getGateways()>/catch java.io.IOException/0
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.RuntimeException/0	<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/3
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/catch java.lang.Exception/1	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/catch java.lang.Exception/0
<it.yup.util.XMPPConsumer: void gotMessage(java.lang.String,int)>/catch java.lang.Throwable/1	<it.yup.util.XMPPConsumer: void gotMessage(java.lang.String,int)>/catch java.lang.Throwable/0
<it.yup.xmlstream.SocketStream: void run()>/catch java.io.IOException/0	<it.yup.xmlstream.SocketStream: void run()>/catch org.xmlpull.v1.XmlPullParserException/0
<it.yup.xmlstream.BasicXmlStream: java.util.Vector getPacketsToSend(boolean)>/catch java.lang.Throwable/1	<it.yup.xmlstream.BasicXmlStream: java.util.Vector getPacketsToSend(boolean)>/catch java.lang.Throwable/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/4	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/3
<it.yup.xmpp.Roster: void loadGateways()>/catch java.lang.Exception/1	<it.yup.xmpp.Roster: void loadGateways()>/catch java.lang.Exception/0
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/catch java.io.IOException/2	<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/catch java.io.IOException/1
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/3	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/2
<it.yup.util.NetworkConsumer: void run()>/catch java.lang.Throwable/0	<it.yup.util.NetworkConsumer: void run()>/catch java.lang.InterruptedException/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch javax.microedition.rms.RecordStoreNotFoundException/0	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/1
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/catch javax.microedition.media.MediaException/1	<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/catch javax.microedition.media.MediaException/0
<lampiro.screens.FTScreen: void <init>()>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: void <init>()>/catch java.lang.Throwable/0
<it.yup.xmpp.IqManager: void handleAnswer(it.yup.xml.Element,boolean)>/catch java.lang.Throwable/1	<it.yup.xmpp.IqManager: void handleAnswer(it.yup.xml.Element,boolean)>/catch java.lang.Throwable/0
<it.yup.util.NetworkConsumer: void setExiting()>/catch java.lang.Throwable/1	<it.yup.util.NetworkConsumer: void setExiting()>/catch java.lang.Throwable/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch javax.microedition.rms.RecordStoreFullException/0	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/0
<it.yup.util.NetworkConsumer: void run()>/catch java.lang.Throwable/2	<it.yup.util.NetworkConsumer: void run()>/catch java.io.IOException/0
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/catch java.io.IOException/0	<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/catch java.lang.IllegalStateException/0
<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/3	<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/2
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/catch java.lang.Throwable/0	<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/catch java.lang.Exception/0
<it.yup.util.XMPPConsumer: void run()>/catch java.lang.Throwable/1	<it.yup.util.XMPPConsumer: void run()>/catch java.lang.Throwable/0
<it.yup.transport.SocketChannel$Runnable1: void run()>/catch java.lang.Exception/0	<it.yup.transport.SocketChannel$Runnable1: void run()>/catch java.io.IOException/0
<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.SecurityException/1	<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/0
<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/2	<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.SecurityException/2
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/3	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch javax.microedition.rms.RecordStoreException/0
<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/catch java.io.IOException/0	<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/catch java.lang.SecurityException/0
<lampiro.screens.AlbumScreen: int getCount(int)>/catch java.lang.Throwable/2	<lampiro.screens.AlbumScreen: int getCount(int)>/catch java.lang.Throwable/1
<it.yup.tests.XMLTestMidlet: void testPerformances()>/catch org.xmlpull.v1.XmlPullParserException/0	<it.yup.tests.XMLTestMidlet: void testPerformances()>/catch java.lang.Exception/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/0	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/5
<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>/catch java.lang.Throwable/0
<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>/catch java.lang.Throwable/0
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/catch java.lang.Throwable/1	<lampiro.screens.RosterScreen: boolean keyPressed(int)>/catch java.lang.Throwable/0
<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/4	<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/3
<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/3	<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/2
<it.yup.tests.XMLTestMidlet: void testPerformances()>/catch java.lang.Exception/1	<it.yup.tests.XMLTestMidlet: void testPerformances()>/catch org.xmlpull.v1.XmlPullParserException/0
<it.yup.ui.UICanvas: void longPress(it.yup.ui.UIScreen)>/catch java.lang.Throwable/1	<it.yup.ui.UICanvas: void longPress(it.yup.ui.UIScreen)>/catch java.lang.Throwable/0
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/catch java.lang.Throwable/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/catch java.lang.Throwable/0
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/catch java.lang.IllegalStateException/0	<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/catch java.lang.IllegalArgumentException/0
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Exception/0	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/1
<it.yup.transport.SocketChannel: void sendContent(byte[])>/catch java.lang.Throwable/1	<it.yup.transport.SocketChannel: void sendContent(byte[])>/catch java.lang.Throwable/0
<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/catch java.lang.Throwable/0
<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/3	<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/2
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/4	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/3
<it.yup.util.GoogleToken: void run()>/catch java.lang.Throwable/1	<it.yup.util.GoogleToken: void run()>/catch java.lang.Throwable/0
<it.yup.xmpp.Roster: void saveToStorage()>/catch java.lang.Throwable/0	<it.yup.xmpp.Roster: void saveToStorage()>/catch java.lang.Exception/0
<it.yup.util.NetworkConsumer: void gotMessage(java.lang.String,int)>/catch java.lang.Throwable/1	<it.yup.util.NetworkConsumer: void gotMessage(java.lang.String,int)>/catch java.lang.Throwable/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/4	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/3
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/catch java.lang.Exception/1	<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/catch java.lang.Exception/0
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/1	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/0
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/catch java.io.IOException/0	<it.yup.tests.XMLTestMidlet: void testEnDecode()>/catch org.xmlpull.v1.XmlPullParserException/0
<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/0	<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.InterruptedException/1
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/2	<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/1
<it.yup.util.NetworkConsumer: void run()>/catch java.io.IOException/0	<it.yup.util.NetworkConsumer: void run()>/catch java.lang.Throwable/1
<it.yup.util.NetworkConsumer: void run()>/catch java.lang.Throwable/1	<it.yup.util.NetworkConsumer: void run()>/catch java.lang.Throwable/0
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/catch java.io.IOException/0	<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/catch java.io.UnsupportedEncodingException/0
<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/0	<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.InterruptedException/1
<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.InterruptedException/1	<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.InterruptedException/0
<it.yup.xmlstream.EventQueryRegistration: void remove()>/catch java.lang.Throwable/1	<it.yup.xmlstream.EventQueryRegistration: void remove()>/catch java.lang.Throwable/0
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/catch java.io.IOException/1	<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/catch java.io.IOException/0
<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/1	<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/0
<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/catch java.lang.Throwable/2	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/catch java.lang.Throwable/1
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/1	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/0
<it.yup.ui.UICanvas: void pointerReleased(int,int)>/catch java.lang.Throwable/1	<it.yup.ui.UICanvas: void pointerReleased(int,int)>/catch java.lang.Throwable/0
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/catch java.lang.Exception/0	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/catch java.lang.Throwable/0
<it.yup.ui.Semaphore: void acquire()>/catch java.lang.Throwable/1	<it.yup.ui.Semaphore: void acquire()>/catch java.lang.Throwable/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/2	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch javax.microedition.rms.RecordStoreNotFoundException/0
<lampiro.screens.MMScreen: void showCamera()>/catch java.lang.Exception/2	<lampiro.screens.MMScreen: void showCamera()>/catch java.lang.Exception/1
<it.yup.xmpp.IqManager: void purge()>/catch java.lang.Throwable/1	<it.yup.xmpp.IqManager: void purge()>/catch java.lang.Throwable/0
<it.yup.xmlstream.SocketStream: void run()>/catch java.lang.Exception/0	<it.yup.xmlstream.SocketStream: void run()>/catch java.io.IOException/0
<it.yup.transport.BaseChannel$Sender: void run()>/catch java.io.IOException/0	<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/3
<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/2	<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Throwable/0
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/catch java.lang.Throwable/1	<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/catch java.lang.Throwable/0
<it.yup.util.RMSIndex: byte[] load(byte[])>/catch java.lang.Exception/1	<it.yup.util.RMSIndex: byte[] load(byte[])>/catch java.lang.Exception/0
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/catch java.lang.Throwable/1	<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/catch java.lang.Throwable/0
<lampiro.screens.AlbumScreen: int getCount(int)>/catch java.lang.Throwable/1	<lampiro.screens.AlbumScreen: int getCount(int)>/catch java.lang.Throwable/0
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/2	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/1
<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/catch java.lang.Throwable/3	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/catch java.lang.Throwable/2
<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/2	<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/1
<lampiro.screens.RosterScreen: void <init>()>/catch java.lang.Exception/1	<lampiro.screens.RosterScreen: void <init>()>/catch java.lang.Exception/0
<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>/catch java.lang.Throwable/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/1	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch javax.microedition.rms.RecordStoreFullException/0
<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/4	<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/3
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/catch java.lang.Exception/1	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/catch java.lang.Exception/0
<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>/catch java.lang.Throwable/1	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>/catch java.lang.Throwable/0
<lampiro.screens.AddContactScreen: void getGateways()>/catch java.io.IOException/2	<lampiro.screens.AddContactScreen: void getGateways()>/catch java.io.IOException/1
<it.yup.xmpp.IqManager: void addRegistration(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/catch java.lang.Throwable/1	<it.yup.xmpp.IqManager: void addRegistration(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/catch java.lang.Throwable/0
<it.yup.ui.UIGauge$Ticker: void run()>/catch java.lang.Throwable/1	<it.yup.ui.UIGauge$Ticker: void run()>/catch java.lang.Throwable/0
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/catch java.lang.Throwable/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/catch java.lang.Exception/0
<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/catch java.lang.Throwable/1	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/catch java.lang.Throwable/0
<it.yup.transport.SocketChannel: void close()>/catch java.lang.Exception/0	<it.yup.transport.SocketChannel: void close()>/catch java.io.IOException/0
<lampiro.screens.MMScreen: void showAudio()>/catch java.lang.Exception/1	<lampiro.screens.MMScreen: void showAudio()>/catch java.lang.Exception/0
<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/2	<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/1
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/1	<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/0
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/3	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/2
<it.yup.xmpp.Roster: void readFromStorage()>/catch java.lang.Throwable/0	<it.yup.xmpp.Roster: void readFromStorage()>/catch java.lang.Exception/0
<lampiro.screens.FTScreen: void ftAccept(it.yup.xmpp.FTSender,boolean)>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: void ftAccept(it.yup.xmpp.FTSender,boolean)>/catch java.lang.Throwable/0
<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Throwable/0	<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/1
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/1	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/0
<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/1	<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/0
<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>/catch java.lang.Throwable/1	<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>/catch java.lang.Throwable/0
<it.yup.ui.UICanvas: void keyPressed(int)>/catch java.lang.Exception/1	<it.yup.ui.UICanvas: void keyPressed(int)>/catch java.lang.Exception/0
<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.InterruptedException/1	<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.InterruptedException/0
<it.yup.xmlstream.SocketStream: void tryToSend()>/catch java.lang.Throwable/1	<it.yup.xmlstream.SocketStream: void tryToSend()>/catch java.lang.Throwable/0
<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/1	<it.yup.ui.Semaphore: boolean attempt(long)>/catch java.lang.Throwable/0
<it.yup.ui.UICanvas: void pointerDragged(int,int)>/catch java.lang.Throwable/1	<it.yup.ui.UICanvas: void pointerDragged(int,int)>/catch java.lang.Throwable/0
<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/1	<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.SecurityException/1
<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/4	<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/3
<it.yup.util.XMPPConsumer: void run()>/catch java.lang.Exception/1	<it.yup.util.XMPPConsumer: void run()>/catch java.lang.Throwable/1
<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/3	<it.yup.transport.BaseChannel$Sender: void run()>/catch java.lang.Throwable/2
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/catch java.lang.IllegalStateException/0	<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/catch java.lang.IllegalArgumentException/0
<it.yup.util.GoogleToken: void run()>/catch java.lang.Throwable/2	<it.yup.util.GoogleToken: void run()>/catch java.lang.Throwable/1
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/catch java.lang.Throwable/2	<lampiro.screens.RosterScreen: boolean keyPressed(int)>/catch java.lang.Throwable/1
<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/3	<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/2
<it.yup.ui.UICanvas: boolean isMotorola()>/catch java.lang.Exception/1	<it.yup.ui.UICanvas: boolean isMotorola()>/catch java.lang.Exception/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch javax.microedition.rms.RecordStoreException/0	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/2
<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/1	<it.yup.xmpp.Config: void loadFromStorage()>/catch java.lang.Exception/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/5	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Exception/4
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/catch java.lang.Exception/0	<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/catch java.io.IOException/0
<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>/catch java.lang.Throwable/1	<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>/catch java.lang.Throwable/0
<it.yup.xmlstream.SocketStream: void run()>/catch java.lang.Exception/1	<it.yup.xmlstream.SocketStream: void run()>/catch java.lang.Exception/0
<it.yup.util.XMPPConsumer: void run()>/catch java.lang.Throwable/0	<it.yup.util.XMPPConsumer: void run()>/catch java.lang.Exception/0
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/3	<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Throwable/2
<it.yup.screens.RegisterScreen$1: void run()>/catch java.lang.Error/0	<it.yup.screens.RegisterScreen$1: void run()>/catch java.lang.Exception/0
<lampiro.screens.MMScreen: void showCamera()>/catch java.lang.Exception/1	<lampiro.screens.MMScreen: void showCamera()>/catch java.lang.Exception/0
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/catch java.io.IOException/0	<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/catch java.lang.IllegalStateException/0
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/catch java.lang.Throwable/1	<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/catch java.lang.Throwable/0
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/catch java.lang.Throwable/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/catch java.lang.Throwable/0
<com.jcraft.jzlib.ZOutputStream: void close()>/catch java.lang.Throwable/0	<com.jcraft.jzlib.ZOutputStream: void close()>/catch java.io.IOException/0
<lampiro.screens.AlbumScreen: void <clinit>()>/catch java.lang.Throwable/1	<lampiro.screens.AlbumScreen: void <clinit>()>/catch java.lang.Throwable/0
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/5	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/catch java.lang.Throwable/4
<it.yup.tests.UITestMidlet$KeysScreen: void keyPressed(int)>/catch java.lang.Throwable/1	<it.yup.tests.UITestMidlet$KeysScreen: void keyPressed(int)>/catch java.lang.Throwable/0
<it.yup.ui.UICanvas: void pointerReleased(int,int)>/catch java.lang.Throwable/2	<it.yup.ui.UICanvas: void pointerReleased(int,int)>/catch java.lang.Throwable/1
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/catch java.lang.Throwable/0	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/catch java.lang.InterruptedException/0
<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/0	<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.SecurityException/0
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.Exception/0	<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/catch java.lang.RuntimeException/0
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/catch java.io.IOException/0	<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/catch java.io.UnsupportedEncodingException/0
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/2	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/catch java.lang.Throwable/1
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/catch java.lang.Throwable/2	<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/catch java.lang.Throwable/1
<it.yup.ui.Semaphore: void acquire()>/catch java.lang.Throwable/0	<it.yup.ui.Semaphore: void acquire()>/catch java.lang.InterruptedException/0
<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/2	<it.yup.screens.RosterScreen: void <init>()>/catch java.io.IOException/1
<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.SecurityException/2	<lampiro.screens.InnerMMScreen: void captureVideo()>/catch java.lang.Exception/1
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/catch java.lang.Throwable/0	<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/catch java.lang.Exception/0
<lampiro.screens.AlbumScreen: void setupScreen()>/catch java.lang.Throwable/1	<lampiro.screens.AlbumScreen: void setupScreen()>/catch java.lang.Throwable/0
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/catch java.io.IOException/1	<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/catch java.io.IOException/0
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/catch java.io.IOException/1	<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/catch java.io.IOException/0

<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/8	java.lang.StringBuilder
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/new java.lang.String[]/2	java.lang.String[]
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.ui.UIPanel: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/5	java.lang.String[]
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[][]/1	int[][]
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/6	int[]
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen2()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/new java.io.InputStreamReader/0	java.io.InputStreamReader
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.tests.XMLTestMidlet: void <init>()>/new javax.microedition.lcdui.Form/0	javax.microedition.lcdui.Form
<it.yup.xmpp.FTSender: void initiateInteraction()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.screens.ChatScreen: it.yup.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[],int)>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.StatusScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/18	it.yup.ui.UILabel
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/6	it.yup.ui.UIButton
<it.yup.tests.XMPPTestClient: void startClient()>/new it.yup.tests.XMPPTestClient$Echoer/0	it.yup.tests.XMPPTestClient$Echoer
<it.yup.tests.RMSTestMidlet: void testDb(it.yup.util.RMSIndex)>/new java.lang.String/0	java.lang.String
<it.yup.xmlstream.BasicXmlStream: java.util.Vector getPacketsToSend(boolean)>/new java.util.Vector/0	java.util.Vector
<it.yup.xml.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.ui.UICanvas: void keyRepeated(int)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/2	javax.microedition.lcdui.Command
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmlstream.SocketStream: void restart()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/3	java.lang.Object[]
<com.jcraft.jzlib.InfTree: void <clinit>()>/new int[]/1	int[]
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/1	int[]
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.DataResultScreen: void showCurrent()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.ui.UIScreen: void <init>()>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIHLayout/3	it.yup.ui.UIHLayout
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/14	it.yup.ui.UILabel
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/new int[]/5	int[]
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.tests.RMSTestMidlet: void testLong(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.xmlstream.SASLAuthenticator: java.util.Hashtable parse(java.lang.String)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/new lampiro.screens.GatewayRegisterScreen/0	lampiro.screens.GatewayRegisterScreen
<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void updateScreen()>/new it.yup.ui.UILabel[]/0	it.yup.ui.UILabel[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new java.lang.Integer/0	java.lang.Integer
<it.yup.xmlstream.Element: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new byte[]/1	byte[]
<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlSerializer: java.lang.Object getProperty(java.lang.String)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/10	it.yup.ui.UILabel
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<it.yup.tests.RMSTestMidlet: void testDb(it.yup.util.RMSIndex)>/new byte[]/0	byte[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/2	java.lang.Integer
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/new int[]/0	int[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/17	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.TaskListScreen/0	lampiro.screens.TaskListScreen
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/new java.util.Vector/0	java.util.Vector
<it.yup.xml.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <init>()>/new it.yup.xmpp.Roster/0	it.yup.xmpp.Roster
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<lampiro.screens.RegisterScreen: void setStatusLabel()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmpp.XMPPClient$DataFormHandler/0	it.yup.xmpp.XMPPClient$DataFormHandler
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/new int[]/5	int[]
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.Roster: void saveToStorage()>/new it.yup.xml.Element/1	it.yup.xml.Element
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UICheckbox/3	it.yup.ui.UICheckbox
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xmpp.Config: void loadFromStorage()>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<it.yup.xmlstream.SASLAuthenticator: java.lang.String unparse(java.util.Hashtable)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/new it.yup.xmpp.Task[]/0	it.yup.xmpp.Task[]
<it.yup.screens.StatusScreen: void <init>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.transport.SocketChannel: void open()>/new java.lang.Thread/0	java.lang.Thread
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new it.yup.xmlstream.SASLAuthenticator$PacketListener4/0	it.yup.xmlstream.SASLAuthenticator$PacketListener4
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/15	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Presence[]/1	it.yup.xmpp.packets.Presence[]
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<com.jcraft.jzlib.Inflate: void <clinit>()>/new byte[]/0	byte[]
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/new int[]/0	int[]
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.screens.DataFormScreen: void createControls()>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<it.yup.xmpp.Config: void loadFromStorage()>/new java.io.DataInputStream/0	java.io.DataInputStream
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.lang.String[][]/0	java.lang.String[][]
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new it.yup.xmlstream.SASLAuthenticator/0	it.yup.xmlstream.SASLAuthenticator
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/13	it.yup.ui.UILabel
<it.yup.tests.XMLTestMidlet: void testPerformances()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/9	com.jcraft.jzlib.Deflate$Config
<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/2	java.lang.String[]
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.xml.KXmlParser: boolean adjustNsp()>/new java.lang.RuntimeException/1	java.lang.RuntimeException
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/30	it.yup.ui.UILabel
<it.yup.xmpp.Config: void <init>()>/new java.util.Hashtable/1	java.util.Hashtable
<lampiro.screens.RegisterScreen: void <init>()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.tests.XMPPTestClient: void startClient()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.FTScreen: void <init>()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/6	java.lang.Integer
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.lang.String/0	java.lang.String
<it.yup.xmpp.BluendoXMLRPC: void open()>/new java.io.DataInputStream/0	java.io.DataInputStream
<it.yup.ui.UIAccordion: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.ui.UITextField: void handleScreen()>/new javax.microedition.lcdui.TextBox/0	javax.microedition.lcdui.TextBox
<it.yup.ui.UIItem: void <init>()>/new int[]/0	int[]
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/10	it.yup.ui.UILabel
<it.yup.xmpp.CommandExecutor: java.lang.String getLabel()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/11	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/new lampiro.screens.RosterScreen$RegisterDataFormExecutor/0	lampiro.screens.RosterScreen$RegisterDataFormExecutor
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/2	int[]
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/new java.util.Vector/0	java.util.Vector
<com.jcraft.jzlib.Tree: void <clinit>()>/new int[]/0	int[]
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIUtils: javax.microedition.lcdui.Image imageResize(javax.microedition.lcdui.Image,int,int)>/new int[]/0	int[]
<it.yup.xml.Element: void ensureCapacity(int,byte)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/5	it.yup.xmlstream.EventQuery
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/new java.util.Vector/0	java.util.Vector
<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.Config: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>/new java.lang.String/0	java.lang.String
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new it.yup.screens.MessageComposerScreen$ItemStateListener1/0	it.yup.screens.MessageComposerScreen$ItemStateListener1
<com.jcraft.jzlib.Deflate: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new lampiro.screens.ContactInfoScreen$1/0	lampiro.screens.ContactInfoScreen$1
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/0	com.jcraft.jzlib.Deflate$Config
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/34	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/6	java.lang.String[]
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.TextField/1	javax.microedition.lcdui.TextField
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.StatusScreen: void <init>()>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/4	java.lang.String[]
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new byte[]/2	byte[]
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.ChatScreen$1/0	lampiro.screens.ChatScreen$1
<com.jcraft.jzlib.Deflate: void <init>()>/new int[]/0	int[]
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/11	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/new org.xmlpull.v1.XmlPullParserException/0	org.xmlpull.v1.XmlPullParserException
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.ui.UICanvas: void <init>()>/new it.yup.ui.Semaphore/0	it.yup.ui.Semaphore
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.String/0	java.lang.String
<it.yup.xmlstream.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/new int[]/0	int[]
<it.yup.xmpp.FTSender: void initiateInteraction()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new byte[]/0	byte[]
<com.jcraft.jzlib.Inflate: void <init>()>/new long[]/0	long[]
<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>/new it.yup.util.ResourceManager/0	it.yup.util.ResourceManager
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>/new byte[]/0	byte[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/new java.lang.String[][]/0	java.lang.String[][]
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/new java.io.DataInputStream/0	java.io.DataInputStream
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/5	javax.microedition.lcdui.Command
<it.yup.xmpp.FTSender: void sendFile()>/new java.lang.String/0	java.lang.String
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.xmpp.Contact: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.Roster: void streamInitialized()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.MMScreen: void showAudio()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/5	it.yup.ui.UILabel
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>/new java.lang.String/0	java.lang.String
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/6	javax.microedition.lcdui.Command
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<it.yup.xmpp.Config: void <init>()>/new it.yup.util.RMSIndex/0	it.yup.util.RMSIndex
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/4	int[]
<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<lampiro.screens.RosterScreen: void firstLoginIntro()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>/new byte[]/0	byte[]
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/3	char[]
<it.yup.ui.UICombobox: java.lang.String[] getSelectedStrings()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.RosterScreen$MUCStateHandler/0	lampiro.screens.RosterScreen$MUCStateHandler
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/new int[]/0	int[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xml.KXmlParser: int getNamespaceCount(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xml.KXmlSerializer: void <init>()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.FTScreen: void fillScreen()>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<it.yup.tests.TestMidlet: void <init>()>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.tests.RMSTestMidlet: void testLength(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.RosterScreen$RegisterWaitScreen/0	lampiro.screens.RosterScreen$RegisterWaitScreen
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.screens.RosterScreen: void <init>()>/new char[]/9	char[]
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/2	int[]
<it.yup.xmpp.Contact: it.yup.xmpp.Task[] getTasks()>/new it.yup.xmpp.Task[]/0	it.yup.xmpp.Task[]
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.RegisterScreen: void <init>()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/24	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/new java.lang.Boolean/1	java.lang.Boolean
<it.yup.xmpp.XMPPClient: void <init>()>/new javax.microedition.lcdui.Image[]/0	javax.microedition.lcdui.Image[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIHLayout/1	it.yup.ui.UIHLayout
<it.yup.xmpp.Roster: void saveGateways()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void openContactMenu()>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.xmpp.Config: void loadFromStorage()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.screens.ContactInfoScreen$1/0	it.yup.screens.ContactInfoScreen$1
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIMenu/5	it.yup.ui.UIMenu
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/new java.lang.Integer/0	java.lang.Integer
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/3	it.yup.xmlstream.EventQuery
<lampiro.screens.MMScreen: void showCamera()>/new lampiro.screens.InnerMMScreen/0	lampiro.screens.InnerMMScreen
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/23	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<it.yup.xmlstream.KXmlParser: void <init>()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.ChatScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/new lampiro.screens.ChatScreen$ConversationEntry/0	lampiro.screens.ChatScreen$ConversationEntry
<it.yup.xmpp.Roster: void recreateRoster(it.yup.xml.Element,boolean)>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.FTScreen: void <init>()>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/7	it.yup.ui.UILabel
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/new com.jcraft.jzlib.InfTree/0	com.jcraft.jzlib.InfTree
<it.yup.ui.UITextField: void <clinit>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/21	it.yup.ui.UILabel
<lampiro.screens.RegisterScreen: void placeWizard()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<it.yup.xmlstream.KXmlSerializer: void <init>()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RosterScreen: void updateHeader()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/3	it.yup.ui.UITextField
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.FTReceiver$OpenListener$PacketListener2/0	it.yup.xmpp.FTReceiver$OpenListener$PacketListener2
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.Element: it.yup.xmlstream.Element[] getChildrenByName(java.lang.String,java.lang.String)>/new it.yup.xmlstream.Element[]/0	it.yup.xmlstream.Element[]
<it.yup.screens.RosterScreen: void <init>()>/new char[]/2	char[]
<it.yup.xmlstream.Element: void <init>(it.yup.xmlstream.Element)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.ShowMMScreen$1: void run()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>/new it.yup.ui.UIItem[]/0	it.yup.ui.UIItem[]
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.util.MetaVector: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/6	java.lang.StringBuilder
<lampiro.screens.FTScreen: void fillScreen()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlParser: void nextImpl()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: void <init>()>/new int[]/0	int[]
<it.yup.xmpp.Roster: void <clinit>()>/new char[]/0	char[]
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/new java.lang.String/0	java.lang.String
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/1	int[]
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributeValue(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.util.MetaVector: void <init>(int)>/new java.util.Vector/1	java.util.Vector
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/24	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIEmoLabel/0	it.yup.ui.UIEmoLabel
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.transport.SocketChannel$TimerTask1: void run()>/new byte[]/0	byte[]
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<lampiro.screens.InnerMMScreen: void captureAudio()>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<lampiro.screens.InnerMMScreen: void captureVideo()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new byte[]/4	byte[]
<it.yup.xml.KXmlSerializer: void <init>()>/new boolean[]/0	boolean[]
<it.yup.util.XMPPConsumer: void run()>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.xmlstream.BasicXmlStream: java.util.Vector getPacketsToSend(boolean)>/new java.util.Date/0	java.util.Date
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/new it.yup.ui.UISeparator/1	it.yup.ui.UISeparator
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/27	it.yup.ui.UILabel
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/new com.jcraft.jzlib.ZStreamException/0	com.jcraft.jzlib.ZStreamException
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/7	char[]
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/9	it.yup.xmlstream.EventQuery
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/7	it.yup.xmlstream.EventQuery
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<lampiro.screens.RosterScreen: void firstLoginIntro()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.FTReceiver$OpenListener/0	it.yup.xmpp.FTReceiver$OpenListener
<it.yup.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>/new java.lang.String[][]/0	java.lang.String[][]
<it.yup.xmlstream.Element: void <init>()>/new java.util.Vector/1	java.util.Vector
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmpp.FTSender: void initiateInteraction()>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmpp.Config: void saveToStorage()>/new java.io.DataOutputStream/0	java.io.DataOutputStream
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/new java.lang.String[][]/0	java.lang.String[][]
<it.yup.xml.BProcessor: int unlen(java.io.InputStream)>/new java.io.IOException/0	java.io.IOException
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.ui.UIUtils: int medColor(int,int)>/new int[]/1	int[]
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<it.yup.screens.OptionsScreen: void <init>()>/new boolean[]/0	boolean[]
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UIItem[]/0	it.yup.ui.UIItem[]
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/20	it.yup.ui.UILabel
<com.jcraft.jzlib.Deflate: void <init>()>/new short[]/2	short[]
<lampiro.screens.RosterScreen: void openContactMenu()>/new it.yup.ui.UIAccordion/0	it.yup.ui.UIAccordion
<it.yup.ui.UICanvas: void <init>()>/new java.util.Vector/0	java.util.Vector
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/8	com.jcraft.jzlib.Deflate$Config
<it.yup.xmlstream.KXmlSerializer: void <init>()>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xml.KXmlParser: void setFeature(java.lang.String,boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/4	java.lang.Object[]
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/new byte[]/0	byte[]
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.RosterScreen: void keyPressed(int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void login()>/new lampiro.screens.RegisterScreen$1/0	lampiro.screens.RegisterScreen$1
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/11	java.lang.Integer
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/new java.io.OutputStreamWriter/0	java.io.OutputStreamWriter
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.screens.DataFormScreen: void createControls()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new lampiro.screens.MUCScreen/0	lampiro.screens.MUCScreen
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/new it.yup.xmlstream.BasicXmlStream$ListenerRegistration/0	it.yup.xmlstream.BasicXmlStream$ListenerRegistration
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,int)>/new byte[]/0	byte[]
<it.yup.screens.DataResultScreen: void showCurrent()>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.ui.UIScreen: void <init>()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.util.MetaVector: void removeElementAt(int)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<it.yup.xmpp.Roster: void recreateRoster(it.yup.xml.Element,boolean)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.screens.RosterScreen: void askSubscription(it.yup.xmpp.Contact)>/new it.yup.screens.SubscriptionConfirmAlert/0	it.yup.screens.SubscriptionConfirmAlert
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.String/1	java.lang.String
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.xmlstream.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.ZInputStream: long skip(long)>/new byte[]/0	byte[]
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UITextField/2	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<it.yup.xml.KXmlParser: void error(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Message/1	it.yup.xmpp.packets.Message
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/new it.yup.xmpp.Task[]/0	it.yup.xmpp.Task[]
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.ui.UITextPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/new it.yup.xmlstream.SocketStream/0	it.yup.xmlstream.SocketStream
<it.yup.util.XMPPConsumer: it.yup.util.XMPPConsumer getConsumer()>/new it.yup.util.XMPPConsumer/0	it.yup.util.XMPPConsumer
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/new java.io.DataInputStream/0	java.io.DataInputStream
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmpp.FTReceiver/0	it.yup.xmpp.FTReceiver
<it.yup.tests.RMSTestMidlet: void testJoin(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/new java.util.Date/0	java.util.Date
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<com.jcraft.jzlib.ZStream: int inflateInit(int,boolean)>/new com.jcraft.jzlib.Inflate/0	com.jcraft.jzlib.Inflate
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/7	java.lang.String[]
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/1	javax.microedition.lcdui.ChoiceGroup
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/2	it.yup.xmlstream.EventQuery
<it.yup.tests.RMSTestMidlet: void testJoin(it.yup.util.RMSIndex)>/new java.lang.String/0	java.lang.String
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/new it.yup.xmlstream.AccountRegistration/0	it.yup.xmlstream.AccountRegistration
<lampiro.screens.MMScreen: void showAudio()>/new lampiro.screens.InnerMMScreen/0	lampiro.screens.InnerMMScreen
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/new java.lang.NullPointerException/1	java.lang.NullPointerException
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/3	java.lang.String[]
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/3	javax.microedition.lcdui.Command
<it.yup.xmpp.MUC: void <init>(java.lang.String,java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.screens.RosterScreen: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new boolean[]/0	boolean[]
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.xmpp.FTSender: void sendFooter()>/new java.lang.String[]/3	java.lang.String[]
<it.yup.xmlstream.SASLAuthenticator: java.lang.String unparse(java.util.Hashtable)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UITextField/2	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<lampiro.screens.AlbumScreen: void loadFiles()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/4	javax.microedition.lcdui.Command
<it.yup.tests.RMSTestMidlet: void testLong(it.yup.util.RMSIndex)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/18	it.yup.ui.UILabel
<it.yup.xml.Element: void <init>(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/new java.io.OutputStreamWriter/1	java.io.OutputStreamWriter
<it.yup.screens.RosterScreen: void paintHeader(javax.microedition.lcdui.Graphics)>/new java.lang.StringBuilder/0	java.lang.StringBuilder	@x_notTiming
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/new java.lang.NullPointerException/3	java.lang.NullPointerException
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/0	char[]
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.RMSTestMidlet: void testLong(it.yup.util.RMSIndex)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmpp.FTSender: void initiateInteraction()>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Presence[]/1	it.yup.xmpp.packets.Presence[]
<it.yup.tests.TestMidlet: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.XMLTestMidlet: void testPerformances()>/new it.yup.xml.KXmlParser/0	it.yup.xml.KXmlParser
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/15	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>/new java.lang.String/0	java.lang.String
<it.yup.util.RMSIndex: void store(byte[],byte[])>/new it.yup.util.RMSIndex$Item/2	it.yup.util.RMSIndex$Item
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<lampiro.screens.ChatScreen: void <clinit>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.ui.UITextPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/new java.lang.RuntimeException/1	java.lang.RuntimeException
<it.yup.screens.AboutScreen: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIRadioButtons/0	it.yup.ui.UIRadioButtons
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmpp.FTSender: void sessionInitiate()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/new com.jcraft.jzlib.ZStreamException/0	com.jcraft.jzlib.ZStreamException
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.TestMidlet: void <init>()>/new it.yup.util.MetaVector/0	it.yup.util.MetaVector
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/new lampiro.screens.ChatScreen$ConversationEntry/0	lampiro.screens.ChatScreen$ConversationEntry
<lampiro.screens.KeyScreen: void checkKeys()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.transport.SocketChannel$UTFReader: int read(char[])>/new java.io.IOException/0	java.io.IOException
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/8	java.lang.String[]
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xmpp.FTSender: void sendChunk()>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/9	java.lang.Integer
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/new int[]/1	int[]
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen2()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.util.Date/0	java.util.Date
<it.yup.tests.XMPPTestClient: void startClient()>/new it.yup.xmlstream.SocketStream/0	it.yup.xmlstream.SocketStream
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.screens.RegisterScreen: void <init>()>/new boolean[]/0	boolean[]
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>/new com.jcraft.jzlib.ZStream/0	com.jcraft.jzlib.ZStream
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<com.jcraft.jzlib.Tree: void <clinit>()>/new int[]/2	int[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/9	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>/new byte[]/1	byte[]
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/0	int[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/5	java.lang.Integer
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.TextField/3	javax.microedition.lcdui.TextField
<lampiro.screens.MUCScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.tests.TestMidlet: void <init>()>/new java.lang.Object[]/0	java.lang.Object[]
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/new lampiro.screens.DataFormScreen/0	lampiro.screens.DataFormScreen
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/6	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.Deflate: void <init>()>/new com.jcraft.jzlib.Tree/1	com.jcraft.jzlib.Tree
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/2	java.lang.String[]
<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.BasicXmlStream$ListenerRegistration[]/0	it.yup.xmlstream.BasicXmlStream$ListenerRegistration[]
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/new it.yup.ui.UIRadioButtons$UIRadioButton/0	it.yup.ui.UIRadioButtons$UIRadioButton
<it.yup.xml.KXmlParser: void <init>()>/new int[]/1	int[]
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/new it.yup.xmpp.packets.DataForm$Field/0	it.yup.xmpp.packets.DataForm$Field
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/new it.yup.xml.KXmlParser/0	it.yup.xml.KXmlParser
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.xmpp.FTSender: void sendFooter()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/5	it.yup.ui.UITextField
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>/new java.lang.String[][]/0	java.lang.String[][]
<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/7	java.lang.Integer
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/3	javax.microedition.lcdui.Command
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.TextField/1	javax.microedition.lcdui.TextField
<it.yup.tests.RMSTestMidlet: void testLength(it.yup.util.RMSIndex)>/new byte[]/0	byte[]
<it.yup.ui.UIAccordion: void <init>()>/new it.yup.util.MetaVector/0	it.yup.util.MetaVector
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/new it.yup.xml.KXmlSerializer/0	it.yup.xml.KXmlSerializer
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/new java.lang.StringBuilder/0	java.lang.StringBuilder	@Timing
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.Contact: void addTask(it.yup.xmpp.Task)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.KeyScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UICombobox/1	it.yup.ui.UICombobox
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIMenu/4	it.yup.ui.UIMenu
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/33	it.yup.ui.UILabel
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UICombobox/3	it.yup.ui.UICombobox
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/new boolean[]/0	boolean[]
<it.yup.xmpp.Roster: void readFromStorage()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.KeyScreen: void checkKeys()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/3	java.lang.Integer
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/13	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/2	javax.microedition.lcdui.Command
<it.yup.util.RMSIndex: int[] getSizes()>/new int[]/1	int[]
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.MessageComposerScreen/0	it.yup.screens.MessageComposerScreen
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/new int[]/3	int[]
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <init>()>/new com.jcraft.jzlib.Tree/0	com.jcraft.jzlib.Tree
<it.yup.screens.RosterScreen: void <init>()>/new char[]/0	char[]
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>/new java.util.NoSuchElementException/0	java.util.NoSuchElementException
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/7	com.jcraft.jzlib.Deflate$Config
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>/new lampiro.screens.RosterScreen$UIGroup/0	lampiro.screens.RosterScreen$UIGroup
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.String/0	java.lang.String
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.AddContactScreen/0	lampiro.screens.AddContactScreen
<lampiro.screens.RosterScreen: void firstLoginIntro()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/new boolean[]/0	boolean[]
<it.yup.util.MetaVector: java.util.Enumeration elements()>/new it.yup.util.MetaVector$MultiVectorEnumeration/0	it.yup.util.MetaVector$MultiVectorEnumeration
<it.yup.xml.KXmlParser: java.lang.String getAttributeValue(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.screens.RosterScreen: void keyPressed(int)>/new it.yup.screens.ContactInfoScreen/0	it.yup.screens.ContactInfoScreen
<lampiro.screens.ChatScreen: void updateResource()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<com.jcraft.jzlib.StaticTree: void <clinit>()>/new short[]/0	short[]
<it.yup.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.io.IOException/2	java.io.IOException
<it.yup.xml.Element: void addText(java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xmlstream.Element: byte[] toXml()>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/new byte[]/2	byte[]
<it.yup.ui.UIEmoLabel: java.lang.Object[] findEmoTuple(java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,int)>/new com.jcraft.jzlib.ZStream/0	com.jcraft.jzlib.ZStream
<lampiro.screens.DebugScreen: void setupLogging()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<com.jcraft.jzlib.InfTree: void <clinit>()>/new int[]/3	int[]
<lampiro.screens.AboutScreen: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.transport.SocketChannel: it.yup.transport.SocketChannel$UTFReader getReader()>/new it.yup.transport.SocketChannel$UTFReader/0	it.yup.transport.SocketChannel$UTFReader
<lampiro.screens.DebugScreen: void <init>()>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.StatusScreen/0	lampiro.screens.StatusScreen
<it.yup.tests.RMSTestMidlet: void testJoin(it.yup.util.RMSIndex)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.TaskListScreen/0	it.yup.screens.TaskListScreen
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/new lampiro.screens.RegisterScreen/0	lampiro.screens.RegisterScreen
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/new it.yup.xml.Element/1	it.yup.xml.Element
<it.yup.screens.DataFormScreen: void createControls()>/new javax.microedition.lcdui.Spacer/0	javax.microedition.lcdui.Spacer
<it.yup.xmlstream.KXmlParser: void <init>()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/4	int[]
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String/0	java.lang.String
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<it.yup.screens.RosterScreen: void <init>()>/new char[]/3	char[]
<it.yup.tests.TestMidlet: void <init>()>/new javax.microedition.lcdui.Form/0	javax.microedition.lcdui.Form
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.xml.KXmlSerializer: void <init>()>/new int[]/0	int[]
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/9	char[]
<it.yup.xmlstream.SASLAuthenticator: java.lang.String unparse(java.util.Hashtable)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/new int[]/1	int[]
<it.yup.xmpp.Roster: void streamInitialized()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new java.io.DataInputStream/0	java.io.DataInputStream
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/new it.yup.ui.UITextPanel/0	it.yup.ui.UITextPanel
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen2()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.SubscribeScreen: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<com.jcraft.jzlib.Deflate: void <init>()>/new byte[]/0	byte[]
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>/new int[]/0	int[]
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$Thread1: void run()>/new lampiro.screens.MMScreen/0	lampiro.screens.MMScreen
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.MUCScreen: void populateRosterCombo()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.ZStream: void flush_pending()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>/new it.yup.ui.UIAccordion$AccordionItem/0	it.yup.ui.UIAccordion$AccordionItem
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/1	java.lang.String[]
<com.jcraft.jzlib.Tree: void gen_codes(short[],int,short[])>/new short[]/0	short[]
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<lampiro.screens.OptionsScreen: void saveOptions()>/new boolean[]/0	boolean[]
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/new it.yup.xmpp.Roster$IQResultListener1/0	it.yup.xmpp.Roster$IQResultListener1
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new java.lang.String[]/2	java.lang.String[]
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/new int[]/0	int[]
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/11	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: void paintHeader(javax.microedition.lcdui.Graphics)>/new java.lang.StringBuilder/1	java.lang.StringBuilder	@x_notTiming
<it.yup.xml.Element: void <init>(it.yup.xml.Element)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.screens.RegisterScreen: void _itemStateChanged(javax.microedition.lcdui.Item)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/new java.lang.IllegalStateException/0	java.lang.IllegalStateException
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/2	com.jcraft.jzlib.Deflate$Config
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/5	int[]
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<com.jcraft.jzlib.StaticTree: void <clinit>()>/new com.jcraft.jzlib.StaticTree/2	com.jcraft.jzlib.StaticTree
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/8	javax.microedition.lcdui.Command
<lampiro.screens.ChatScreen: void askTopic()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.util.RMSIndex: void <init>(java.lang.String)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.FTSender: void sessionInitiate()>/new it.yup.xmlstream.EventQuery/2	it.yup.xmlstream.EventQuery
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void updateResource()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new byte[]/0	byte[]
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/new int[]/2	int[]
<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>/new org.xmlpull.v1.XmlPullParserException/0	org.xmlpull.v1.XmlPullParserException
<lampiro.screens.SplashScreen: void <init>()>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.TextField/2	javax.microedition.lcdui.TextField
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.FTReceiver$OpenListener$PacketListener1/0	it.yup.xmpp.FTReceiver$OpenListener$PacketListener1
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new javax.microedition.lcdui.Image[]/0	javax.microedition.lcdui.Image[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/28	it.yup.ui.UILabel
<it.yup.xmpp.Group: void <clinit>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/new it.yup.xmpp.Roster$IQResultListener3/0	it.yup.xmpp.Roster$IQResultListener3
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/10	javax.microedition.lcdui.Command
<it.yup.xmpp.BluendoXMLRPC: it.yup.xml.Element read()>/new byte[]/0	byte[]
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new it.yup.xmlstream.EventQuery/2	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.InfTree: void <clinit>()>/new int[]/4	int[]
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder	@x_notGlider
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void xmppLogin(boolean)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/new java.lang.String[][]/0	java.lang.String[][]
<it.yup.util.ResourceManager: java.lang.String getString(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.ContactInfoScreen/0	lampiro.screens.ContactInfoScreen
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/35	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void exception(java.lang.String)>/new org.xmlpull.v1.XmlPullParserException/0	org.xmlpull.v1.XmlPullParserException
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.util.RMSIndex$KeyEnumeration: java.lang.Object nextElement()>/new java.util.NoSuchElementException/0	java.util.NoSuchElementException
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/8	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.AboutScreen/0	it.yup.screens.AboutScreen
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new int[]/0	int[]
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/new int[]/4	int[]
<it.yup.xmlstream.Element: it.yup.xmlstream.Element addElement(java.lang.String,java.lang.String)>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.tests.XMLTestMidlet: void testPerformances()>/new java.io.InputStreamReader/0	java.io.InputStreamReader
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/new it.yup.xmlstream.EventQueryRegistration/0	it.yup.xmlstream.EventQueryRegistration
<it.yup.util.MetaVector: void <init>(int,int)>/new java.util.Vector/0	java.util.Vector
<com.jcraft.jzlib.Tree: void <clinit>()>/new int[]/3	int[]
<it.yup.ui.UICanvas: java.util.Timer getTimer()>/new java.util.Timer/0	java.util.Timer
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/7	java.lang.StringBuilder
<it.yup.util.RMSIndex: void <init>(java.lang.String)>/new it.yup.util.RMSIndex$DefaultUTF8Comparator/0	it.yup.util.RMSIndex$DefaultUTF8Comparator
<it.yup.tests.UITestMidlet: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/1	int[]
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UISeparator/2	it.yup.ui.UISeparator
<lampiro.LampiroMidlet: void <init>()>/new it.yup.screens.SplashScreen/0	it.yup.screens.SplashScreen
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.MetaVector: java.lang.String toString()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.InfTree: void <clinit>()>/new int[]/0	int[]
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/6	char[]
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/5	java.lang.Object[]
<it.yup.screens.RosterScreen: void <init>()>/new char[]/6	char[]
<it.yup.xmpp.Roster: void streamInitialized()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.Roster: void streamInitialized()>/new it.yup.xmpp.Roster$RosterX/0	it.yup.xmpp.Roster$RosterX
<com.jcraft.jzlib.ZStream: void flush_pending()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.SASLAuthenticator$PacketListener1/0	it.yup.xmlstream.SASLAuthenticator$PacketListener1
<it.yup.xmpp.FTSender: void sendFooter()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextField/4	it.yup.ui.UITextField
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/new java.lang.String[]/2	java.lang.String[]
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.AlbumScreen: void loadFiles()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/5	java.lang.String[]
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new java.util.Vector/1	java.util.Vector
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.StatusScreen/0	lampiro.screens.StatusScreen
<it.yup.xml.KXmlSerializer: void setFeature(java.lang.String,boolean)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.Spacer/0	javax.microedition.lcdui.Spacer
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new java.lang.String[]/3	java.lang.String[]
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.Gauge/0	javax.microedition.lcdui.Gauge
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/new int[]/2	int[]
<it.yup.xmlstream.KXmlParser: void setInput(java.io.InputStream,java.lang.String)>/new org.xmlpull.v1.XmlPullParserException/0	org.xmlpull.v1.XmlPullParserException
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.String/2	java.lang.String
<it.yup.xmpp.MUC: void <init>(java.lang.String,java.lang.String)>/new java.util.Vector/0	java.util.Vector
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.String/0	java.lang.String
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<com.jcraft.jzlib.InfBlocks: void <clinit>()>/new int[]/1	int[]
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new java.util.Vector/1	java.util.Vector
<it.yup.xml.KXmlParser: void <init>()>/new int[]/0	int[]
<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/new lampiro.screens.FTScreen$FTItem/0	lampiro.screens.FTScreen$FTItem
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/7	javax.microedition.lcdui.Command
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/3	java.lang.String[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<com.jcraft.jzlib.Tree: void <clinit>()>/new int[]/1	int[]
<lampiro.screens.DebugScreen: void <init>()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmpp.XMPPClient$DiscoHandler/0	it.yup.xmpp.XMPPClient$DiscoHandler
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/1	it.yup.xmpp.packets.Iq
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/new lampiro.screens.RosterScreen$UIContact/0	lampiro.screens.RosterScreen$UIContact
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/new byte[]/0	byte[]
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xml.KXmlParser: java.lang.String getAttributeNamespace(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<it.yup.transport.SocketChannel$UTFReader: int read(char[],int,int)>/new java.io.IOException/0	java.io.IOException
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.CommandListScreen/0	it.yup.screens.CommandListScreen
<it.yup.xmpp.FTSender: void sendChunk()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIMenu/2	it.yup.ui.UIMenu
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/new java.lang.String[]/1	java.lang.String[]
<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>/new byte[]/0	byte[]
<it.yup.xmpp.IqManager: void streamInitialized()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.io.IOException/4	java.io.IOException
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<lampiro.screens.ChatScreen$UICutLabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.io.IOException/3	java.io.IOException
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/new int[]/2	int[]
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<lampiro.screens.DebugScreen: void <init>()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.xmpp.FTSender: void initiateInteraction()>/new java.lang.String[]/3	java.lang.String[]
<it.yup.xmpp.FTSender: void sendFooter()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.transport.SocketChannel: void open()>/new it.yup.transport.SocketChannel$Runnable1/0	it.yup.transport.SocketChannel$Runnable1
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/8	it.yup.xmlstream.EventQuery
<it.yup.ui.UIUtils: javax.microedition.lcdui.Image imageResize(javax.microedition.lcdui.Image,int,int)>/new int[]/1	int[]
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/9	it.yup.ui.UILabel
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/new int[]/1	int[]
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Presence/1	it.yup.xmpp.packets.Presence
<it.yup.xmlstream.Element: void setAttribute(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIButton/2	it.yup.ui.UIButton
<it.yup.xmlstream.Element: void <init>(java.lang.String,java.lang.String)>/new java.util.Vector/0	java.util.Vector
<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.Element: void <init>(it.yup.xml.Element)>/new java.lang.String[][]/0	java.lang.String[][]
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>/new short[]/1	short[]
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/new it.yup.xml.Element/0	it.yup.xml.Element
<com.jcraft.jzlib.ZStream: void <init>()>/new com.jcraft.jzlib.Adler32/0	com.jcraft.jzlib.Adler32
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.AlbumScreen: void loadFiles()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.Roster: void saveToStorage()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>/new lampiro.screens.FTScreen$FTItem/0	lampiro.screens.FTScreen$FTItem
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/new javax.microedition.lcdui.Alert/0	javax.microedition.lcdui.Alert
<it.yup.xmpp.FTSender: void sendFooter()>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/8	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/10	it.yup.xmlstream.EventQuery
<it.yup.xml.Element: void <init>(it.yup.xml.Element)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.DataFormScreen: void createControls()>/new boolean[]/0	boolean[]
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributeName(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.xml.KXmlParser: void read(char)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/new int[]/4	int[]
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.Gauge/0	javax.microedition.lcdui.Gauge
<com.jcraft.jzlib.InfBlocks: void <clinit>()>/new int[]/0	int[]
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new it.yup.xmlstream.BasicXmlStream$ResourceBinding/0	it.yup.xmlstream.BasicXmlStream$ResourceBinding
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/new java.lang.Integer/0	java.lang.Integer
<it.yup.util.RMSIndex: void store(byte[],byte[])>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.MUCComposer/0	lampiro.screens.MUCComposer
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<lampiro.screens.AlbumScreen: void loadFiles()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/new it.yup.screens.DataResultScreen/0	it.yup.screens.DataResultScreen
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UICombobox/4	it.yup.ui.UICombobox
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.SimpleComposerScreen/0	lampiro.screens.SimpleComposerScreen
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.ChatScreen$ForwardScreen/0	lampiro.screens.ChatScreen$ForwardScreen
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.Command/2	javax.microedition.lcdui.Command
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: java.lang.String getAttributePrefix(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.RosterScreen$MUCStateHandler/0	lampiro.screens.RosterScreen$MUCStateHandler
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.xmpp.FTSender: void sessionInitiate()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.Tree: void <clinit>()>/new byte[]/2	byte[]
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<it.yup.ui.Semaphore: void release(long)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.transport.SocketChannel$UTFReader: int getByte()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>/new byte[]/1	byte[]
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/6	java.lang.String[]
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.SASLAuthenticator: java.lang.String unparse(java.util.Hashtable)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmlstream.SocketStream: void connectionEstablished(it.yup.transport.BaseChannel)>/new java.lang.Thread/0	java.lang.Thread
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.screens.ChatScreen: it.yup.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[],int)>/new it.yup.screens.ChatScreen$ConversationEntry/0	it.yup.screens.ChatScreen$ConversationEntry
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xml.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<com.jcraft.jzlib.StaticTree: void <clinit>()>/new com.jcraft.jzlib.StaticTree/1	com.jcraft.jzlib.StaticTree
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/new int[]/0	int[]
<it.yup.transport.SocketChannel$UTFReader: void <init>(it.yup.transport.SocketChannel,java.io.InputStream)>/new byte[]/0	byte[]
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/6	java.lang.Object[]
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UIRadioButtons/0	it.yup.ui.UIRadioButtons
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>/new java.util.Vector/0	java.util.Vector
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/new it.yup.util.RMSIndex$Item/0	it.yup.util.RMSIndex$Item
<it.yup.xmlstream.KXmlParser: void <init>()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.xmpp.Roster: void streamInitialized()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/new int[]/0	int[]
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/6	javax.microedition.lcdui.Command
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<it.yup.xml.KXmlSerializer: void <init>()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.FTScreen: void fillScreen()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<it.yup.xmlstream.KXmlParser: void pushEntity()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <init>()>/new short[]/3	short[]
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.util.RMSIndex: void store(byte[],byte[])>/new it.yup.util.RMSIndex$Item/0	it.yup.util.RMSIndex$Item
<lampiro.screens.AlbumScreen: void <clinit>()>/new it.yup.util.RMSIndex/0	it.yup.util.RMSIndex
<lampiro.screens.RosterScreen: void authenticated()>/new java.lang.String[]/4	java.lang.String[]
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/new lampiro.screens.KeyScreen/0	lampiro.screens.KeyScreen
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Message/1	it.yup.xmpp.packets.Message
<com.jcraft.jzlib.Inflate: int inflateInit(com.jcraft.jzlib.ZStream,int)>/new com.jcraft.jzlib.InfBlocks/0	com.jcraft.jzlib.InfBlocks
<it.yup.util.MemoryLogConsumer: void <init>()>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.AlbumScreen: void loadFiles()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.xml.Element: it.yup.xml.Element clone()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/2	javax.microedition.lcdui.ChoiceGroup
<lampiro.screens.SplashScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel	@x_notGlider
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/4	it.yup.ui.UITextField
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.SASLAuthenticator$PacketListener3/0	it.yup.xmlstream.SASLAuthenticator$PacketListener3
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.DebugScreen/0	lampiro.screens.DebugScreen
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xml.KXmlParser: java.lang.String getAttributeName(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new byte[]/3	byte[]
<it.yup.xmpp.Contact: it.yup.xmpp.Task[] getTasks()>/new it.yup.xmpp.Task[]/1	it.yup.xmpp.Task[]
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<lampiro.screens.ChatScreen: void updateResource()>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.RosterScreen: void firstLoginIntro()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.AddContactScreen$IQResultListener2/0	lampiro.screens.AddContactScreen$IQResultListener2
<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.screens.DataFormScreen: void createControls()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/new java.util.Date/0	java.util.Date
<it.yup.xmpp.IqManager: void streamInitialized()>/new java.lang.String[]/1	java.lang.String[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/8	java.lang.Integer
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/5	com.jcraft.jzlib.Deflate$Config
<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>/new java.util.Date/0	java.util.Date
<it.yup.xmpp.packets.DataForm$Field: java.lang.String[] getOption(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.RMSTestMidlet$TestForm: void <init>(it.yup.tests.RMSTestMidlet,java.lang.String)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.screens.SplashScreen: void paint(javax.microedition.lcdui.Graphics)>/new it.yup.screens.SplashScreen$1/0	it.yup.screens.SplashScreen$1
<it.yup.util.RMSIndex: void store(byte[],byte[])>/new it.yup.util.RMSIndex$Item/1	it.yup.util.RMSIndex$Item
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/new lampiro.screens.RosterScreen$FileReceiveScreen/0	lampiro.screens.RosterScreen$FileReceiveScreen
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.TextField/2	javax.microedition.lcdui.TextField
<lampiro.screens.DataFormScreen: void fillForm()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.DeleteContactAlert/0	it.yup.screens.DeleteContactAlert
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.TextField/2	javax.microedition.lcdui.TextField
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIVLayout/1	it.yup.ui.UIVLayout
<lampiro.screens.FTScreen: void fillScreen()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new it.yup.xmpp.XMPPClient$1/0	it.yup.xmpp.XMPPClient$1
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/new lampiro.screens.DataFormScreen/0	lampiro.screens.DataFormScreen
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextField/2	it.yup.ui.UITextField
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/new it.yup.xmlstream.EventQueryRegistration/0	it.yup.xmlstream.EventQueryRegistration
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: void setFeature(java.lang.String,boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void setStatusLabel()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.OptionsScreen/0	lampiro.screens.OptionsScreen
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.StringItem/2	javax.microedition.lcdui.StringItem
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xmpp.CommandExecutor/0	it.yup.xmpp.CommandExecutor
<it.yup.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/19	it.yup.ui.UILabel
<it.yup.ui.UITextField: void computeRealHeight()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlSerializer: void check(boolean)>/new boolean[]/0	boolean[]
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/0	int[]
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<lampiro.screens.InnerMMScreen: void captureVideo()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/new java.lang.Boolean/0	java.lang.Boolean
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/10	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <init>()>/new short[]/0	short[]
<it.yup.xmlstream.Element: java.lang.String createUniqueId()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/5	java.lang.String[]
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.StringItem/3	javax.microedition.lcdui.StringItem
<it.yup.xmpp.FTSender: void sendFooter()>/new it.yup.xmpp.FTSender$IQResultListener4/0	it.yup.xmpp.FTSender$IQResultListener4
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/7	java.lang.String[]
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>/new lampiro.screens.FTScreen/0	lampiro.screens.FTScreen
<it.yup.screens.StatusScreen: void <init>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/16	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/new lampiro.screens.SendMMScreen/0	lampiro.screens.SendMMScreen
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/7	javax.microedition.lcdui.Command
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/new java.lang.StringBuilder/0	java.lang.StringBuilder	@not_plain_socket
<it.yup.screens.RosterScreen: void keyPressed(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UICombobox/2	it.yup.ui.UICombobox
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIAccordion/0	it.yup.ui.UIAccordion
<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.TextField/3	javax.microedition.lcdui.TextField
<it.yup.xmpp.FTSender: void sendFooter()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.screens.CommandListScreen/0	it.yup.screens.CommandListScreen
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullElement(org.xmlpull.v1.XmlPullParser)>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<it.yup.util.XMPPConsumer: void <init>()>/new java.util.Vector/1	java.util.Vector
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIAccordion/1	it.yup.ui.UIAccordion
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/new int[]/3	int[]
<it.yup.xmpp.XMPPClient: int[] getTraffic()>/new int[]/0	int[]
<lampiro.screens.RegisterScreen: void placeWizard()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<lampiro.screens.KeyScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Presence[]/0	it.yup.xmpp.packets.Presence[]
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[][]/1	int[][]
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlParser: void <init>()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/new it.yup.xmlstream.BasicXmlStream$ListenerRegistration/0	it.yup.xmlstream.BasicXmlStream$ListenerRegistration
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>/new it.yup.ui.UIAccordion$AccordionItem/0	it.yup.ui.UIAccordion$AccordionItem
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new it.yup.xmlstream.BasicXmlStream$SessionOpener/0	it.yup.xmlstream.BasicXmlStream$SessionOpener
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/5	it.yup.xmlstream.EventQuery
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.StringItem/1	javax.microedition.lcdui.StringItem
<it.yup.tests.RMSTestMidlet: void testLength(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.DataFormScreen: void createControls()>/new boolean[]/0	boolean[]
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/7	it.yup.xmlstream.EventQuery
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<lampiro.screens.AlbumScreen: void loadFiles()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/new java.io.DataInputStream/0	java.io.DataInputStream
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UICheckbox/1	it.yup.ui.UICheckbox
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>/new boolean[]/0	boolean[]
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/8	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.ui.UIUtils: int medColor(int,int)>/new int[]/0	int[]
<lampiro.screens.ShowMMScreen: void init()>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xmpp.FTSender/0	it.yup.xmpp.FTSender
<lampiro.screens.RegisterScreen: void placeWizard()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.xmlstream.KXmlSerializer: java.lang.Object getProperty(java.lang.String)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/new java.lang.String/0	java.lang.String
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream)>/new com.jcraft.jzlib.ZStream/0	com.jcraft.jzlib.ZStream
<it.yup.util.MetaVector: void <init>(int,int)>/new java.util.Vector/1	java.util.Vector
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIButton/3	it.yup.ui.UIButton
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmlstream.SocketStream: void restart()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/new it.yup.transport.SocketChannel/0	it.yup.transport.SocketChannel	@not_plain_socket
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.xmpp.Group: it.yup.xml.Element store()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/3	int[]
<it.yup.util.RMSIndex: void store(byte[],byte[])>/new it.yup.util.RMSIndex$Item/3	it.yup.util.RMSIndex$Item
<it.yup.tests.RMSTestMidlet: void testLong(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIEmoLabel: java.lang.Object[] findEmoTuple(java.lang.String)>/new java.lang.Integer/0	java.lang.Integer
<it.yup.xmpp.IqManager: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.util.Utils: java.lang.String bytesToHex(byte[])>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[][]/1	int[][]
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.Element: void addElement(it.yup.xml.Element)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xmpp.IqManager: void streamInitialized()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/new lampiro.screens.ChatScreen$UICutLabel/0	lampiro.screens.ChatScreen$UICutLabel
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.OptionsScreen$1/0	it.yup.screens.OptionsScreen$1
<lampiro.screens.RosterScreen: void authenticated()>/new java.lang.String[]/3	java.lang.String[]
<it.yup.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmpp.XMPPClient$PacketListener1/0	it.yup.xmpp.XMPPClient$PacketListener1
<it.yup.xmpp.CommandExecutor: void display_internal()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.xml.KXmlSerializer: void check(boolean)>/new int[]/0	int[]
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.transport.SocketChannel$UTFReader: int read()>/new java.lang.StringBuilder/0	java.lang.StringBuilder	@Compression
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/new int[]/4	int[]
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xmpp.XMPPClient: void <init>()>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.OptionsScreen: void <init>()>/new boolean[]/0	boolean[]
<it.yup.ui.UIEmoLabel: void initialize()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>/new it.yup.xmpp.XMPPClient/0	it.yup.xmpp.XMPPClient
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/13	java.lang.Integer
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/36	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void <init>()>/new it.yup.util.RMSIndex/0	it.yup.util.RMSIndex
<com.jcraft.jzlib.InfTree: void <clinit>()>/new int[]/2	int[]
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream)>/new byte[]/0	byte[]
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/26	it.yup.ui.UILabel
<it.yup.xmpp.Roster: void recreateRoster(it.yup.xml.Element,boolean)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.ui.UIEmoLabel: void initialize()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>/new lampiro.screens.CommandListScreen/0	lampiro.screens.CommandListScreen
<it.yup.xmpp.FTSender: void sessionInitiate()>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/3	javax.microedition.lcdui.Command
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<it.yup.screens.AboutScreen: void <clinit>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UICombobox/2	it.yup.ui.UICombobox
<it.yup.ui.UILabel: int[] divideAP()>/new int[]/0	int[]
<it.yup.tests.XMLTestMidlet: void testPerformances()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/17	it.yup.ui.UILabel
<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>/new java.lang.String/1	java.lang.String
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIMenu/2	it.yup.ui.UIMenu
<lampiro.screens.SubscribeScreen: lampiro.screens.SubscribeScreen getUserSubscription()>/new lampiro.screens.SubscribeScreen/0	lampiro.screens.SubscribeScreen
<com.jcraft.jzlib.Tree: void <clinit>()>/new int[]/4	int[]
<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/29	it.yup.ui.UILabel
<lampiro.screens.RegisterScreen: void <init>()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void updateHeader()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xmlstream.KXmlSerializer: void <init>()>/new int[]/0	int[]
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/5	int[]
<lampiro.screens.RegisterScreen: void setStatusLabel()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/new it.yup.ui.UIGauge$Ticker/0	it.yup.ui.UIGauge$Ticker
<it.yup.tests.RMSTestMidlet: void testJoin(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new java.lang.StringBuffer/1	java.lang.StringBuffer
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/12	it.yup.ui.UILabel
<it.yup.ui.UIScreen: void swap(int,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<lampiro.screens.FTScreen: void fillScreen()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmpp.FTSender: void sessionInitiate()>/new it.yup.xmpp.FTSender$IQResultListener1/0	it.yup.xmpp.FTSender$IQResultListener1
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/4	java.lang.Integer
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.RosterScreen: void authenticated()>/new java.lang.String[]/5	java.lang.String[]
<it.yup.xmpp.IqManager: void purge()>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>/new lampiro.screens.RosterScreen/0	lampiro.screens.RosterScreen
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<com.jcraft.jzlib.StaticTree: void <clinit>()>/new short[]/1	short[]
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getLabel()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UITextField: void <clinit>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.screens.RosterScreen: void <init>()>/new char[]/4	char[]
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/2	it.yup.xmlstream.EventQuery
<it.yup.screens.DataFormScreen: void createControls()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.RegisterScreen: void <init>()>/new it.yup.screens.RegisterScreen$ItemStateListener1/0	it.yup.screens.RegisterScreen$ItemStateListener1
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/8	char[]
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/3	int[]
<lampiro.screens.RegisterScreen: void checkLogin()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/9	java.lang.StringBuilder
<it.yup.ui.UIGauge: void start()>/new it.yup.ui.UIGauge$Ticker/0	it.yup.ui.UIGauge$Ticker
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.xmpp.Roster: void recreateRoster(it.yup.xml.Element,boolean)>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void <clinit>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.ui.UIUtils: void <clinit>()>/new char[][]/0	char[][]
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>/new it.yup.xmpp.Config/0	it.yup.xmpp.Config
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIMenu/3	it.yup.ui.UIMenu
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UIHLayout/1	it.yup.ui.UIHLayout
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void <init>()>/new it.yup.tests.RMSTestMidlet$TestForm/0	it.yup.tests.RMSTestMidlet$TestForm
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/6	java.lang.StringBuilder
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new java.io.DataOutputStream/0	java.io.DataOutputStream
<com.jcraft.jzlib.InfTree: void <clinit>()>/new int[]/5	int[]
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/new int[]/1	int[]
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/15	it.yup.ui.UILabel
<it.yup.tests.XMLTestMidlet: void <init>()>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmlstream.BasicXmlStream: void <clinit>()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.Roster: void streamInitialized()>/new java.lang.String[]/3	java.lang.String[]
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/new org.xmlpull.v1.XmlPullParserException/0	org.xmlpull.v1.XmlPullParserException
<it.yup.tests.XMPPTestClient: void startClient()>/new it.yup.transport.SocketChannel/0	it.yup.transport.SocketChannel
<it.yup.util.XMPPConsumer: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.SASLAuthenticator: void <init>()>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.RosterScreen: void authenticated()>/new java.lang.String[]/2	java.lang.String[]
<com.jcraft.jzlib.StaticTree: void <clinit>()>/new com.jcraft.jzlib.StaticTree/0	com.jcraft.jzlib.StaticTree
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/22	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void exception(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/new java.util.Vector/1	java.util.Vector
<it.yup.transport.SocketChannel$UTFReader: int read()>/new java.io.IOException/0	java.io.IOException	@Compression
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/1	javax.microedition.lcdui.ChoiceGroup
<it.yup.transport.SocketChannel: void sendContent(byte[])>/new it.yup.transport.SocketChannel$TimerTask1/0	it.yup.transport.SocketChannel$TimerTask1
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.GrpMessageComposerScreen/0	lampiro.screens.GrpMessageComposerScreen
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/5	it.yup.ui.UILabel
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributePrefix(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/2	char[]
<it.yup.xmpp.Roster: void recreateRoster(it.yup.xml.Element,boolean)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new java.io.DataOutputStream/0	java.io.DataOutputStream
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/8	java.lang.String[]
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<com.jcraft.jzlib.Tree: void <clinit>()>/new byte[]/1	byte[]
<it.yup.xmpp.FTSender: void initiateInteraction()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/new com.jcraft.jzlib.InfCodes/0	com.jcraft.jzlib.InfCodes
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<lampiro.screens.SubscribeScreen: lampiro.screens.SubscribeScreen getComponentSubscription(it.yup.xmpp.Contact)>/new lampiro.screens.SubscribeScreen/0	lampiro.screens.SubscribeScreen
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/4	com.jcraft.jzlib.Deflate$Config
<it.yup.xml.KXmlParser: void push(int)>/new char[]/0	char[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/6	it.yup.ui.UILabel
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new byte[]/3	byte[]
<it.yup.screens.RosterScreen: void filter_contacts(boolean)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/3	java.lang.String[]
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/0	int[]
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[]/6	int[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/26	it.yup.ui.UILabel
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/new java.io.DataOutputStream/0	java.io.DataOutputStream
<it.yup.util.RMSIndex: int[] getSizes()>/new int[]/0	int[]
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<lampiro.screens.AlbumScreen: void loadFiles()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.ui.UIGauge: void setValue(int)>/new java.lang.IllegalArgumentException/0	java.lang.IllegalArgumentException
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/new java.lang.String[]/3	java.lang.String[]
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>/new it.yup.ui.UICanvas/0	it.yup.ui.UICanvas
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.ui.UICombobox: void append(java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/4	javax.microedition.lcdui.Command
<it.yup.screens.DebugScreen: void <init>()>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/new it.yup.ui.UICheckbox/1	it.yup.ui.UICheckbox
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/2	int[]
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/5	int[]
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmpp.XMPPClient$PresenceHandler/0	it.yup.xmpp.XMPPClient$PresenceHandler
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Message/1	it.yup.xmpp.packets.Message
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/new lampiro.screens.ShowMMScreen/0	lampiro.screens.ShowMMScreen
<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>/new it.yup.util.MemoryLogConsumer/0	it.yup.util.MemoryLogConsumer
<it.yup.xmlstream.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.IqManager: void streamInitialized()>/new java.lang.String[]/3	java.lang.String[]
<it.yup.xml.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.ui.UICombobox: void append(java.lang.String)>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<it.yup.xmlstream.SocketStream: void initialize(java.lang.String,java.lang.String)>/new it.yup.xml.KXmlParser/0	it.yup.xml.KXmlParser
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/23	it.yup.ui.UILabel
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.xmpp.IqManager: void streamInitialized()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xml.BProcessor: int unlen(java.io.InputStream)>/new java.io.IOException/1	java.io.IOException
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.xml.KXmlParser: boolean adjustNsp()>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/new lampiro.screens.RosterScreen$AdHocCommandsHandler/0	lampiro.screens.RosterScreen$AdHocCommandsHandler
<it.yup.tests.RMSTestMidlet: void testLength(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextField/3	it.yup.ui.UITextField
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/6	it.yup.ui.UILabel
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.AboutScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void <init>()>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmpp.Config: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/2	it.yup.ui.UIButton
<it.yup.util.NetworkConsumer: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>/new com.jcraft.jzlib.ZStream/0	com.jcraft.jzlib.ZStream
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new boolean[]/0	boolean[]
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/new java.util.Date/0	java.util.Date
<it.yup.screens.RosterScreen: void chatWithSelected(boolean)>/new it.yup.screens.ChatScreen/0	it.yup.screens.ChatScreen
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/new java.lang.IllegalStateException/0	java.lang.IllegalStateException
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/new java.lang.IllegalStateException/0	java.lang.IllegalStateException
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/5	javax.microedition.lcdui.Command
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UILabel/7	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmpp.Roster: void loadGateways()>/new byte[]/0	byte[]
<it.yup.xmpp.IqManager: it.yup.xmpp.IqManager getInstance()>/new it.yup.xmpp.IqManager/0	it.yup.xmpp.IqManager
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.GroupsScreen/0	lampiro.screens.GroupsScreen
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/new it.yup.ui.UILabel[]/1	it.yup.ui.UILabel[]
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <init>()>/new javax.microedition.lcdui.Image[]/1	javax.microedition.lcdui.Image[]
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/new java.lang.IllegalStateException/0	java.lang.IllegalStateException
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.screens.RegisterScreen$1: void run()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xml.KXmlParser: void <init>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/10	java.lang.Integer
<lampiro.screens.AboutScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.RMSTestMidlet: void checkCoherency(it.yup.util.RMSIndex,java.util.Hashtable,java.util.Vector)>/new java.lang.String/0	java.lang.String
<lampiro.screens.FTScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<com.jcraft.jzlib.Deflate: void <init>()>/new com.jcraft.jzlib.Tree/2	com.jcraft.jzlib.Tree
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/new int[]/0	int[]
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/7	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void <init>()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new it.yup.screens.MessageComposerScreen$ItemCommandListener1/0	it.yup.screens.MessageComposerScreen$ItemCommandListener1
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UISeparator/1	it.yup.ui.UISeparator
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new byte[]/0	byte[]
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/5	char[]
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.SplashScreen: void checkKeys()>/new lampiro.screens.SplashScreen$UISplashTextField/0	lampiro.screens.SplashScreen$UISplashTextField
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.RosterScreen$AdHocCommandsHandler/0	it.yup.screens.RosterScreen$AdHocCommandsHandler
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/new java.util.Vector/0	java.util.Vector
<it.yup.xmlstream.BasicXmlStream: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.screens.RosterScreen: void <init>()>/new char[]/7	char[]
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/new java.util.Hashtable/1	java.util.Hashtable
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/new java.lang.String[]/0	java.lang.String[]
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.ImageItem/0	javax.microedition.lcdui.ImageItem
<it.yup.xmpp.packets.DataForm: void <clinit>()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/4	java.lang.String[]
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/4	java.lang.String[]
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new javax.microedition.lcdui.StringItem/1	javax.microedition.lcdui.StringItem
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.io.DataInputStream/0	java.io.DataInputStream
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/0	java.lang.Integer
<it.yup.xml.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/10	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void updateHeader()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.ShowMMScreen: void init()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<it.yup.xmlstream.KXmlParser: java.lang.String get(int)>/new java.lang.String/0	java.lang.String
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/new java.lang.IllegalArgumentException/1	java.lang.IllegalArgumentException
<it.yup.screens.ChatScreen: void <clinit>()>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.xmpp.FTReceiver$OpenListener: void <init>(it.yup.xmpp.FTReceiver)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/31	it.yup.ui.UILabel
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Presence[]/0	it.yup.xmpp.packets.Presence[]
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIMenu/2	it.yup.ui.UIMenu
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<it.yup.xmpp.packets.Presence: void setPriority(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.String/4	java.lang.String
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/new java.lang.String/0	java.lang.String
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<com.jcraft.jzlib.ZOutputStream: void finish()>/new com.jcraft.jzlib.ZStreamException/0	com.jcraft.jzlib.ZStreamException
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>/new byte[]/0	byte[]
<it.yup.screens.DataFormScreen: void createControls()>/new it.yup.screens.DataFormScreen$ListChoiceHandler/0	it.yup.screens.DataFormScreen$ListChoiceHandler
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new java.io.DataInputStream/0	java.io.DataInputStream
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen$Changer: void run()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/3	com.jcraft.jzlib.Deflate$Config
<com.jcraft.jzlib.InfCodes: void <clinit>()>/new int[]/0	int[]
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>/new short[]/0	short[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/32	it.yup.ui.UILabel
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/new java.io.OutputStreamWriter/1	java.io.OutputStreamWriter
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlSerializer: void check(boolean)>/new java.lang.IllegalStateException/0	java.lang.IllegalStateException
<it.yup.ui.UILayout: void <init>(int)>/new it.yup.ui.UIItem[]/0	it.yup.ui.UIItem[]
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/new java.lang.NullPointerException/0	java.lang.NullPointerException
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new java.io.DataOutputStream/0	java.io.DataOutputStream
<it.yup.xmpp.Roster: void loadGateways()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[][]/0	java.lang.Object[][]
<lampiro.screens.FTScreen: void fillScreen()>/new it.yup.ui.UIGauge/0	it.yup.ui.UIGauge
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.String/0	java.lang.String
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/new java.io.OutputStreamWriter/0	java.io.OutputStreamWriter
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/22	it.yup.ui.UILabel
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.Command/2	javax.microedition.lcdui.Command
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new byte[]/0	byte[]
<lampiro.screens.RegisterScreen: void placeWizard()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/new java.lang.NullPointerException/2	java.lang.NullPointerException
<it.yup.ui.UIScreen: void <init>()>/new java.util.Vector/2	java.util.Vector
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.packets.DataForm/0	it.yup.xmpp.packets.DataForm
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextField/5	it.yup.ui.UITextField
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String/1	java.lang.String
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/1	java.lang.Integer
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new java.io.ByteArrayOutputStream/1	java.io.ByteArrayOutputStream
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/new java.lang.NullPointerException/4	java.lang.NullPointerException
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/25	it.yup.ui.UILabel
<it.yup.xmpp.Config: void saveToStorage()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.io.IOException/1	java.io.IOException
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.String/3	java.lang.String
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new boolean[]/0	boolean[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/17	it.yup.ui.UILabel
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/new lampiro.screens.AddContactScreen$IQResultListener1/0	lampiro.screens.AddContactScreen$IQResultListener1
<it.yup.xml.Element: byte[] toXml()>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/new it.yup.ui.UILabel[]/0	it.yup.ui.UILabel[]
<it.yup.screens.RegisterScreen: void checkLogin()>/new boolean[]/0	boolean[]
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/3	it.yup.ui.UIButton
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.TextField/1	javax.microedition.lcdui.TextField
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.ShowMMScreen: void init()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void checkLogin()>/new boolean[]/0	boolean[]
<it.yup.xmpp.Roster: void recreateRoster(it.yup.xml.Element,boolean)>/new it.yup.xmpp.packets.Presence/0	it.yup.xmpp.packets.Presence
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream)>/new byte[]/1	byte[]
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/5	int[]
<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>/new java.util.Vector/0	java.util.Vector
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<lampiro.screens.FTScreen: void fillScreen()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/new lampiro.screens.MUCComposer/0	lampiro.screens.MUCComposer
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/new it.yup.xmpp.packets.Presence/1	it.yup.xmpp.packets.Presence
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/19	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.tests.XMPPTestClient: void startClient()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/new java.lang.String[]/2	java.lang.String[]
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/7	int[]
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new it.yup.util.RMSIndex/0	it.yup.util.RMSIndex
<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.Utils: java.lang.String bytesToHex(byte[])>/new java.io.PrintStream/0	java.io.PrintStream
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/9	it.yup.ui.UILabel
<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.tests.RMSTestMidlet: void testDb(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.RosterScreen$RegisterHandler/0	lampiro.screens.RosterScreen$RegisterHandler
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Presence/2	it.yup.xmpp.packets.Presence
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.Spacer/1	javax.microedition.lcdui.Spacer
<it.yup.screens.RegisterScreen: void <init>()>/new it.yup.screens.RegisterScreen$ItemCommandListener1/0	it.yup.screens.RegisterScreen$ItemCommandListener1
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.AddContactScreen/0	it.yup.screens.AddContactScreen
<it.yup.ui.UIEmoLabel: void initialize()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.Element: java.lang.String createUniqueId()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIScreen: void swap(int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/new it.yup.ui.UIEmoLabel/0	it.yup.ui.UIEmoLabel
<lampiro.screens.AlbumScreen: void loadAlbum()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.xmpp.Config: void saveToStorage()>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.AddContactScreen: void <init>()>/new java.util.Vector/0	java.util.Vector
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[][]/0	int[][]
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/0	int[]
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/6	it.yup.xmlstream.EventQuery
<lampiro.screens.AlbumScreen: void setupScreen()>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/new it.yup.ui.UICombobox$UIComboScreen/0	it.yup.ui.UICombobox$UIComboScreen
<lampiro.screens.ShowMMScreen: void init()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/new boolean[]/0	boolean[]
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.Element: it.yup.xmlstream.Element clone()>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/5	it.yup.ui.UILabel
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/16	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlParser: void <init>()>/new int[]/1	int[]
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/2	javax.microedition.lcdui.Command
<it.yup.xml.KXmlParser: void parseEndTag()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.FTSender: void sessionInitiate()>/new it.yup.xmpp.FTSender$PacketListener1/0	it.yup.xmpp.FTSender$PacketListener1
<lampiro.screens.SubscribeScreen: void <clinit>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.String[]/2	java.lang.String[]
<it.yup.util.RMSIndex: boolean open()>/new byte[]/0	byte[]
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UICombobox/1	it.yup.ui.UICombobox
<it.yup.ui.UICanvas: java.util.TimerTask initLongPress(it.yup.ui.UIScreen)>/new it.yup.ui.UICanvas$1/0	it.yup.ui.UICanvas$1
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/16	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/11	java.lang.StringBuilder
<it.yup.screens.OptionsScreen: void <init>()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.DataForm/0	it.yup.xmpp.packets.DataForm
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/new it.yup.xml.Element/1	it.yup.xml.Element
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.EventQuery/2	it.yup.xmlstream.EventQuery
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new byte[]/2	byte[]
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xml.Element/0	it.yup.xml.Element
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.RosterScreen: void chatWithSelected(boolean)>/new it.yup.screens.SimpleComposerScreen/0	it.yup.screens.SimpleComposerScreen
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/7	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/new lampiro.screens.SendMMScreen$UploadHandler/0	lampiro.screens.SendMMScreen$UploadHandler
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new javax.microedition.lcdui.Alert/0	javax.microedition.lcdui.Alert
<it.yup.xmpp.XMPPClient$DataFormHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.SimpleDataFormExecutor/0	it.yup.xmpp.SimpleDataFormExecutor
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/4	char[]
<it.yup.screens.RosterScreen: void <init>()>/new char[]/5	char[]
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/new it.yup.xmpp.Roster$IQResultListener2/0	it.yup.xmpp.Roster$IQResultListener2
<it.yup.screens.RegisterScreen: void checkLogin()>/new javax.microedition.lcdui.TextField[]/0	javax.microedition.lcdui.TextField[]
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/new javax.microedition.lcdui.List/0	javax.microedition.lcdui.List
<it.yup.tests.RMSTestMidlet: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<it.yup.xmpp.FTSender: void sendFooter()>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.String[]/3	java.lang.String[]
<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>/new int[]/0	int[]
<it.yup.screens.RosterScreen: void <init>()>/new char[]/8	char[]
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/1	it.yup.xmpp.packets.Iq
<it.yup.screens.DataFormScreen: void createControls()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.RosterScreen: void addGateway(java.util.Hashtable,java.lang.String,java.lang.String,javax.microedition.lcdui.Image,java.lang.String)>/new java.lang.Object[]/0	java.lang.Object[]
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/11	it.yup.ui.UILabel
<it.yup.xmpp.Group: void <init>(java.lang.String)>/new java.util.Vector/0	java.util.Vector
<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>/new it.yup.xmpp.Group/0	it.yup.xmpp.Group
<lampiro.screens.RosterScreen: void openContactMenu()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void pushEntity()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/new byte[]/1	byte[]
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/new it.yup.screens.DataFormScreen/0	it.yup.screens.DataFormScreen
<lampiro.screens.SplashScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<lampiro.screens.ShowMMScreen: void init()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.CommandListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.CommandExecutor/0	it.yup.xmpp.CommandExecutor
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/12	it.yup.ui.UILabel
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UITextField/1	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/new lampiro.screens.DataResultScreen/0	lampiro.screens.DataResultScreen
<lampiro.screens.AlbumScreen: void setupScreen()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/4	int[]
<it.yup.xmlstream.Element: it.yup.xmlstream.Element clone()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Integer/12	java.lang.Integer
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.tests.TestMidlet: void <init>()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xml.KXmlParser: java.lang.String get(int)>/new java.lang.String/0	java.lang.String
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>/new java.lang.String/0	java.lang.String
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<lampiro.screens.RegisterScreen: void placeWizard()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.MetaVector: void <init>(int)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.AlbumScreen: void <init>()>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.tests.RMSTestMidlet: void testDb(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/new org.bouncycastle.crypto.digests.MD5Digest/0	org.bouncycastle.crypto.digests.MD5Digest
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/new java.lang.String[]/1	java.lang.String[]
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/9	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen2()>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/new int[]/3	int[]
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/10	it.yup.ui.UILabel
<lampiro.screens.StatusScreen: void <init>()>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<lampiro.screens.ShowMMScreen: void init()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<com.jcraft.jzlib.ZStream: int deflateInit(int,int,boolean)>/new com.jcraft.jzlib.Deflate/0	com.jcraft.jzlib.Deflate
<it.yup.ui.UIUtils: int colorize(int,int)>/new int[]/0	int[]
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.SplashScreen: void <init>()>/new lampiro.screens.SplashScreen$1/0	lampiro.screens.SplashScreen$1
<lampiro.screens.MMScreen: void showAudio()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/new lampiro.screens.SendMMScreen/0	lampiro.screens.SendMMScreen
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/3	int[]
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/new int[]/3	int[]
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/6	it.yup.ui.UITextField
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.tests.TestMidlet: void <init>()>/new java.util.Vector/1	java.util.Vector
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config[]/0	com.jcraft.jzlib.Deflate$Config[]
<com.jcraft.jzlib.Deflate: void <init>()>/new short[]/1	short[]
<it.yup.xml.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/14	it.yup.ui.UILabel
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/1	java.lang.Object[]
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/9	java.lang.StringBuilder
<it.yup.screens.ChatScreen: it.yup.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[],int)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.transport.SocketChannel$Runnable1: void run()>/new it.yup.transport.BaseChannel$Sender/0	it.yup.transport.BaseChannel$Sender
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.AboutScreen/0	lampiro.screens.AboutScreen
<it.yup.ui.UIScreen: void <init>()>/new java.util.Vector/1	java.util.Vector
<it.yup.xmpp.BluendoXMLRPC: void open()>/new java.io.DataOutputStream/0	java.io.DataOutputStream
<lampiro.screens.ShowMMScreen: void init()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UICheckbox/0	it.yup.ui.UICheckbox
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.ui.UIScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void authenticated()>/new it.yup.xmlstream.EventQuery/4	it.yup.xmlstream.EventQuery
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/7	java.lang.String[]
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.FTSender: void initiateInteraction()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.xmpp.Contact: void updateExistingPresence(it.yup.xmpp.packets.Presence)>/new it.yup.xmpp.packets.Presence[]/0	it.yup.xmpp.packets.Presence[]
<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/3	java.lang.String[]
<it.yup.util.MetaVector: java.lang.Object elementAt(int)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.SimpleComposerScreen/0	it.yup.screens.SimpleComposerScreen
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new javax.microedition.lcdui.TextField/1	javax.microedition.lcdui.TextField
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.MessageComposerScreen/0	lampiro.screens.MessageComposerScreen
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.screens.DebugScreen: void <init>()>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.screens.ChatScreen: void keyPressed(int)>/new it.yup.screens.SimpleComposerScreen/0	it.yup.screens.SimpleComposerScreen
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/new int[]/2	int[]
<it.yup.tests.TestMidlet: void <init>()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.KXmlSerializer: void setFeature(java.lang.String,boolean)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>/new byte[]/1	byte[]
<it.yup.screens.ChatScreen: void showNotify()>/new it.yup.xmlstream.EventQuery/1	it.yup.xmlstream.EventQuery
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/4	javax.microedition.lcdui.Command
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/2	int[]
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/new java.lang.IllegalStateException/0	java.lang.IllegalStateException
<lampiro.screens.ShowMMScreen: void init()>/new it.yup.ui.UITextField/2	it.yup.ui.UITextField
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/25	it.yup.ui.UILabel
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/2	it.yup.xmlstream.EventQuery
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/new org.bouncycastle.crypto.digests.SHA1Digest/0	org.bouncycastle.crypto.digests.SHA1Digest
<it.yup.xml.KXmlParser: void setInput(java.io.InputStream,java.lang.String)>/new org.xmlpull.v1.XmlPullParserException/0	org.xmlpull.v1.XmlPullParserException
<lampiro.screens.RosterScreen: void authenticated()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object,int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.transport.BaseChannel: void <init>()>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/new lampiro.screens.SimpleComposerScreen/0	lampiro.screens.SimpleComposerScreen
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UICombobox/3	it.yup.ui.UICombobox
<it.yup.screens.AddContactScreen: void <init>()>/new javax.microedition.lcdui.ChoiceGroup/0	javax.microedition.lcdui.ChoiceGroup
<it.yup.util.MetaVector: void <init>()>/new java.util.Vector/1	java.util.Vector
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.SplashScreen: void checkKeys()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<lampiro.screens.ShowMMScreen$1: void run()>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<it.yup.screens.RosterScreen: void <init>()>/new char[][]/0	char[][]
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.xmpp.FTSender: void initiateInteraction()>/new it.yup.xmpp.FTSender$PacketListener2/0	it.yup.xmpp.FTSender$PacketListener2
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.OptionsScreen/0	lampiro.screens.OptionsScreen
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/3	it.yup.ui.UILabel
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>/new java.io.IOException/0	java.io.IOException
<lampiro.screens.OptionsScreen: void saveOptions()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmpp.FTSender: void initiateInteraction()>/new it.yup.xmpp.FTSender$IQResultListener3/0	it.yup.xmpp.FTSender$IQResultListener3
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/new lampiro.screens.RegisterScreen/1	lampiro.screens.RegisterScreen
<lampiro.screens.RegisterScreen: java.lang.String srvQuery()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<com.jcraft.jzlib.Tree: void <clinit>()>/new byte[]/0	byte[]
<it.yup.ui.UITextPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new it.yup.ui.UIEmoLabel/0	it.yup.ui.UIEmoLabel
<it.yup.xmlstream.Element: it.yup.xmlstream.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/new it.yup.xmlstream.Element/0	it.yup.xmlstream.Element
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UICheckbox/2	it.yup.ui.UICheckbox
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.xml.Element: void ensureCapacity(int,byte)>/new java.lang.Object[]/0	java.lang.Object[]
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.screens.RegisterScreen: void <init>()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<lampiro.screens.RosterScreen: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.SplashScreen: void <init>()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/6	java.lang.StringBuilder
<it.yup.xml.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<it.yup.ui.UIAccordion: void <init>()>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.AddContactScreen: void getGateways()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlParser: void read(char)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.tests.RMSTestMidlet: void testDb(it.yup.util.RMSIndex)>/new java.lang.String/1	java.lang.String
<it.yup.screens.RosterScreen: void paintRoster(javax.microedition.lcdui.Graphics)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>/new java.lang.RuntimeException/0	java.lang.RuntimeException
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/new java.lang.Boolean/1	java.lang.Boolean
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/3	it.yup.xmlstream.EventQuery
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>/new it.yup.xml.Element[]/0	it.yup.xml.Element[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/9	javax.microedition.lcdui.Command
<it.yup.screens.RegisterScreen: void login()>/new it.yup.screens.RegisterScreen$1/0	it.yup.screens.RegisterScreen$1
<lampiro.screens.DataFormScreen: void createControls()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<lampiro.screens.FTScreen: void <clinit>()>/new java.util.Vector/0	java.util.Vector
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/new byte[]/1	byte[]
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/7	it.yup.ui.UILabel
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/new byte[]/0	byte[]
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.StatusScreen/0	it.yup.screens.StatusScreen
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/6	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/new lampiro.screens.RosterScreen$IQResultListener1/0	lampiro.screens.RosterScreen$IQResultListener1
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.screens.RegisterScreen: it.yup.screens.RegisterScreen getInstance()>/new it.yup.screens.RegisterScreen/0	it.yup.screens.RegisterScreen
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/new java.lang.ArrayIndexOutOfBoundsException/0	java.lang.ArrayIndexOutOfBoundsException
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/8	it.yup.ui.UILabel
<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>/new it.yup.screens.RosterScreen/0	it.yup.screens.RosterScreen
<it.yup.xmlstream.KXmlParser: void nextImpl()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmpp.Config: void <clinit>()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmlstream.EventQuery/4	it.yup.xmlstream.EventQuery
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/6	com.jcraft.jzlib.Deflate$Config
<it.yup.xmpp.IqManager: void streamInitialized()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<lampiro.screens.AlbumScreen: void loadFiles()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new lampiro.screens.ChatScreen$MUCUpdateListener/0	lampiro.screens.ChatScreen$MUCUpdateListener
<lampiro.screens.AddContactScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.screens.DebugScreen: void <init>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/6	int[]
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.AddContactScreen: void getGateways()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/21	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>/new lampiro.screens.RosterScreen$Thread1/0	lampiro.screens.RosterScreen$Thread1
<it.yup.ui.UITextField: void paint(javax.microedition.lcdui.Graphics,int,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.Roster: void saveToStorage()>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>/new java.util.NoSuchElementException/0	java.util.NoSuchElementException
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UITextPanel/0	it.yup.ui.UITextPanel
<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance()>/new lampiro.screens.AlbumScreen/0	lampiro.screens.AlbumScreen
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/5	it.yup.ui.UILabel
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/5	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/new java.lang.Boolean/0	java.lang.Boolean
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/6	int[]
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/new int[][]/0	int[][]
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.String[]/2	java.lang.String[]
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.AboutScreen: void <clinit>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Message/1	it.yup.xmpp.packets.Message
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xmlstream.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/new java.lang.IllegalArgumentException/2	java.lang.IllegalArgumentException
<it.yup.util.RMSIndex: java.util.Enumeration keys()>/new it.yup.util.RMSIndex$KeyEnumeration/0	it.yup.util.RMSIndex$KeyEnumeration
<it.yup.tests.UITestMidlet$TestScreen$Changer: void run()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.KXmlParser: void <init>()>/new char[]/0	char[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/9	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/new it.yup.xml.Element/0	it.yup.xml.Element
<it.yup.util.RMSIndex: void store(byte[],byte[])>/new java.util.Vector/1	java.util.Vector
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.ui.UIScreen: void <init>()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmpp.FTSender: void initiateInteraction()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.tests.RMSTestMidlet: void testJoin(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/new lampiro.screens.ChatScreen/0	lampiro.screens.ChatScreen
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/3	javax.microedition.lcdui.Command
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.screens.ChatScreen: void checkUrls(java.lang.String)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/5	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/5	it.yup.ui.UIButton
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIButton/4	it.yup.ui.UIButton
<lampiro.screens.RegisterScreen: void login()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/1	int[]
<lampiro.screens.AlbumScreen: void <init>()>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.OptionsScreen: void <init>()>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<it.yup.xml.Element: void ensureCapacity(int,byte)>/new java.lang.String[][]/0	java.lang.String[][]
<it.yup.xml.Element: void removeAllElements()>/new java.lang.Object[]/0	java.lang.Object[]
<it.yup.xmlstream.KXmlParser: void push(int)>/new char[]/0	char[]
<it.yup.screens.RosterScreen: void <init>()>/new javax.microedition.lcdui.Command/8	javax.microedition.lcdui.Command
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/new byte[]/0	byte[]
<it.yup.ui.UIScreen: void <init>()>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<it.yup.ui.UITextPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/new it.yup.ui.UIEmoLabel/1	it.yup.ui.UIEmoLabel
<com.jcraft.jzlib.ZOutputStream: void finish()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.xmpp.XMPPClient: void openStream()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/new lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler/0	lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/new java.util.Vector/1	java.util.Vector
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIVLayout/0	it.yup.ui.UIVLayout
<it.yup.xmpp.Contact: void updateExistingPresence(it.yup.xmpp.packets.Presence)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/new it.yup.xmpp.XMPPClient$TimerTask1/0	it.yup.xmpp.XMPPClient$TimerTask1
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/27	it.yup.ui.UILabel
<lampiro.screens.RegisterScreen: void setStatusLabel()>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/new lampiro.screens.MUCScreen/0	lampiro.screens.MUCScreen
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen2()>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/6	it.yup.ui.UILabel
<lampiro.screens.RegisterScreen: void placeWizard()>/new it.yup.ui.UITextField/0	it.yup.ui.UITextField
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/4	int[]
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[][]/0	int[][]
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UIPanel/0	it.yup.ui.UIPanel
<it.yup.screens.RegisterScreen$1: void run()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/new lampiro.screens.RosterScreen$IQResultListener2/0	lampiro.screens.RosterScreen$IQResultListener2
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UICombobox/0	it.yup.ui.UICombobox
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/9	it.yup.ui.UILabel
<lampiro.screens.DataResultScreen: void showCurrent()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/10	it.yup.ui.UILabel
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/20	it.yup.ui.UILabel
<it.yup.screens.DataFormScreen: void createControls()>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<lampiro.screens.RosterScreen: void firstLoginIntro()>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.tests.UITestMidlet$KeysScreen: void keyPressed(int)>/new it.yup.tests.UITestMidlet$TestScreen/0	it.yup.tests.UITestMidlet$TestScreen
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UITextField/2	it.yup.ui.UITextField
<it.yup.xmpp.CommandExecutor: void display_internal()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xml.Element: java.lang.String getText()>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.xmpp.Contact/0	it.yup.xmpp.Contact
<it.yup.tests.RMSTestMidlet: void testDeletion(it.yup.util.RMSIndex)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void testDb(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.FTSender: void sendFile()>/new it.yup.xmpp.FTSender$IQResultListener2/0	it.yup.xmpp.FTSender$IQResultListener2
<it.yup.xmpp.XMPPClient: void openStream()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/new it.yup.screens.OptionsScreen/0	it.yup.screens.OptionsScreen
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributeNamespace(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new it.yup.ui.UIButton/1	it.yup.ui.UIButton
<it.yup.xml.KXmlParser: boolean adjustNsp()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RosterScreen: void <init>()>/new java.util.Hashtable/1	java.util.Hashtable
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/11	it.yup.ui.UILabel
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>/new it.yup.xml.Element[]/0	it.yup.xml.Element[]
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/new byte[]/0	byte[]
<it.yup.xmpp.FTSender: void sessionInitiate()>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.xmlstream.SASLAuthenticator: void gotChallenge(it.yup.xml.Element)>/new java.lang.String/1	java.lang.String
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/new it.yup.xmpp.XMPPClient$MessageHandler/0	it.yup.xmpp.XMPPClient$MessageHandler
<lampiro.screens.RosterScreen: void <init>()>/new it.yup.ui.UILabel/28	it.yup.ui.UILabel
<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>/new java.io.IOException/1	java.io.IOException
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.String/1	java.lang.String
<it.yup.screens.OptionsScreen: void <init>()>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/new java.io.IOException/0	java.io.IOException
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.xmlstream.Element: byte[] toXml()>/new it.yup.xmlstream.KXmlSerializer/0	it.yup.xmlstream.KXmlSerializer
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/12	it.yup.ui.UILabel
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/new it.yup.xmpp.packets.DataForm/0	it.yup.xmpp.packets.DataForm
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.util.Logger: void <clinit>()>/new java.util.Vector/0	java.util.Vector
<it.yup.ui.UIUtils: void <clinit>()>/new char[]/1	char[]
<lampiro.screens.DataResultScreen: void showCurrent()>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlParser: void <init>()>/new char[]/0	char[]
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/13	it.yup.ui.UILabel
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/new it.yup.xmlstream.SASLAuthenticator$PacketListener2/0	it.yup.xmlstream.SASLAuthenticator$PacketListener2
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UIButton/0	it.yup.ui.UIButton
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/new int[]/7	int[]
<it.yup.screens.RegisterScreen: void <init>()>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<it.yup.xmlstream.KXmlSerializer: void <init>()>/new boolean[]/0	boolean[]
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UIHLayout/2	it.yup.ui.UIHLayout
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[]/6	java.lang.String[]
<it.yup.xmlstream.KXmlParser: int getNamespaceCount(int)>/new java.lang.IndexOutOfBoundsException/0	java.lang.IndexOutOfBoundsException
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/new it.yup.xmpp.packets.Iq/0	it.yup.xmpp.packets.Iq
<it.yup.tests.RMSTestMidlet: void testLong(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/2	java.lang.StringBuilder
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/4	it.yup.ui.UILabel
<lampiro.screens.ShowMMScreen: void init()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.tests.RMSTestMidlet: void testFuncs(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/8	java.lang.StringBuilder
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/new javax.microedition.lcdui.Alert/0	javax.microedition.lcdui.Alert
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/6	it.yup.ui.UILabel
<it.yup.xmlstream.KXmlParser: void setInput(java.io.Reader)>/new java.util.Hashtable/0	java.util.Hashtable
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.ui.UICanvas: void <clinit>()>/new java.lang.Object[]/2	java.lang.Object[]
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/new java.io.ByteArrayInputStream/0	java.io.ByteArrayInputStream
<it.yup.util.RMSIndex$KeyEnumeration: void <init>(it.yup.util.RMSIndex)>/new java.util.Vector/0	java.util.Vector
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/2	javax.microedition.lcdui.Command
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new javax.microedition.lcdui.StringItem/0	javax.microedition.lcdui.StringItem
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.ui.UIScreen: void <init>()>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<it.yup.tests.XMPPTestClient: void <init>()>/new it.yup.tests.XMPPTestClient$Listener/0	it.yup.tests.XMPPTestClient$Listener
<it.yup.tests.RMSTestMidlet: void testMultiple(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new javax.microedition.lcdui.Command/0	javax.microedition.lcdui.Command
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/8	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void authenticated()>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.CommandExecutor: void display_internal()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/new it.yup.ui.UIMenu/0	it.yup.ui.UIMenu
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/new java.util.Vector/0	java.util.Vector
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmlstream.Element: void <init>(java.lang.String,java.lang.String)>/new java.util.Vector/1	java.util.Vector
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/new it.yup.ui.UISeparator/2	it.yup.ui.UISeparator
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.screens.DataFormScreen: void createControls()>/new javax.microedition.lcdui.TextField/0	javax.microedition.lcdui.TextField
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/new java.io.DataOutputStream/1	java.io.DataOutputStream
<lampiro.screens.AboutScreen: void <clinit>()>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/new java.lang.String[]/1	java.lang.String[]
<lampiro.screens.DataResultScreen: void showCurrent()>/new it.yup.ui.UILabel/2	it.yup.ui.UILabel
<it.yup.util.Utils: java.lang.String flags2str(boolean[],int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.util.Utils: void <clinit>()>/new java.util.Timer/0	java.util.Timer
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/new it.yup.ui.UILabel/7	it.yup.ui.UILabel
<lampiro.screens.SubscribeScreen: void <init>()>/new it.yup.ui.UIButton/2	it.yup.ui.UIButton
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new it.yup.ui.UILabel/7	it.yup.ui.UILabel
<it.yup.screens.ChatScreen: void showNotify()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.tests.RMSTestMidlet: void testJoin(it.yup.util.RMSIndex)>/new java.lang.StringBuilder/3	java.lang.StringBuilder
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/new it.yup.ui.UILabel/14	it.yup.ui.UILabel
<lampiro.screens.RosterScreen: void openContactMenu()>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.UITestMidlet: void <init>()>/new it.yup.tests.UITestMidlet$KeysScreen/0	it.yup.tests.UITestMidlet$KeysScreen
<it.yup.screens.RosterScreen: void <init>()>/new char[]/1	char[]
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/new it.yup.xmlstream.EventQuery/3	it.yup.xmlstream.EventQuery
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.XMPPClient: void <init>()>/new java.lang.StringBuilder/4	java.lang.StringBuilder
<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>/new java.util.Vector/0	java.util.Vector
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.xmpp.FTSender: void sendFooter()>/new it.yup.xmpp.FTSender$PacketListener3/0	it.yup.xmpp.FTSender$PacketListener3
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,int)>/new byte[]/1	byte[]
<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<com.jcraft.jzlib.Deflate: void <clinit>()>/new com.jcraft.jzlib.Deflate$Config/1	com.jcraft.jzlib.Deflate$Config
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/new java.io.ByteArrayOutputStream/0	java.io.ByteArrayOutputStream
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/new it.yup.ui.UILabel/1	it.yup.ui.UILabel
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/new it.yup.xmpp.packets.Message/0	it.yup.xmpp.packets.Message
<it.yup.ui.UIScreen: void <init>()>/new it.yup.ui.UISeparator/0	it.yup.ui.UISeparator
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<it.yup.xmpp.Roster: void <clinit>()>/new java.lang.String/0	java.lang.String
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.RegisterScreen: void <init>()>/new it.yup.ui.UIMenu/1	it.yup.ui.UIMenu
<lampiro.screens.InnerMMScreen: void startCapture()>/new lampiro.screens.InnerMMScreen$1/0	lampiro.screens.InnerMMScreen$1
<it.yup.screens.ChatScreen: it.yup.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[],int)>/new java.lang.StringBuffer/0	java.lang.StringBuffer
<it.yup.xmpp.Roster: void streamInitialized()>/new it.yup.xmlstream.EventQuery/0	it.yup.xmlstream.EventQuery
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/new int[][]/0	int[][]
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/new java.lang.StringBuilder/1	java.lang.StringBuilder
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new javax.microedition.lcdui.Command/1	javax.microedition.lcdui.Command
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/new it.yup.ui.UILabel/0	it.yup.ui.UILabel
<lampiro.screens.ShowMMScreen: void playAudio()>/new lampiro.screens.ShowMMScreen$1/0	lampiro.screens.ShowMMScreen$1
<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>/new java.lang.StringBuilder/0	java.lang.StringBuilder
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/new it.yup.ui.UILabel/5	it.yup.ui.UILabel
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/new it.yup.ui.UIHLayout/0	it.yup.ui.UIHLayout
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/new it.yup.xmpp.MUC/0	it.yup.xmpp.MUC
<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>/new java.lang.String[]/0	java.lang.String[]
<it.yup.xmpp.XMPPClient: void <clinit>()>/new java.lang.String[][]/0	java.lang.String[][]

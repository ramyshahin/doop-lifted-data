<Graph: Graph prim(Vertex)>/assign/instruction68	68	<Graph: Graph prim(Vertex)>/$r8	<Graph: Graph prim(Vertex)>/v#_584	<Vertex: java.lang.String pred>	<Graph: Graph prim(Vertex)>	@MSTPrim
<Vertex: void addWeight(int)>/assign/instruction10	10	<Vertex: void addWeight(int)>/weight#_0	<Vertex: void addWeight(int)>/$r4	<Neighbor: int weight>	<Vertex: void addWeight(int)>	@(Weighted) /\ (Weighted /\ GN_OnlyNeighbors)
<NumberWorkSpace: void preVisitAction(Vertex)>/assign/instruction8	8	<NumberWorkSpace: void preVisitAction(Vertex)>/$i0	<NumberWorkSpace: void preVisitAction(Vertex)>/v#_0	<Vertex: int vertexNumber>	<NumberWorkSpace: void preVisitAction(Vertex)>	@Number
<WorkSpaceTranspose: void preVisitAction(Vertex)>/assign/instruction6	6	<WorkSpaceTranspose: void preVisitAction(Vertex)>/$i0	<WorkSpaceTranspose: void preVisitAction(Vertex)>/v#_0	<Vertex: int strongComponentNumber>	<WorkSpaceTranspose: void preVisitAction(Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<Edge: void <init>(Vertex,Vertex,int)>/assign/instruction8	8	<Edge: void <init>(Vertex,Vertex,int)>/aweight#_0	<Edge: void <init>(Vertex,Vertex,int)>/this#_0	<Edge: int weight>	<Edge: void <init>(Vertex,Vertex,int)>	@EdgeObjects /\ Weighted
<RegionWorkSpace: void postVisitAction(Vertex)>/assign/instruction4	4	<RegionWorkSpace: void postVisitAction(Vertex)>/$i0	<RegionWorkSpace: void postVisitAction(Vertex)>/v#_0	<Vertex: int componentNumber>	<RegionWorkSpace: void postVisitAction(Vertex)>	@(Connected) /\ (Connected)
<Vertex$EdgeIter3: void <init>(Vertex)>/assign/instruction7	7	<Vertex$EdgeIter3: void <init>(Vertex)>/$r1	<Vertex$EdgeIter3: void <init>(Vertex)>/this#_0	<Vertex$EdgeIter3: java.util.Iterator iter>	<Vertex$EdgeIter3: void <init>(Vertex)>	@EdgeObjects /\ GEN_Edges
<Vertex$VertexIter2: void <init>(Vertex)>/assign/instruction3	3	<Vertex$VertexIter2: void <init>(Vertex)>/l1#_0	<Vertex$VertexIter2: void <init>(Vertex)>/this#_0	<Vertex$VertexIter2: Vertex this$0>	<Vertex$VertexIter2: void <init>(Vertex)>	@GN_OnlyNeighbors
<Graph: Graph kruskal()>/assign/instruction11	11	<Graph: Graph kruskal()>/$r1	<Graph: Graph kruskal()>/v_$$A_1#_407	<Vertex: java.util.LinkedList members>	<Graph: Graph kruskal()>	@MSTKruskal
<CycleWorkSpace: void <init>()>/assign/instruction4	4	<CycleWorkSpace: void <init>()>/$numconstant0	<CycleWorkSpace: void <init>()>/this#_0	<CycleWorkSpace: boolean AnyCycles>	<CycleWorkSpace: void <init>()>	@Cycle
<Graph: Graph kruskal()>/assign/instruction59	59	<Graph: Graph kruskal()>/urep#_440	<Graph: Graph kruskal()>/v_$$A_3#_432	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<FinishTimeWorkSpace: void postVisitAction(Vertex)>/assign/instruction6	6	<FinishTimeWorkSpace: void postVisitAction(Vertex)>/$i0	<FinishTimeWorkSpace: void postVisitAction(Vertex)>/v#_0	<Vertex: int finishTime>	<FinishTimeWorkSpace: void postVisitAction(Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<RegionWorkSpace: void nextRegionAction(Vertex)>/assign/instruction5	5	<RegionWorkSpace: void nextRegionAction(Vertex)>/$i1	<RegionWorkSpace: void nextRegionAction(Vertex)>/this#_0	<RegionWorkSpace: int counter>	<RegionWorkSpace: void nextRegionAction(Vertex)>	@(Connected) /\ (Connected)
<Graph: Graph kruskal()>/assign/instruction87	87	<Graph: Graph kruskal()>/vrep#_441	<Graph: Graph kruskal()>/urep#_440	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<WorkSpaceTranspose: void <init>()>/assign/instruction4	4	<WorkSpaceTranspose: void <init>()>/$numconstant0	<WorkSpaceTranspose: void <init>()>/this#_0	<WorkSpaceTranspose: int SCCCounter>	<WorkSpaceTranspose: void <init>()>	@StronglyConnected
<Graph$EdgeIter1: void <init>(Graph)>/assign/instruction3	3	<Graph$EdgeIter1: void <init>(Graph)>/l1#_0	<Graph$EdgeIter1: void <init>(Graph)>/this#_0	<Graph$EdgeIter1: Graph this$0>	<Graph$EdgeIter1: void <init>(Graph)>	@EdgeObjects
<FinishTimeWorkSpace: void <init>()>/assign/instruction4	4	<FinishTimeWorkSpace: void <init>()>/$numconstant0	<FinishTimeWorkSpace: void <init>()>/this#_0	<FinishTimeWorkSpace: int FinishCounter>	<FinishTimeWorkSpace: void <init>()>	@StronglyConnected
<Vertex: Vertex assignName(java.lang.String)>/assign/instruction3	3	<Vertex: Vertex assignName(java.lang.String)>/name#_0	<Vertex: Vertex assignName(java.lang.String)>/this#_0	<Vertex: java.lang.String name>	<Vertex: Vertex assignName(java.lang.String)>
<Graph: Graph prim(Vertex)>/assign/instruction18	18	<Graph: Graph prim(Vertex)>/$null1	<Graph: Graph prim(Vertex)>/root#_522	<Vertex: java.lang.String pred>	<Graph: Graph prim(Vertex)>	@MSTPrim
<Neighbor: void <init>(Vertex,int)>/assign/instruction6	6	<Neighbor: void <init>(Vertex,int)>/aweight#_0	<Neighbor: void <init>(Vertex,int)>/this#_0	<Neighbor: int weight>	<Neighbor: void <init>(Vertex,int)>	@Weighted /\ GN_OnlyNeighbors
<CycleWorkSpace: void preVisitAction(Vertex)>/assign/instruction10	10	<CycleWorkSpace: void preVisitAction(Vertex)>/$numconstant0	<CycleWorkSpace: void preVisitAction(Vertex)>/v#_0	<Vertex: int VertexColor>	<CycleWorkSpace: void preVisitAction(Vertex)>	@Cycle
<Graph: Graph prim(Vertex)>/assign/instruction8	8	<Graph: Graph prim(Vertex)>/$null0	<Graph: Graph prim(Vertex)>/x_$$A_1#_527	<Vertex: java.lang.String pred>	<Graph: Graph prim(Vertex)>	@MSTPrim
<RegionWorkSpace: void init_vertex(Vertex)>/assign/instruction4	4	<RegionWorkSpace: void init_vertex(Vertex)>/$numconstant0	<RegionWorkSpace: void init_vertex(Vertex)>/v#_0	<Vertex: int componentNumber>	<RegionWorkSpace: void init_vertex(Vertex)>	@(Connected) /\ (Connected)
<Neighbor: void <init>()>/assign/instruction8	8	<Neighbor: void <init>()>/$null2	<Neighbor: void <init>()>/this#_0	<Neighbor: Edge edge>	<Neighbor: void <init>()>	@GEN_Edges
<Graph: void <init>()>/assign/instruction10	10	<Graph: void <init>()>/$r1	<Graph: void <init>()>/this#_0	<Graph: java.util.LinkedList edges>	<Graph: void <init>()>	@GEN_Edges
<Vertex$EdgeIter3: void <init>(Vertex)>/assign/instruction3	3	<Vertex$EdgeIter3: void <init>(Vertex)>/l1#_0	<Vertex$EdgeIter3: void <init>(Vertex)>/this#_0	<Vertex$EdgeIter3: Vertex this$0>	<Vertex$EdgeIter3: void <init>(Vertex)>	@EdgeObjects /\ GEN_Edges
<Vertex: void init_vertex(WorkSpace)>/assign/instruction4	4	<Vertex: void init_vertex(WorkSpace)>/$numconstant0	<Vertex: void init_vertex(WorkSpace)>/this#_0	<Vertex: boolean visited>	<Vertex: void init_vertex(WorkSpace)>	@(SearchBase) /\ (SearchBase)
<Vertex$VertexIter3: void <init>(Vertex)>/assign/instruction3	3	<Vertex$VertexIter3: void <init>(Vertex)>/l1#_0	<Vertex$VertexIter3: void <init>(Vertex)>/this#_0	<Vertex$VertexIter3: Vertex this$0>	<Vertex$VertexIter3: void <init>(Vertex)>	@GEN_Edges
<Vertex$EdgeIter1: void <init>(Vertex)>/assign/instruction3	3	<Vertex$EdgeIter1: void <init>(Vertex)>/l1#_0	<Vertex$EdgeIter1: void <init>(Vertex)>/this#_0	<Vertex$EdgeIter1: Vertex this$0>	<Vertex$EdgeIter1: void <init>(Vertex)>	@EdgeObjects /\ G_NoEdges
<Vertex$EdgeIter1: void <init>(Vertex)>/assign/instruction7	7	<Vertex$EdgeIter1: void <init>(Vertex)>/$r1	<Vertex$EdgeIter1: void <init>(Vertex)>/this#_0	<Vertex$EdgeIter1: java.util.Iterator iter>	<Vertex$EdgeIter1: void <init>(Vertex)>	@EdgeObjects /\ G_NoEdges
<Neighbor: void <init>()>/assign/instruction6	6	<Neighbor: void <init>()>/$null1	<Neighbor: void <init>()>/this#_0	<Neighbor: Vertex end>	<Neighbor: void <init>()>	@GEN_Edges
<Edge: void <init>(Vertex,Vertex,int)>/assign/instruction7	7	<Edge: void <init>(Vertex,Vertex,int)>/the_end#_0	<Edge: void <init>(Vertex,Vertex,int)>/this#_0	<Edge: Vertex end>	<Edge: void <init>(Vertex,Vertex,int)>	@EdgeObjects
<Vertex$VertexIter3: void <init>(Vertex)>/assign/instruction7	7	<Vertex$VertexIter3: void <init>(Vertex)>/$r1	<Vertex$VertexIter3: void <init>(Vertex)>/this#_0	<Vertex$VertexIter3: java.util.Iterator iter>	<Vertex$VertexIter3: void <init>(Vertex)>	@GEN_Edges
<Neighbor: void <init>()>/assign/instruction4	4	<Neighbor: void <init>()>/$null0	<Neighbor: void <init>()>/this#_0	<Neighbor: Vertex neighbor>	<Neighbor: void <init>()>	@GN_OnlyNeighbors
<FinishTimeWorkSpace: void preVisitAction(Vertex)>/assign/instruction7	7	<FinishTimeWorkSpace: void preVisitAction(Vertex)>/$i1	<FinishTimeWorkSpace: void preVisitAction(Vertex)>/this#_0	<FinishTimeWorkSpace: int FinishCounter>	<FinishTimeWorkSpace: void preVisitAction(Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<Graph$Comparator3: void <init>(Graph)>/assign/instruction3	3	<Graph$Comparator3: void <init>(Graph)>/l1#_0	<Graph$Comparator3: void <init>(Graph)>/this#_0	<Graph$Comparator3: Graph this$0>	<Graph$Comparator3: void <init>(Graph)>	@MSTKruskal
<Graph: Graph kruskal()>/assign/instruction75	75	<Graph: Graph kruskal()>/vrep#_441	<Graph: Graph kruskal()>/vaux_$$A_4#_461	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<Graph: Graph kruskal()>/assign/instruction8	8	<Graph: Graph kruskal()>/v_$$A_1#_407	<Graph: Graph kruskal()>/v_$$A_1#_407	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<CycleWorkSpace: void <init>()>/assign/instruction6	6	<CycleWorkSpace: void <init>()>/$numconstant1	<CycleWorkSpace: void <init>()>/this#_0	<CycleWorkSpace: int counter>	<CycleWorkSpace: void <init>()>	@Cycle
<Vertex$VertexIter1: void <init>(Vertex)>/assign/instruction7	7	<Vertex$VertexIter1: void <init>(Vertex)>/$r1	<Vertex$VertexIter1: void <init>(Vertex)>/this#_0	<Vertex$VertexIter1: java.util.Iterator iter>	<Vertex$VertexIter1: void <init>(Vertex)>	@G_NoEdges
<Graph$EdgeIter1: void <init>(Graph)>/assign/instruction7	7	<Graph$EdgeIter1: void <init>(Graph)>/$r1	<Graph$EdgeIter1: void <init>(Graph)>/this#_0	<Graph$EdgeIter1: java.util.Iterator iter>	<Graph$EdgeIter1: void <init>(Graph)>	@EdgeObjects
<Vertex: void <init>()>/assign/instruction10	10	<Vertex: void <init>()>/$r1	<Vertex: void <init>()>/this#_0	<Vertex: java.util.LinkedList adjacentNeighbors>	<Vertex: void <init>()>	@GN_OnlyNeighbors
<VertexIter: void <init>(Graph)>/assign/instruction6	6	<VertexIter: void <init>(Graph)>/$r1	<VertexIter: void <init>(Graph)>/this#_0	<VertexIter: java.util.Iterator iter>	<VertexIter: void <init>(Graph)>
<Vertex: void <init>()>/assign/instruction4	4	<Vertex: void <init>()>/$null0	<Vertex: void <init>()>/this#_0	<Vertex: java.lang.String name>	<Vertex: void <init>()>
<FinishTimeWorkSpace: void postVisitAction(Vertex)>/assign/instruction5	5	<FinishTimeWorkSpace: void postVisitAction(Vertex)>/$i1	<FinishTimeWorkSpace: void postVisitAction(Vertex)>/this#_0	<FinishTimeWorkSpace: int FinishCounter>	<FinishTimeWorkSpace: void postVisitAction(Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<Vertex$EdgeIter2: void <init>(Vertex)>/assign/instruction3	3	<Vertex$EdgeIter2: void <init>(Vertex)>/l1#_0	<Vertex$EdgeIter2: void <init>(Vertex)>/this#_0	<Vertex$EdgeIter2: Vertex this$0>	<Vertex$EdgeIter2: void <init>(Vertex)>	@EdgeObjects /\ GN_OnlyNeighbors
<Edge: void <init>(Vertex,Vertex,int)>/assign/instruction6	6	<Edge: void <init>(Vertex,Vertex,int)>/the_start#_0	<Edge: void <init>(Vertex,Vertex,int)>/this#_0	<Edge: Vertex start>	<Edge: void <init>(Vertex,Vertex,int)>	@EdgeObjects
<Vertex$EdgeIter2: void <init>(Vertex)>/assign/instruction7	7	<Vertex$EdgeIter2: void <init>(Vertex)>/$r1	<Vertex$EdgeIter2: void <init>(Vertex)>/this#_0	<Vertex$EdgeIter2: java.util.Iterator iter>	<Vertex$EdgeIter2: void <init>(Vertex)>	@EdgeObjects /\ GN_OnlyNeighbors
<CycleWorkSpace: void preVisitAction(Vertex)>/assign/instruction8	8	<CycleWorkSpace: void preVisitAction(Vertex)>/$i0	<CycleWorkSpace: void preVisitAction(Vertex)>/v#_0	<Vertex: int VertexCycle>	<CycleWorkSpace: void preVisitAction(Vertex)>	@Cycle
<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/assign/instruction19	19	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/$numconstant1	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/this#_0	<CycleWorkSpace: boolean AnyCycles>	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>	@Cycle /\ Undirected
<Graph: Graph prim(Vertex)>/assign/instruction10	10	<Graph: Graph prim(Vertex)>/$numconstant0	<Graph: Graph prim(Vertex)>/x_$$A_1#_527	<Vertex: int key>	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph: void <init>()>/assign/instruction4	4	<Graph: void <init>()>/$numconstant0	<Graph: void <init>()>/this#_0	<Graph: boolean edgesNotBuilt>	<Graph: void <init>()>	@EdgeObjects
<Edge: void setWeight(int)>/assign/instruction3	3	<Edge: void setWeight(int)>/weight#_0	<Edge: void setWeight(int)>/this#_0	<Edge: int weight>	<Edge: void setWeight(int)>	@(EdgeObjects /\ Weighted) /\ (EdgeObjects /\ Weighted)
<Graph: Graph kruskal()>/assign/instruction48	48	<Graph: Graph kruskal()>/urep#_440	<Graph: Graph kruskal()>/vaux_$$A_2#_449	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<Graph: Graph kruskal()>/assign/instruction60	60	<Graph: Graph kruskal()>/urep#_440	<Graph: Graph kruskal()>/vrep#_441	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<Vertex: void nodeSearch(WorkSpace)>/assign/instruction8	8	<Vertex: void nodeSearch(WorkSpace)>/$numconstant0	<Vertex: void nodeSearch(WorkSpace)>/this#_0	<Vertex: boolean visited>	<Vertex: void nodeSearch(WorkSpace)>	@SearchBase
<NumberWorkSpace: void preVisitAction(Vertex)>/assign/instruction7	7	<NumberWorkSpace: void preVisitAction(Vertex)>/$i1	<NumberWorkSpace: void preVisitAction(Vertex)>/this#_0	<NumberWorkSpace: int vertexCounter>	<NumberWorkSpace: void preVisitAction(Vertex)>	@Number
<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/assign/instruction9	9	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/$numconstant0	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/this#_0	<CycleWorkSpace: boolean AnyCycles>	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>	@Cycle /\ Directed
<Neighbor: void setWeight(int)>/assign/instruction3	3	<Neighbor: void setWeight(int)>/weight#_0	<Neighbor: void setWeight(int)>/this#_0	<Neighbor: int weight>	<Neighbor: void setWeight(int)>	@(Weighted /\ GN_OnlyNeighbors) /\ (Weighted /\ GN_OnlyNeighbors)
<Graph$Comparator1: void <init>(Graph)>/assign/instruction3	3	<Graph$Comparator1: void <init>(Graph)>/l1#_0	<Graph$Comparator1: void <init>(Graph)>/this#_0	<Graph$Comparator1: Graph this$0>	<Graph$Comparator1: void <init>(Graph)>	@StronglyConnected
<Neighbor: void <init>(Vertex,int)>/assign/instruction5	5	<Neighbor: void <init>(Vertex,int)>/theNeighbor#_0	<Neighbor: void <init>(Vertex,int)>/this#_0	<Neighbor: Vertex neighbor>	<Neighbor: void <init>(Vertex,int)>	@GN_OnlyNeighbors
<NumberWorkSpace: void <init>()>/assign/instruction4	4	<NumberWorkSpace: void <init>()>/$numconstant0	<NumberWorkSpace: void <init>()>/this#_0	<NumberWorkSpace: int vertexCounter>	<NumberWorkSpace: void <init>()>	@Number
<Neighbor: void <init>(Vertex,Edge)>/assign/instruction5	5	<Neighbor: void <init>(Vertex,Edge)>/v#_0	<Neighbor: void <init>(Vertex,Edge)>/this#_0	<Neighbor: Vertex end>	<Neighbor: void <init>(Vertex,Edge)>	@GEN_Edges
<Vertex: void <init>()>/assign/instruction7	7	<Vertex: void <init>()>/$r0	<Vertex: void <init>()>/this#_0	<Vertex: java.util.LinkedList adjacentVertices>	<Vertex: void <init>()>	@G_NoEdges
<Vertex: void <init>()>/assign/instruction18	18	<Vertex: void <init>()>/$numconstant0	<Vertex: void <init>()>/this#_0	<Vertex: boolean visited>	<Vertex: void <init>()>	@SearchBase
<CycleWorkSpace: void postVisitAction(Vertex)>/assign/instruction7	7	<CycleWorkSpace: void postVisitAction(Vertex)>/$i1	<CycleWorkSpace: void postVisitAction(Vertex)>/this#_0	<CycleWorkSpace: int counter>	<CycleWorkSpace: void postVisitAction(Vertex)>	@(Cycle) /\ (Cycle)
<Graph: void runBenchmark(java.lang.String)>/assign/instruction5	5	<Graph: void runBenchmark(java.lang.String)>/$r0	<Graph: void runBenchmark(java.lang.String)>/this#_0	<Graph: java.io.Reader inFile>	<Graph: void runBenchmark(java.lang.String)>	@(Benchmark) /\ (Benchmark)
<CycleWorkSpace: void init_vertex(Vertex)>/assign/instruction4	4	<CycleWorkSpace: void init_vertex(Vertex)>/$numconstant0	<CycleWorkSpace: void init_vertex(Vertex)>/v#_0	<Vertex: int VertexCycle>	<CycleWorkSpace: void init_vertex(Vertex)>	@(Cycle) /\ (Cycle)
<Vertex$VertexIter2: void <init>(Vertex)>/assign/instruction7	7	<Vertex$VertexIter2: void <init>(Vertex)>/$r1	<Vertex$VertexIter2: void <init>(Vertex)>/this#_0	<Vertex$VertexIter2: java.util.Iterator iter>	<Vertex$VertexIter2: void <init>(Vertex)>	@GN_OnlyNeighbors
<CycleWorkSpace: void init_vertex(Vertex)>/assign/instruction6	6	<CycleWorkSpace: void init_vertex(Vertex)>/$numconstant1	<CycleWorkSpace: void init_vertex(Vertex)>/v#_0	<Vertex: int VertexColor>	<CycleWorkSpace: void init_vertex(Vertex)>	@(Cycle) /\ (Cycle)
<Graph: void <init>()>/assign/instruction7	7	<Graph: void <init>()>/$r0	<Graph: void <init>()>/this#_0	<Graph: java.util.LinkedList vertices>	<Graph: void <init>()>
<Graph$Comparator2: void <init>(Graph)>/assign/instruction3	3	<Graph$Comparator2: void <init>(Graph)>/l1#_0	<Graph$Comparator2: void <init>(Graph)>/this#_0	<Graph$Comparator2: Graph this$0>	<Graph$Comparator2: void <init>(Graph)>	@MSTPrim
<Neighbor: void <init>(Vertex,Edge)>/assign/instruction6	6	<Neighbor: void <init>(Vertex,Edge)>/e#_0	<Neighbor: void <init>(Vertex,Edge)>/this#_0	<Neighbor: Edge edge>	<Neighbor: void <init>(Vertex,Edge)>	@GEN_Edges
<WorkSpaceTranspose: void nextRegionAction(Vertex)>/assign/instruction5	5	<WorkSpaceTranspose: void nextRegionAction(Vertex)>/$i1	<WorkSpaceTranspose: void nextRegionAction(Vertex)>/this#_0	<WorkSpaceTranspose: int SCCCounter>	<WorkSpaceTranspose: void nextRegionAction(Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<Vertex$VertexIter1: void <init>(Vertex)>/assign/instruction3	3	<Vertex$VertexIter1: void <init>(Vertex)>/l1#_0	<Vertex$VertexIter1: void <init>(Vertex)>/this#_0	<Vertex$VertexIter1: Vertex this$0>	<Vertex$VertexIter1: void <init>(Vertex)>	@G_NoEdges
<Vertex: void <init>()>/assign/instruction16	16	<Vertex: void <init>()>/$r3	<Vertex: void <init>()>/this#_0	<Vertex: java.util.LinkedList weightsList>	<Vertex: void <init>()>	@Weighted /\ G_NoEdges
<Graph: Graph kruskal()>/assign/instruction86	86	<Graph: Graph kruskal()>/vrep#_441	<Graph: Graph kruskal()>/vxiter_$$A_2_$$A_1#_431	<Vertex: Vertex representative>	<Graph: Graph kruskal()>	@MSTKruskal
<Vertex: void <init>()>/assign/instruction13	13	<Vertex: void <init>()>/$r2	<Vertex: void <init>()>/this#_0	<Vertex: java.util.LinkedList neighbors>	<Vertex: void <init>()>	@GEN_Edges
<Vertex: void adjustAdorns(Neighbor)>/assign/instruction7	7	<Vertex: void adjustAdorns(Neighbor)>/$i0	<Vertex: void adjustAdorns(Neighbor)>/$r2	<Neighbor: int weight>	<Vertex: void adjustAdorns(Neighbor)>	@(GN_OnlyNeighbors) /\ (Weighted /\ GN_OnlyNeighbors)
<CycleWorkSpace: void preVisitAction(Vertex)>/assign/instruction7	7	<CycleWorkSpace: void preVisitAction(Vertex)>/$i1	<CycleWorkSpace: void preVisitAction(Vertex)>/this#_0	<CycleWorkSpace: int counter>	<CycleWorkSpace: void preVisitAction(Vertex)>	@Cycle
<CycleWorkSpace: void postVisitAction(Vertex)>/assign/instruction4	4	<CycleWorkSpace: void postVisitAction(Vertex)>/$numconstant0	<CycleWorkSpace: void postVisitAction(Vertex)>/v#_0	<Vertex: int VertexColor>	<CycleWorkSpace: void postVisitAction(Vertex)>	@(Cycle) /\ (Cycle)
<Graph: Graph prim(Vertex)>/assign/instruction16	16	<Graph: Graph prim(Vertex)>/$numconstant1	<Graph: Graph prim(Vertex)>/root#_522	<Vertex: int key>	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph: Graph prim(Vertex)>/assign/instruction66	66	<Graph: Graph prim(Vertex)>/wuv#_592	<Graph: Graph prim(Vertex)>/v#_584	<Vertex: int key>	<Graph: Graph prim(Vertex)>	@MSTPrim
<RegionWorkSpace: void <init>()>/assign/instruction4	4	<RegionWorkSpace: void <init>()>/$numconstant0	<RegionWorkSpace: void <init>()>/this#_0	<RegionWorkSpace: int counter>	<RegionWorkSpace: void <init>()>	@Connected

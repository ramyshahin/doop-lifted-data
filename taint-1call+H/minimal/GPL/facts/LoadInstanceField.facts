<Vertex: java.lang.String getName()>/assign/instruction2	2	<Vertex: java.lang.String getName()>/$r0	<Vertex: java.lang.String getName()>/this#_0	<Vertex: java.lang.String name>	<Vertex: java.lang.String getName()>
<Graph: void display()>/assign/instruction17	17	<Graph: void display()>/$r2	<Graph: void display()>/this#_0	<Graph: java.util.LinkedList vertices>	<Graph: void display()>
<Graph: void addVertex(Vertex)>/assign/instruction3	3	<Graph: void addVertex(Vertex)>/$r0	<Graph: void addVertex(Vertex)>/this#_0	<Graph: java.util.LinkedList vertices>	<Graph: void addVertex(Vertex)>
<Graph: void sortVertices(java.util.Comparator)>/assign/instruction3	3	<Graph: void sortVertices(java.util.Comparator)>/$r0	<Graph: void sortVertices(java.util.Comparator)>/this#_0	<Graph: java.util.LinkedList vertices>	<Graph: void sortVertices(java.util.Comparator)>
<VertexIter: Vertex next()>/assign/instruction2	2	<VertexIter: Vertex next()>/$r0	<VertexIter: Vertex next()>/this#_0	<VertexIter: java.util.Iterator iter>	<VertexIter: Vertex next()>
<Graph: void display()>/assign/instruction10	10	<Graph: void display()>/$r3	<Graph: void display()>/this#_0	<Graph: java.util.LinkedList vertices>	<Graph: void display()>
<VertexIter: void <init>(Graph)>/assign/instruction4	4	<VertexIter: void <init>(Graph)>/$r0	<VertexIter: void <init>(Graph)>/g#_0	<Graph: java.util.LinkedList vertices>	<VertexIter: void <init>(Graph)>
<VertexIter: boolean hasNext()>/assign/instruction2	2	<VertexIter: boolean hasNext()>/$r0	<VertexIter: boolean hasNext()>/this#_0	<VertexIter: java.util.Iterator iter>	<VertexIter: boolean hasNext()>
<Vertex: void display()>/assign/instruction28	28	<Vertex: void display()>/$r12	<Vertex: void display()>/this#_0	<Vertex: java.lang.String name>	<Vertex: void display()>
<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/assign/instruction12	12	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/$i1	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/vtarget#_0	<Vertex: int VertexColor>	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>
<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/assign/instruction6	6	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/$i5	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/vtarget#_0	<Vertex: int VertexColor>	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>

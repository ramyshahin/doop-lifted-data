\\"QueryTest\\"
Invalid holder name.
QueryTest
QueryTest
QueryTest
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
Transfer
<<\\"Account \\">>
From Account
To Account
Amount
Transaction History
Balance
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
yyyy/MM/dd  hh:mm:ss.SSS
QUERY_TEST
OK
<<\\"selecting record from \\">>
Port In Service	@(Replication) /\ (Replication)
Port Not in Service	@(Replication) /\ (Replication)
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Journal.update() has to be called at least once before Journal.append().
writing to
closing
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
creating
0000000000000000000
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
<<\\"Error reading file list from directory \\">>
Create
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
Prevayler
<<\\"Unexpected Exception: \\">>
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
update() must be called at least once
The replication logic is still under development.	@Replication
<<\\"Primes found: \\">>
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
Unexpected Exception was thrown.
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
Withdraw...
Withdrawal
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
Unexpected InterruptedException.	@(Replication) /\ (Replication)
SubscriberUpToDate	@(Replication) /\ (Replication)
<<\\"Prevayler Stubborn Client \\">>	@Replication
Unexpected Exception thrown.
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Disk space used: \\">>
<<\\"Attempted to apply transaction \\">>
journal
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
<<\\"Unable to serialize with Skaringa: \\">>
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
<<\\"Unable to deserialize with Skaringa: \\">>
<<\\"Unable to start Skaringa: \\">>
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
locked
Already locked internally
\n	@(Monitor) /\ (Monitor)
rw
<<\\"\\">>
Already locked externally
\n	@(Monitor) /\ (Monitor)
<<\\"\\">>
<<\\"\\">>
Deposit...
Deposit
00000
Amount must be greater than zero.
Amount maximum (10000) exceeded.
Runtime Exception simulated for rollback demonstration purposes.
<<\\"Attempted to process \\">>
Error
Edit
<<\\"Creating \\">>
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
setting AutoCommit to false
<<\\"insert into \\">>
demo2
inserting record
<<\\"preparing statement: \\">>
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
<<\\"SQLException \\">>
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
North
East
West
Center
South
Holder
demo1
#
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
<<\\"Exception loading JDBC driver class: \\">>
JDBC
<<\\"Exception while trying to connect: \\">>
New Account
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
systemVersion
executionTime
systemVersion
executionTime
Transfer...
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
Interesting accounts
Refresh
South
Match
Account
Balance
#Entries
Center
balance()
transactionHistory().size()
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
ScalabilityTest.properties
Creating the properties file.
<<HASH:1156460636>>
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
0.00
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
Unable to serialize transaction
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Unable to deserialize transaction
withQuery
Invalid parameter name \'
withQuery
Invalid parameter value \'
Chunk header corrupted
;=\r\n
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
Unexpected end of stream in chunk header
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
Bank
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
<<HASH:-595253473>>
OK
Journal.update() has to be called at least once before Journal.journal().
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
<<\\"Expected \\">>
update() must be called at least once
journal
xstreamjournal
skaringajournal
Read the javadoc to this method.
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
<<HASH:-279482281>>
Prevalence
The prevalent system must be configured.
Prevayler Network Server Receiver	@Replication
journal
All Accounts
snapshot	@(Snapshot) /\ (Snapshot)
Center
South
already closed
Delete
already closed
<<\\"Account not found: \\">>
NAME
<<\\"Unexpected Exception: \\">>
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
Primary suffix \'	@Snapshot
Transaction Test
snapshot	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
Query Test
NAME
hh:mm:ss
<<\\"Bank - \\">>
<<\\"update \\">>
<<\\"delete from \\">>
TRANSACTION_TEST
commiting transaction
updating record
deleting record

<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>/lampiro.screens.RosterScreen.access$5/0	<lampiro.screens.RosterScreen: java.lang.String access$5()>
<it.yup.ui.UIUtils: javax.microedition.lcdui.Image imageResize(javax.microedition.lcdui.Image,int,int)>/it.yup.ui.UIUtils.rescalaArray/0	<it.yup.ui.UIUtils: void rescalaArray(int[],int[],int,int,int,int,int,int,int)>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem,java.lang.String,java.lang.String)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.xmpp.FTSender: boolean supportFT(java.lang.String)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender: boolean supportFT(java.lang.String)>/it.yup.xmpp.FTSender.supportFT/0	<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>
<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance(java.lang.String)>/lampiro.screens.AlbumScreen.getInstance/0	<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/lampiro.screens.AlbumScreen.saveAlbum/0	<lampiro.screens.AlbumScreen: void saveAlbum()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/lampiro.screens.AlbumScreen.updateChildren/0	<lampiro.screens.AlbumScreen: void updateChildren()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/lampiro.screens.AlbumScreen.saveAlbum/0	<lampiro.screens.AlbumScreen: void saveAlbum()>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/lampiro.screens.AlbumScreen.updateChildren/0	<lampiro.screens.AlbumScreen: void updateChildren()>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>/it.yup.xmlstream.Element.load/0	<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>
<lampiro.screens.ShowMMScreen: int getFileType(java.lang.String)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>
<it.yup.xmpp.Contact: java.lang.String domain(java.lang.String)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/it.yup.xml.BSerializer.write/0	<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>
<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/lampiro.screens.RosterScreen.showNextScreen/0	<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/lampiro.screens.RosterScreen.showPreviousScreen/0	<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>
<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>
<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>/it.yup.xml.BProcessor.writeBinary/0	<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/it.yup.util.GoogleToken.encode/0	<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/it.yup.util.GoogleToken.encode/1	<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>
<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.FTScreen$FTItem.access$0/0	<lampiro.screens.FTScreen$FTItem: boolean access$0()>
<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>/lampiro.screens.FTScreen$FTItem.access$1/0	<lampiro.screens.FTScreen$FTItem: java.lang.Object access$1(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>/lampiro.screens.FTScreen$FTItem.access$2/0	<lampiro.screens.FTScreen$FTItem: void access$2(lampiro.screens.FTScreen$FTItem,int)>
<lampiro.screens.FTScreen: void ftAccept(it.yup.xmpp.FTSender,boolean)>/lampiro.screens.FTScreen$FTItem.access$1/0	<lampiro.screens.FTScreen$FTItem: java.lang.Object access$1(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void ftAccept(it.yup.xmpp.FTSender,boolean)>/lampiro.screens.FTScreen$FTItem.access$2/0	<lampiro.screens.FTScreen$FTItem: void access$2(lampiro.screens.FTScreen$FTItem,int)>
<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/lampiro.screens.FTScreen$FTItem.access$3/0	<lampiro.screens.FTScreen$FTItem: boolean access$3()>
<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>/lampiro.screens.FTScreen$FTItem.access$1/0	<lampiro.screens.FTScreen$FTItem: java.lang.Object access$1(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>/lampiro.screens.FTScreen$FTItem.access$8/0	<lampiro.screens.FTScreen$FTItem: void access$8(lampiro.screens.FTScreen$FTItem,int)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.KXmlProcessor._parse/0	<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullElement(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.KXmlProcessor._parse/0	<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>
<it.yup.util.Utils: java.lang.String hexDigest(java.lang.String,java.lang.String)>/it.yup.util.Utils.digest/0	<it.yup.util.Utils: byte[] digest(java.lang.String,java.lang.String)>
<it.yup.util.Utils: java.lang.String hexDigest(java.lang.String,java.lang.String)>/it.yup.util.Utils.bytesToHex/0	<it.yup.util.Utils: java.lang.String bytesToHex(byte[])>
<it.yup.util.Utils: byte[] digest(java.lang.String,java.lang.String)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.util.Utils: byte[] digest(java.lang.String,java.lang.String)>/it.yup.util.Utils.digest/0	<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.util.Utils: java.lang.String bytesToHex(byte[])>/it.yup.util.Utils.hexDigit/0	<it.yup.util.Utils: void hexDigit(java.io.PrintStream,byte)>
<it.yup.util.Utils: boolean is_jid(java.lang.String)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>
<it.yup.util.Utils: boolean is_email(java.lang.String)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>
<it.yup.util.Logger: void log(java.lang.String)>/it.yup.util.Logger.log/0	<it.yup.util.Logger: void log(java.lang.String,int)>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/org.xmlpull.v1.XmlPullParser.require/0	<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/org.xmlpull.v1.XmlPullParser.nextToken/0	<it.yup.xmlstream.KXmlParser: int nextToken()>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.getPopupList/0	<it.yup.ui.UIScreen: java.util.Vector getPopupList()>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.getMenu/1	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/org.xmlpull.v1.XmlPullParser.require/0	<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/org.xmlpull.v1.XmlPullParser.nextToken/0	<it.yup.xmlstream.KXmlParser: int nextToken()>
<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.util.Utils: boolean compareTo(it.yup.xmpp.Contact,it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.util.Utils: boolean compareTo(it.yup.xmpp.Contact,it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/1	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.xmlstream.BasicXmlStream: void removeEventListener(it.yup.xmlstream.EventQueryRegistration)>/it.yup.xmlstream.EventQueryRegistration.remove/0	<it.yup.xmlstream.EventQueryRegistration: void remove()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>()>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.util.Utils: java.lang.String flags2str(boolean[],int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.xmlstream.Element: java.lang.String createUniqueId()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<it.yup.xml.Element: java.lang.String createUniqueId()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/lampiro.screens.RosterScreen.access$4/1	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/lampiro.screens.RosterScreen.access$4/2	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/lampiro.screens.RosterScreen$UIGroup.toggleMenus/0	<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/lampiro.screens.RosterScreen$UIGroup.loadGroups/0	<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>
<lampiro.screens.SubscribeScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void <clinit>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.AlbumScreen: void <clinit>()>/lampiro.screens.AlbumScreen.loadAlbum/0	<lampiro.screens.AlbumScreen: void loadAlbum()>
<lampiro.screens.AlbumScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.ShowMMScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.FTScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.RosterScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.RegisterScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.RegisterScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.AboutScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.FTScreen.startFtreceive/0	<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$0/0	<lampiro.screens.RosterScreen: it.yup.xmpp.XMPPClient access$0(lampiro.screens.RosterScreen)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.util.MemoryLogConsumer.getConsumer/0	<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.MemoryLogConsumer.getConsumer/0	<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/1	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.ContactInfoScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/it.yup.ui.UIUtils.colorize/1	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/it.yup.ui.UIUtils.colorize/2	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/lampiro.screens.RosterScreen$UIGroup.saveGroups/0	<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.moveGroups/0	<lampiro.screens.RosterScreen$UIGroup: void moveGroups(it.yup.ui.UIAccordion,int,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.swapGroups/0	<lampiro.screens.RosterScreen$UIGroup: void swapGroups(it.yup.ui.UIAccordion,int,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.swapGroups/1	<lampiro.screens.RosterScreen$UIGroup: void swapGroups(it.yup.ui.UIAccordion,int,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.saveGroups/0	<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.xmpp.Group.getGroups/0	<it.yup.xmpp.Group: java.util.Hashtable getGroups()>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.MemoryLogConsumer.getConsumer/0	<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.Utils.is_email/0	<it.yup.util.Utils: boolean is_email(java.lang.String)>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/1	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void append(it.yup.ui.UILabel)>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void removeAt(int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void removeAll()>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox: void openMenu()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SubscribeScreen.releaseScreen/0	<lampiro.screens.SubscribeScreen: void releaseScreen(lampiro.screens.SubscribeScreen)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.Utils.getStringUTF8/0	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.ui.UICombobox: java.lang.String[] getSelectedStrings()>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>/it.yup.ui.UICombobox$UIComboScreen.access$0/1	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/it.yup.ui.UICombobox$UIComboScreen.access$0/1	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/it.yup.ui.UICombobox$UIComboScreen.access$0/2	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: boolean isSelected(int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: boolean isSelected(int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/1	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$1/0	<it.yup.xmpp.Roster: void access$1(it.yup.xmpp.Roster)>
<it.yup.xmlstream.SASLAuthenticator$PacketListener4: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.SASLAuthenticator.access$0/0	<it.yup.xmlstream.SASLAuthenticator: void access$0(it.yup.xmlstream.SASLAuthenticator,it.yup.xml.Element)>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.tests.UITestMidlet: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.tests.UITestMidlet: void <init>()>/it.yup.ui.UICanvas.setDisplay/0	<it.yup.ui.UICanvas: void setDisplay(javax.microedition.lcdui.Display)>
<it.yup.xmpp.SimpleDataFormExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen$Changer: void run()>/java.lang.Thread.sleep/0	<java.lang.Thread: void sleep(long)>
<it.yup.tests.UITestMidlet$TestScreen$Changer: void run()>/it.yup.tests.UITestMidlet$TestScreen.access$0/0	<it.yup.tests.UITestMidlet$TestScreen: boolean access$0(it.yup.tests.UITestMidlet$TestScreen)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.Utils.str2flags/0	<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.Utils.str2flags/1	<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.Utils.flags2str/0	<it.yup.util.Utils: java.lang.String flags2str(boolean[],int)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleError(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.access$0/0	<lampiro.screens.GatewayRegisterScreen: void access$0(lampiro.screens.GatewayRegisterScreen,boolean)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.access$0/0	<lampiro.screens.GatewayRegisterScreen: void access$0(lampiro.screens.GatewayRegisterScreen,boolean)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.access$0/1	<lampiro.screens.GatewayRegisterScreen: void access$0(lampiro.screens.GatewayRegisterScreen,boolean)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.ui.UICanvas$1: void run()>/it.yup.ui.UICanvas.access$0/0	<it.yup.ui.UICanvas: void access$0(it.yup.ui.UICanvas,it.yup.ui.UIScreen)>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/1	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.xmpp.Group: it.yup.xml.Element store()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender: void <init>(java.lang.String,byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTSender$FTSEventHandler)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.util.Utils.hexDigest/0	<it.yup.util.Utils: java.lang.String hexDigest(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.util.Utils.hexDigest/1	<it.yup.util.Utils: java.lang.String hexDigest(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$0/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIPanel access$0(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$1/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UILabel access$1(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$2/0	<lampiro.screens.ContactInfoScreen: boolean access$2(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$3/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout access$3(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$4/0	<lampiro.screens.ContactInfoScreen: void access$4(lampiro.screens.ContactInfoScreen,it.yup.ui.UIVLayout,it.yup.xml.Element)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$5/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout access$5(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$4/1	<lampiro.screens.ContactInfoScreen: void access$4(lampiro.screens.ContactInfoScreen,it.yup.ui.UIVLayout,it.yup.xml.Element)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$6/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout access$6(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$4/2	<lampiro.screens.ContactInfoScreen: void access$4(lampiro.screens.ContactInfoScreen,it.yup.ui.UIVLayout,it.yup.xml.Element)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$7/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UILabel access$7(lampiro.screens.ContactInfoScreen)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/lampiro.screens.ContactInfoScreen.access$2/1	<lampiro.screens.ContactInfoScreen: boolean access$2(lampiro.screens.ContactInfoScreen)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.userhost/1	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$2/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$2/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<lampiro.screens.AlbumScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.makeRoll/0	<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>
<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.deleteAlbum/0	<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.packets.Presence: java.lang.String getResource()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.MMScreen: void showCamera()>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.MMScreen: void showCamera()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.MMScreen: void showCamera()>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>/it.yup.xmpp.packets.Iq.createUniqueId/0	<it.yup.xml.Element: java.lang.String createUniqueId()>
<lampiro.screens.MMScreen: void showAudio()>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>
<lampiro.screens.MMScreen: void showAudio()>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.MMScreen: void showAudio()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.MMScreen: void showAudio()>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.MMScreen: void showAudio()>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.ShowMMScreen$1: void run()>/lampiro.screens.ShowMMScreen.access$0/0	<lampiro.screens.ShowMMScreen: java.lang.String access$0(lampiro.screens.ShowMMScreen)>
<it.yup.ui.UIPanel: void <init>()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIPanel: void <init>()>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.InnerMMScreen$1: void run()>/lampiro.screens.InnerMMScreen.access$0/0	<lampiro.screens.InnerMMScreen: int access$0(lampiro.screens.InnerMMScreen)>
<lampiro.screens.InnerMMScreen$1: void run()>/lampiro.screens.InnerMMScreen.access$0/1	<lampiro.screens.InnerMMScreen: int access$0(lampiro.screens.InnerMMScreen)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/1	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.access$6/0	<it.yup.xmpp.XMPPClient: java.util.TimerTask access$6(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.access$6/1	<it.yup.xmpp.XMPPClient: java.util.TimerTask access$6(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.access$7/0	<it.yup.xmpp.XMPPClient: void access$7(it.yup.xmpp.XMPPClient,boolean)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.access$2/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.access$2/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.access$8/0	<it.yup.xmpp.XMPPClient: it.yup.xmlstream.EventQueryRegistration access$8(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$1: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.removeEventListener/0	<it.yup.xmlstream.BasicXmlStream: void removeEventListener(it.yup.xmlstream.EventQueryRegistration)>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AboutScreen: void <init>()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.AboutScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AboutScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.AboutScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$1/0	<lampiro.screens.RosterScreen: void access$1(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.supportFT/0	<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$2/0	<lampiro.screens.RosterScreen: java.util.Hashtable access$2(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$3/0	<lampiro.screens.RosterScreen: void access$3(lampiro.screens.RosterScreen,java.util.Hashtable,java.lang.String,java.lang.String,javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.RosterScreen.getOrderedContacts/0	<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmlstream.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleError(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$9/0	<it.yup.xmpp.FTSender: void access$9(it.yup.xmpp.FTSender)>
<it.yup.xmpp.Roster: void streamInitialized()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$2/0	<it.yup.screens.RegisterScreen: javax.microedition.lcdui.TextField access$2(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/0	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/1	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/2	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/3	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/4	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/5	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$4/0	<it.yup.screens.RegisterScreen: javax.microedition.lcdui.TextField access$4(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/6	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$5/0	<it.yup.screens.RegisterScreen: javax.microedition.lcdui.TextField access$5(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$6/0	<it.yup.screens.RegisterScreen: javax.microedition.lcdui.ChoiceGroup access$6(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/7	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$7/0	<it.yup.screens.RegisterScreen: java.lang.String access$7(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/8	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$8/0	<it.yup.screens.RegisterScreen: javax.microedition.lcdui.TextField access$8(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/9	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$3/10	<it.yup.screens.RegisterScreen: it.yup.xmpp.Config access$3(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$9/0	<it.yup.screens.RegisterScreen: boolean access$9(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.screens.RegisterScreen.access$10/0	<it.yup.screens.RegisterScreen: void access$10(it.yup.screens.RegisterScreen,it.yup.xmlstream.EventQueryRegistration)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.util.Logger.log/0	<it.yup.util.Logger: void log(java.lang.String)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.util.Logger.log/1	<it.yup.util.Logger: void log(java.lang.String)>
<it.yup.util.XMPPConsumer: void run()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/lampiro.screens.RegisterScreen.getInstance/0	<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.getInstance/0	<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>
<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.screens.CommandListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.CommandListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/1	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/it.yup.xmpp.IqManager.getInstance/0	<it.yup.xmpp.IqManager: it.yup.xmpp.IqManager getInstance()>
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.addEventListener/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.addEventListener/2	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.addEventListener/3	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.addEventListener/4	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.addEventListener/5	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.IqManager.getInstance/0	<it.yup.xmpp.IqManager: it.yup.xmpp.IqManager getInstance()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Contact.userhost/1	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.LampiroMidlet.exit/0	<lampiro.LampiroMidlet: void exit()>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.GatewayRegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.GatewayRegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.GatewayRegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.getTraffic/0	<it.yup.xmpp.XMPPClient: int[] getTraffic()>
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.SplashScreen$1: void run()>/it.yup.screens.RegisterScreen.getInstance/0	<it.yup.screens.RegisterScreen: it.yup.screens.RegisterScreen getInstance()>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/lampiro.screens.ShowMMScreen.getFileType/0	<lampiro.screens.ShowMMScreen: int getFileType(java.lang.String)>
<it.yup.screens.RosterScreen: void playSmartTone()>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.RosterScreen: void playSmartTone()>/javax.microedition.media.Manager.playTone/0	<javax.microedition.media.Manager: void playTone(int,int,int)>
<it.yup.screens.RosterScreen: void playSmartTone()>/javax.microedition.media.Manager.playTone/1	<javax.microedition.media.Manager: void playTone(int,int,int)>
<it.yup.screens.RosterScreen: void playSmartTone()>/javax.microedition.media.Manager.playTone/2	<javax.microedition.media.Manager: void playTone(int,int,int)>
<it.yup.screens.RosterScreen: void connectionLost()>/it.yup.screens.RegisterScreen.getInstance/0	<it.yup.screens.RegisterScreen: it.yup.screens.RegisterScreen getInstance()>
<lampiro.screens.ShowMMScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.addAlbum/0	<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.getInstance/0	<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance()>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.screens.RosterScreen: void commandExecuted(java.lang.Object)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showNextScreen/0	<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showPreviousScreen/0	<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.display/1	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<it.yup.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.ui.UIRadioButtons$UIRadioButton: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/it.yup.xmpp.Group.getGroup/0	<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>
<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/it.yup.xmpp.Group.getGroup/1	<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.xmlstream.BasicXmlStream.addEventListener/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.ui.UICheckbox: void <init>(java.lang.String)>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICheckbox: void setChecked(boolean)>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICheckbox: void setChecked(boolean)>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICheckbox: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$0/0	<lampiro.screens.RosterScreen: it.yup.xmpp.XMPPClient access$0(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$0/1	<lampiro.screens.RosterScreen: it.yup.xmpp.XMPPClient access$0(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$0/2	<lampiro.screens.RosterScreen: it.yup.xmpp.XMPPClient access$0(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$12/0	<lampiro.screens.RosterScreen: javax.microedition.lcdui.Image access$12(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$13/0	<lampiro.screens.RosterScreen: javax.microedition.lcdui.Image access$13(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$14/0	<lampiro.screens.RosterScreen: javax.microedition.lcdui.Image access$14(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen.access$12/1	<lampiro.screens.RosterScreen: javax.microedition.lcdui.Image access$12(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Config.getInstance/1	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.xmlstream.SASLAuthenticator$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.SASLAuthenticator.access$0/0	<it.yup.xmlstream.SASLAuthenticator: void access$0(it.yup.xmlstream.SASLAuthenticator,it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.Contact: it.yup.xml.Element getCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getInstance/2	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getInstance/3	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getErrorString/0	<it.yup.xmpp.XMPPClient: java.lang.String getErrorString(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen.access$4/1	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen.access$4/2	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void stopWaiting()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.Contact: boolean setGroups(java.lang.String[])>/it.yup.xmpp.Group.getGroup/0	<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>
<it.yup.xmpp.Contact: boolean setGroups(java.lang.String[])>/it.yup.xmpp.Group.getGroup/1	<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.SplashScreen$1: void run()>/lampiro.screens.SplashScreen.access$0/0	<lampiro.screens.SplashScreen: void access$0(lampiro.screens.SplashScreen)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$4/0	<it.yup.xmpp.FTReceiver$OpenListener: it.yup.xmpp.FTReceiver access$4(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver.access$0/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$1/0	<it.yup.xmpp.FTReceiver$OpenListener: java.lang.StringBuffer access$1(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$4/1	<it.yup.xmpp.FTReceiver$OpenListener: it.yup.xmpp.FTReceiver access$4(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver.access$1/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.FTReceiver$FTREventHandler access$1(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$1/1	<it.yup.xmpp.FTReceiver$OpenListener: java.lang.StringBuffer access$1(it.yup.xmpp.FTReceiver$OpenListener)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIUtils.colorize/1	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIUtils.colorize/2	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIUtils.colorize/3	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIUtils.colorize/4	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void updateScreen()>/lampiro.screens.RosterScreen$UIGroup.toggleMenus/0	<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>
<lampiro.screens.RosterScreen: void updateScreen()>/lampiro.screens.RosterScreen$UIGroup.access$0/0	<lampiro.screens.RosterScreen$UIGroup: java.util.Hashtable access$0()>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIUtils.colorize/5	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/lampiro.screens.RosterScreen$RegisterHandler.access$0/0	<lampiro.screens.RosterScreen$RegisterHandler: it.yup.xml.Element access$0(lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/lampiro.screens.RosterScreen$RegisterHandler.access$0/1	<lampiro.screens.RosterScreen$RegisterHandler: it.yup.xml.Element access$0(lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/lampiro.screens.RosterScreen$RegisterHandler.access$1/0	<lampiro.screens.RosterScreen$RegisterHandler: it.yup.xmpp.packets.DataForm access$1(lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/lampiro.screens.RosterScreen.access$0/0	<lampiro.screens.RosterScreen: it.yup.xmpp.XMPPClient access$0(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/lampiro.screens.RosterScreen$RegisterHandler.access$2/0	<lampiro.screens.RosterScreen$RegisterHandler: it.yup.ui.UIScreen access$2(lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/lampiro.screens.RosterScreen$RegisterHandler.access$2/1	<lampiro.screens.RosterScreen$RegisterHandler: it.yup.ui.UIScreen access$2(lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getErrorString/0	<it.yup.xmpp.XMPPClient: java.lang.String getErrorString(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$4/1	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen$RegisterHandler.access$0/0	<lampiro.screens.RosterScreen$RegisterHandler: it.yup.xml.Element access$0(lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$2/0	<lampiro.screens.RosterScreen: java.util.Hashtable access$2(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$4/1	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.LampiroMidlet.exit/0	<lampiro.LampiroMidlet: void exit()>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void hideNotify()>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: void hideNotify()>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void hideNotify()>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.getInstance/0	<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance(java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/2	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen$UICutLabel.access$0/0	<lampiro.screens.ChatScreen$UICutLabel: java.lang.String access$0(lampiro.screens.ChatScreen$UICutLabel)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.showAlert/0	<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void startDrag(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$UIGroup.access$1/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup access$1()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.showAlert/0	<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void endDrag()>/lampiro.screens.RosterScreen$UIGroup.access$1/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup access$1()>
<lampiro.screens.RosterScreen: void endDrag()>/lampiro.screens.RosterScreen$UIGroup.access$1/1	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup access$1()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.lock/1	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/2	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/3	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.lock/2	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/4	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.unlock/5	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showNextScreen/0	<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showPreviousScreen/0	<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$UIGroup.access$2/0	<lampiro.screens.RosterScreen$UIGroup: it.yup.ui.UILabel access$2()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$UIGroup.access$3/0	<lampiro.screens.RosterScreen$UIGroup: it.yup.ui.UILabel access$3()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.LampiroMidlet.exit/0	<lampiro.LampiroMidlet: void exit()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/1	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.getInstance/0	<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.FTScreen.getInstance/0	<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/4	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/5	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$UIGroup.access$4/0	<lampiro.screens.RosterScreen$UIGroup: it.yup.ui.UILabel access$4()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/6	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.domain/0	<it.yup.xmpp.Contact: java.lang.String domain(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.lang.Thread.sleep/0	<java.lang.Thread: void sleep(long)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/2	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.domain/1	<it.yup.xmpp.Contact: java.lang.String domain(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/7	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.getInstance/1	<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/8	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/3	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyCenterLayout/1	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/9	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/10	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/11	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/12	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/13	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getInstance/2	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.user/1	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/14	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void closeMe()>/lampiro.screens.RosterScreen.getChatScreenList/0	<lampiro.screens.RosterScreen: java.util.Hashtable getChatScreenList()>
<lampiro.screens.ChatScreen: void closeMe()>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void closeMe()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showNextScreen/0	<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showPreviousScreen/0	<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.unlock/2	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/4	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/5	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.getGroup/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.access$5/0	<lampiro.screens.RosterScreen$UIGroup: void access$5(lampiro.screens.RosterScreen$UIGroup,it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.getGroup/1	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.access$5/1	<lampiro.screens.RosterScreen$UIGroup: void access$5(lampiro.screens.RosterScreen$UIGroup,it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.getGroup/2	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.access$5/2	<lampiro.screens.RosterScreen$UIGroup: void access$5(lampiro.screens.RosterScreen$UIGroup,it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.unlock/2	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void removeAllContacts()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void removeAllContacts()>/lampiro.screens.RosterScreen$UIGroup.access$0/0	<lampiro.screens.RosterScreen$UIGroup: java.util.Hashtable access$0()>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.MUCScreen.handlePresence/0	<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.screens.DeleteContactAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.DeleteContactAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.DeleteContactAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/1	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.FTScreen.ftFinished/0	<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen$1: void run()>/lampiro.screens.RegisterScreen.access$0/0	<lampiro.screens.RegisterScreen: it.yup.ui.UITextField access$0(lampiro.screens.RegisterScreen)>
<lampiro.screens.RegisterScreen$1: void run()>/lampiro.screens.RegisterScreen.access$1/0	<lampiro.screens.RegisterScreen: java.lang.String access$1(lampiro.screens.RegisterScreen,java.lang.String)>
<lampiro.screens.RegisterScreen$1: void run()>/lampiro.screens.RegisterScreen.access$2/0	<lampiro.screens.RegisterScreen: boolean access$2(lampiro.screens.RegisterScreen)>
<lampiro.screens.RegisterScreen$1: void run()>/lampiro.screens.RegisterScreen.access$3/0	<lampiro.screens.RegisterScreen: void access$3(lampiro.screens.RegisterScreen,boolean)>
<lampiro.screens.RosterScreen: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/lampiro.screens.FTScreen.ftAccept/0	<lampiro.screens.FTScreen: void ftAccept(it.yup.xmpp.FTSender,boolean)>
<lampiro.screens.RosterScreen: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>/lampiro.screens.FTScreen.addFileSend/0	<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>
<lampiro.screens.RosterScreen: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/lampiro.screens.FTScreen.ftFinished/0	<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>
<lampiro.screens.RosterScreen: void chunkSent(int,int,it.yup.xmpp.FTSender)>/lampiro.screens.FTScreen.chunkTransferred/0	<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>
<lampiro.screens.RosterScreen: void chunkReceived(int,int,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.FTScreen.chunkTransferred/0	<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.util.Utils.getBytesUtf8/1	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.util.Utils.getBytesUtf8/2	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.Contact.user/1	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.util.GoogleToken.getToken/0	<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.Contact.userhost/1	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.util.Utils.getBytesUtf8/3	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.util.Utils.getBytesUtf8/4	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/2	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.BasicXmlStream.addEventListener/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.BasicXmlStream.addEventListener/2	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/lampiro.screens.SubscribeScreen.getComponentSubscription/0	<lampiro.screens.SubscribeScreen: lampiro.screens.SubscribeScreen getComponentSubscription(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void playSmartTone()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void playSmartTone()>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen: void playSmartTone()>/javax.microedition.media.Manager.playTone/0	<javax.microedition.media.Manager: void playTone(int,int,int)>
<lampiro.screens.RosterScreen: void playSmartTone()>/javax.microedition.media.Manager.playTone/1	<javax.microedition.media.Manager: void playTone(int,int,int)>
<lampiro.screens.RosterScreen: void playSmartTone()>/javax.microedition.media.Manager.playTone/2	<javax.microedition.media.Manager: void playTone(int,int,int)>
<lampiro.screens.RosterScreen: void askSubscription(it.yup.xmpp.Contact)>/lampiro.screens.SubscribeScreen.getUserSubscription/0	<lampiro.screens.SubscribeScreen: lampiro.screens.SubscribeScreen getUserSubscription()>
<lampiro.screens.RosterScreen: void askSubscription(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void connectionLost()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void connectionLost()>/lampiro.screens.RegisterScreen.getInstance/0	<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>
<lampiro.screens.RosterScreen: void connectionLost()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.showAlert/0	<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void showCommand(java.lang.Object)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void rosterRetrieved()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void rosterRetrieved()>/it.yup.xmpp.Contact.domain/0	<it.yup.xmpp.Contact: java.lang.String domain(java.lang.String)>
<it.yup.screens.RegisterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.LampiroMidlet.exit/0	<lampiro.LampiroMidlet: void exit()>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.unlock/2	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.SplashScreen$UISplashTextField: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AddContactScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/lampiro.screens.AddContactScreen.access$2/0	<lampiro.screens.AddContactScreen: it.yup.ui.UILabel access$2(lampiro.screens.AddContactScreen)>
<lampiro.screens.AddContactScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/lampiro.screens.AddContactScreen.access$3/0	<lampiro.screens.AddContactScreen: boolean access$3(lampiro.screens.AddContactScreen)>
<it.yup.xmpp.FTSender$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$3/0	<it.yup.xmpp.FTSender: int access$3(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$4/0	<it.yup.xmpp.FTSender: java.lang.String access$4(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$5/0	<it.yup.xmpp.FTSender: void access$5(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$6/0	<it.yup.xmpp.FTSender: void access$6(it.yup.xmpp.FTSender)>
<it.yup.util.GoogleToken: void run()>/it.yup.util.GoogleToken.getToken/0	<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>
<it.yup.xml.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$0/0	<it.yup.xmpp.FTReceiver$OpenListener: it.yup.xmlstream.EventQueryRegistration access$0(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.removeEventListener/0	<it.yup.xmlstream.BasicXmlStream: void removeEventListener(it.yup.xmlstream.EventQueryRegistration)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.util.Utils.easyReply/0	<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$4/0	<it.yup.xmpp.FTReceiver$OpenListener: it.yup.xmpp.FTReceiver access$4(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver.access$0/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$4/1	<it.yup.xmpp.FTReceiver$OpenListener: it.yup.xmpp.FTReceiver access$4(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver.access$0/1	<it.yup.xmpp.FTReceiver: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$1/0	<it.yup.xmpp.FTReceiver$OpenListener: java.lang.StringBuffer access$1(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$2/0	<it.yup.xmpp.FTReceiver$OpenListener: void access$2(it.yup.xmpp.FTReceiver$OpenListener,byte[])>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$4/2	<it.yup.xmpp.FTReceiver$OpenListener: it.yup.xmpp.FTReceiver access$4(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver.access$1/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.FTReceiver$FTREventHandler access$1(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.access$3/0	<it.yup.xmpp.FTReceiver$OpenListener: byte[] access$3(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$3/0	<it.yup.xmpp.XMPPClient: void access$3(it.yup.xmpp.XMPPClient,long)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.userhost/1	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$2/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$2/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIUtils.easyMenu/1	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIUtils.easyMenu/2	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UITextField: void handleScreen()>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.display/1	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.util.RMSIndex$KeyEnumeration: void <init>(it.yup.util.RMSIndex)>/it.yup.util.RMSIndex.access$0/0	<it.yup.util.RMSIndex: java.util.Vector access$0(it.yup.util.RMSIndex)>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showNextScreen/0	<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showPreviousScreen/0	<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$AdHocCommandsHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$0/0	<lampiro.screens.RosterScreen: it.yup.xmpp.XMPPClient access$0(lampiro.screens.RosterScreen)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void stopWaiting()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.access$0/0	<it.yup.ui.UICombobox: boolean access$0(it.yup.ui.UICombobox)>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.access$0/0	<it.yup.ui.UICombobox: boolean access$0(it.yup.ui.UICombobox)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.access$1/0	<it.yup.ui.UICombobox: void access$1(it.yup.ui.UICombobox,int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.access$0/1	<it.yup.ui.UICombobox: boolean access$0(it.yup.ui.UICombobox)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.access$1/1	<it.yup.ui.UICombobox: void access$1(it.yup.ui.UICombobox,int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.access$0/2	<it.yup.ui.UICombobox: boolean access$0(it.yup.ui.UICombobox)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/4	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/5	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.access$0/3	<it.yup.ui.UICombobox: boolean access$0(it.yup.ui.UICombobox)>
<it.yup.screens.ContactInfoScreen$1: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<lampiro.screens.FTScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.makeRoll/0	<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>
<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SendMMScreen$UploadHandler: void chunkSent(int,int,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.Utils.str2flags/0	<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.Utils.str2flags/1	<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getInstance/1	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getInstance/2	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getInstance/3	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.InnerMMScreen: void captureVideo()>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>
<lampiro.screens.InnerMMScreen: void captureVideo()>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.getInstance/1	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.util.Utils.flags2str/0	<it.yup.util.Utils: java.lang.String flags2str(boolean[],int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.OptionsScreen: void saveOptions()>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICanvas.showAlert/0	<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/lampiro.screens.RosterScreen.getOrderedContacts/0	<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<it.yup.ui.UIGauge$Ticker: void run()>/it.yup.ui.UIGauge.access$0/0	<it.yup.ui.UIGauge: int access$0(it.yup.ui.UIGauge)>
<it.yup.ui.UIGauge$Ticker: void run()>/it.yup.ui.UIGauge.access$1/0	<it.yup.ui.UIGauge: int access$1(it.yup.ui.UIGauge)>
<it.yup.ui.UIGauge$Ticker: void run()>/it.yup.ui.UIGauge.access$2/0	<it.yup.ui.UIGauge: void access$2(it.yup.ui.UIGauge,int)>
<it.yup.ui.UIGauge$Ticker: void run()>/it.yup.ui.UIGauge.access$1/1	<it.yup.ui.UIGauge: int access$1(it.yup.ui.UIGauge)>
<it.yup.ui.UIGauge$Ticker: void run()>/it.yup.ui.UIGauge.access$3/0	<it.yup.ui.UIGauge: int access$3(it.yup.ui.UIGauge)>
<it.yup.ui.UIGauge$Ticker: void run()>/it.yup.ui.UIGauge.access$2/1	<it.yup.ui.UIGauge: void access$2(it.yup.ui.UIGauge,int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$4/0	<it.yup.xmpp.XMPPClient: java.lang.String access$4(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$5/0	<it.yup.xmpp.XMPPClient: java.lang.String[] access$5(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.access$5/1	<it.yup.xmpp.XMPPClient: java.lang.String[] access$5(it.yup.xmpp.XMPPClient)>
<lampiro.screens.KeyScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem,java.lang.String,java.lang.String)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.FTSender.supportFT/0	<it.yup.xmpp.FTSender: boolean supportFT(java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.Utils.hexDigest/0	<it.yup.util.Utils: java.lang.String hexDigest(java.lang.String,java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.FTScreen.getInstance/0	<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.xmpp.Config.getInstance/1	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.setMenuKeys/0	<it.yup.ui.UICanvas: void setMenuKeys(int,int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.RegisterScreen.getInstance/0	<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.FTSender$IQResultListener3: void handleError(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener3: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$7/0	<it.yup.xmpp.FTSender: boolean access$7(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$8/0	<it.yup.xmpp.FTSender: void access$8(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$2/0	<it.yup.xmpp.FTSender: void access$2(it.yup.xmpp.FTSender,boolean)>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/it.yup.ui.UICanvas.getTimer/0	<it.yup.ui.UICanvas: java.util.Timer getTimer()>
<lampiro.screens.AddContactScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/lampiro.screens.AddContactScreen.access$0/0	<lampiro.screens.AddContactScreen: it.yup.ui.UITextField access$0(lampiro.screens.AddContactScreen)>
<lampiro.screens.AddContactScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/lampiro.screens.AddContactScreen.access$1/0	<lampiro.screens.AddContactScreen: void access$1(lampiro.screens.AddContactScreen,java.lang.String,java.lang.String,java.lang.String)>
<it.yup.ui.UIGauge: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.util.Utils.easyReply/0	<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIGauge: void start()>/it.yup.ui.UICanvas.getTimer/0	<it.yup.ui.UICanvas: java.util.Timer getTimer()>
<it.yup.ui.UIScreen: void keyRepeated(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.getChatScreenList/0	<lampiro.screens.RosterScreen: java.util.Hashtable getChatScreenList()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/lampiro.screens.ChatScreen.access$0/0	<lampiro.screens.ChatScreen: java.util.Vector access$0(lampiro.screens.ChatScreen)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getInstance/1	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.xmpp.Config: void saveToStorage()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.screens.RegisterScreen$ItemCommandListener1: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/it.yup.screens.RegisterScreen.access$1/0	<it.yup.screens.RegisterScreen: void access$1(it.yup.screens.RegisterScreen)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<it.yup.screens.TaskListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.TaskListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/1	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.xmpp.XMPPClient$TimerTask1: void run()>/it.yup.xmpp.XMPPClient.access$0/0	<it.yup.xmpp.XMPPClient: long access$0(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$TimerTask1: void run()>/it.yup.xmpp.XMPPClient.access$1/0	<it.yup.xmpp.XMPPClient: int access$1(it.yup.xmpp.XMPPClient)>
<it.yup.util.NetworkConsumer: void run()>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleError(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender$IQResultListener4: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$2/0	<it.yup.xmpp.FTSender: void access$2(it.yup.xmpp.FTSender,boolean)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$1/0	<it.yup.xmpp.FTSender: it.yup.xmpp.FTSender$FTSEventHandler access$1(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.util.Utils.easyReply/0	<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$0/0	<it.yup.xmpp.FTSender: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$7/0	<it.yup.xmpp.FTSender: boolean access$7(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$8/0	<it.yup.xmpp.FTSender: void access$8(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$2/0	<it.yup.xmpp.FTSender: void access$2(it.yup.xmpp.FTSender,boolean)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.util.MetaVector$MultiVectorEnumeration: void <init>(it.yup.util.MetaVector)>/it.yup.util.MetaVector.access$0/0	<it.yup.util.MetaVector: java.util.Enumeration access$0(it.yup.util.MetaVector)>
<lampiro.screens.ContactInfoScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/it.yup.xmlstream.BasicXmlStream.addEventListener/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.Roster$RosterX: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$0/0	<it.yup.xmpp.Roster: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.Roster)>
<it.yup.xmpp.Roster$RosterX: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$0/1	<it.yup.xmpp.Roster: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.Roster)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/it.yup.screens.DataFormScreen.access$0/0	<it.yup.screens.DataFormScreen: it.yup.util.ResourceManager access$0()>
<it.yup.screens.OptionsScreen$1: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.getInstance/0	<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/it.yup.screens.DataFormScreen.access$0/0	<it.yup.screens.DataFormScreen: it.yup.util.ResourceManager access$0()>
<it.yup.xml.Element: void ensureCapacity(int,byte)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.Element: void ensureCapacity(int,byte)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DataFormScreen.access$0/0	<it.yup.screens.DataFormScreen: it.yup.util.ResourceManager access$0()>
<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmpp.IqManager: void streamInitialized()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.IqManager: void streamInitialized()>/it.yup.xmlstream.BasicXmlStream.addEventListener/1	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.screens.MessageComposerScreen$ItemStateListener1: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.screens.MessageComposerScreen.access$0/0	<it.yup.screens.MessageComposerScreen: javax.microedition.lcdui.ChoiceGroup access$0(it.yup.screens.MessageComposerScreen)>
<it.yup.screens.MessageComposerScreen$ItemStateListener1: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.screens.MessageComposerScreen.access$0/1	<it.yup.screens.MessageComposerScreen: javax.microedition.lcdui.ChoiceGroup access$0(it.yup.screens.MessageComposerScreen)>
<it.yup.screens.MessageComposerScreen$ItemStateListener1: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.screens.MessageComposerScreen.access$1/0	<it.yup.screens.MessageComposerScreen: javax.microedition.lcdui.TextField access$1(it.yup.screens.MessageComposerScreen)>
<it.yup.ui.UIAccordion: void <init>()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.xml.Element: void addElement(it.yup.xml.Element)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.Element: void addText(java.lang.String)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.ui.UIAccordion: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$0/0	<it.yup.xmpp.Roster: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.Roster)>
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$0/1	<it.yup.xmpp.Roster: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.Roster)>
<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$1/0	<it.yup.ui.UIAccordion$AccordionItem: it.yup.ui.UIVLayout access$1(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.screens.RegisterScreen$ItemStateListener1: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.screens.RegisterScreen.access$0/0	<it.yup.screens.RegisterScreen: void access$0(it.yup.screens.RegisterScreen,javax.microedition.lcdui.Item)>
<it.yup.screens.RosterScreen$AdHocCommandsHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$2/0	<it.yup.ui.UIAccordion$AccordionItem: java.util.Vector access$2(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.xml.Element: byte[] toXml()>/it.yup.xml.Element.writeXml/0	<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIAccordion: void setBg_color(int)>/it.yup.ui.UIAccordion$AccordionItem.access$2/0	<it.yup.ui.UIAccordion$AccordionItem: java.util.Vector access$2(it.yup.ui.UIAccordion$AccordionItem)>
<lampiro.screens.TaskListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<it.yup.xmpp.FTSender$PacketListener3: void packetReceived(it.yup.xml.Element)>/it.yup.util.Utils.easyReply/0	<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>
<it.yup.xmpp.FTSender$PacketListener3: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTSender.access$0/0	<it.yup.xmpp.FTSender: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTSender)>
<lampiro.screens.ChatScreen$1: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$1: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.util.MemoryLogConsumer.getConsumer/0	<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.util.Logger.addConsumer/0	<it.yup.util.Logger: void addConsumer(it.yup.util.LogConsumer)>
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xmpp.FTReceiver.access$0/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver.access$0/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$2/0	<it.yup.xmpp.Roster: void access$2(it.yup.xmpp.Roster,it.yup.xml.Element,boolean)>
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.access$0/0	<it.yup.xmpp.Roster: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.Roster)>
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showNextScreen/0	<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.showPreviousScreen/0	<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.CommandListScreen: void stopWaiting()>/lampiro.screens.RosterScreen.closeAndOpenRoster/0	<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.access$15/0	<lampiro.screens.RosterScreen: void access$15(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.LampiroMidlet: void <init>()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.BluendoXMLRPC: void write(it.yup.xml.Element)>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<it.yup.xmpp.BluendoXMLRPC: it.yup.xml.Element read()>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xml.KXmlProcessor.pullDocumentStart/0	<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xml.KXmlProcessor.pullElement/0	<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullElement(org.xmlpull.v1.XmlPullParser)>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.util.GoogleToken: java.lang.String getToken(java.lang.String,java.lang.String)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/java.lang.StringBuffer.setLength/0	<java.lang.StringBuffer: void setLength(int)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.lang.StringBuffer.setLength/0	<java.lang.StringBuffer: void setLength(int)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>/lampiro.screens.RosterScreen$UIGroup.<init>/0	<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>
<lampiro.screens.SubscribeScreen: lampiro.screens.SubscribeScreen getComponentSubscription(it.yup.xmpp.Contact)>/lampiro.screens.SubscribeScreen.<init>/0	<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>/it.yup.xmpp.Group.<init>/0	<it.yup.xmpp.Group: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullElement(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/it.yup.xml.KXmlSerializer.<init>/0	<it.yup.xml.KXmlSerializer: void <init>()>
<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/javax.microedition.lcdui.Alert.<init>/0	<javax.microedition.lcdui.Alert: void <init>(java.lang.String,java.lang.String,javax.microedition.lcdui.Image,javax.microedition.lcdui.AlertType)>
<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.FTScreen$FTItem.<init>/0	<lampiro.screens.FTScreen$FTItem: void <init>(java.lang.Object,int,boolean,int,java.lang.String)>
<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/lampiro.screens.FTScreen$FTItem.<init>/0	<lampiro.screens.FTScreen$FTItem: void <init>(java.lang.Object,int,boolean,int,java.lang.String)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/org.bouncycastle.crypto.digests.SHA1Digest.<init>/0	<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>
<it.yup.util.Utils: byte[] digest(byte[],java.lang.String)>/org.bouncycastle.crypto.digests.MD5Digest.<init>/0	<org.bouncycastle.crypto.digests.MD5Digest: void <init>()>
<it.yup.util.Utils: java.lang.String bytesToHex(byte[])>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.util.Utils: java.lang.String bytesToHex(byte[])>/java.io.PrintStream.<init>/0	<java.io.PrintStream: void <init>(java.io.OutputStream)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>/java.lang.String.<init>/0	<java.lang.String: void <init>(byte[],java.lang.String)>
<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream$ListenerRegistration.<init>/0	<it.yup.xmlstream.BasicXmlStream$ListenerRegistration: void <init>(it.yup.xmlstream.EventQuery,java.lang.Object,boolean)>
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/it.yup.xmlstream.EventQueryRegistration.<init>/0	<it.yup.xmlstream.EventQueryRegistration: void <init>(java.lang.Object,java.util.Vector)>
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream$ListenerRegistration.<init>/0	<it.yup.xmlstream.BasicXmlStream$ListenerRegistration: void <init>(it.yup.xmlstream.EventQuery,java.lang.Object,boolean)>
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/it.yup.xmlstream.EventQueryRegistration.<init>/0	<it.yup.xmlstream.EventQueryRegistration: void <init>(java.lang.Object,java.util.Vector)>
<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.<init>/0	<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/java.lang.NullPointerException.<init>/0	<java.lang.NullPointerException: void <init>(java.lang.String)>
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/java.lang.NullPointerException.<init>/1	<java.lang.NullPointerException: void <init>(java.lang.String)>
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/java.lang.NullPointerException.<init>/2	<java.lang.NullPointerException: void <init>(java.lang.String)>
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/java.lang.NullPointerException.<init>/3	<java.lang.NullPointerException: void <init>(java.lang.String)>
<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>/java.lang.NullPointerException.<init>/4	<java.lang.NullPointerException: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: lampiro.screens.SubscribeScreen getUserSubscription()>/lampiro.screens.SubscribeScreen.<init>/0	<lampiro.screens.SubscribeScreen: void <init>()>
<lampiro.screens.AlbumScreen: lampiro.screens.AlbumScreen getInstance()>/lampiro.screens.AlbumScreen.<init>/0	<lampiro.screens.AlbumScreen: void <init>()>
<it.yup.util.XMPPConsumer: it.yup.util.XMPPConsumer getConsumer()>/it.yup.util.XMPPConsumer.<init>/0	<it.yup.util.XMPPConsumer: void <init>()>
<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>/it.yup.xmpp.XMPPClient.<init>/0	<it.yup.xmpp.XMPPClient: void <init>()>
<it.yup.screens.RosterScreen: it.yup.screens.RosterScreen getInstance()>/it.yup.screens.RosterScreen.<init>/0	<it.yup.screens.RosterScreen: void <init>()>
<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>/it.yup.util.MemoryLogConsumer.<init>/0	<it.yup.util.MemoryLogConsumer: void <init>()>
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/lampiro.screens.RegisterScreen.<init>/0	<lampiro.screens.RegisterScreen: void <init>()>
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/lampiro.screens.RegisterScreen.<init>/1	<lampiro.screens.RegisterScreen: void <init>()>
<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>/lampiro.screens.RosterScreen.<init>/0	<lampiro.screens.RosterScreen: void <init>()>
<it.yup.screens.RegisterScreen: it.yup.screens.RegisterScreen getInstance()>/it.yup.screens.RegisterScreen.<init>/0	<it.yup.screens.RegisterScreen: void <init>()>
<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>/it.yup.ui.UICanvas.<init>/0	<it.yup.ui.UICanvas: void <init>()>
<it.yup.ui.UICanvas: java.util.Timer getTimer()>/java.util.Timer.<init>/0	<java.util.Timer: void <init>()>
<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>/lampiro.screens.FTScreen.<init>/0	<lampiro.screens.FTScreen: void <init>()>
<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>/it.yup.xmpp.Config.<init>/0	<it.yup.xmpp.Config: void <init>()>
<it.yup.xmpp.IqManager: it.yup.xmpp.IqManager getInstance()>/it.yup.xmpp.IqManager.<init>/0	<it.yup.xmpp.IqManager: void <init>()>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteX/0	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element._parse/0	<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullElement(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element._parse/0	<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/it.yup.xml.KXmlSerializer.setOutput/0	<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/it.yup.xml.KXmlSerializer.endDocument/0	<it.yup.xml.KXmlSerializer: void endDocument()>
<it.yup.xml.BSerializer: byte[] toXml(it.yup.xml.Element)>/it.yup.xml.KXmlSerializer.flush/0	<it.yup.xml.KXmlSerializer: void flush()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFont/1	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/javax.microedition.lcdui.Alert.setType/0	<javax.microedition.lcdui.Alert: void setType(javax.microedition.lcdui.AlertType)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/javax.microedition.lcdui.Alert.setTimeout/0	<javax.microedition.lcdui.Alert: void setTimeout(int)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,java.lang.String[],boolean)>/java.util.Vector.addElement/3	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Utils: it.yup.xmpp.packets.Iq easyReply(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.util.Utils: void <clinit>()>/java.lang.String.getBytes/0	<java.lang.String: byte[] getBytes(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getLabel()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen$Changer: void run()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>()>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.packets.Presence: void setPriority(int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.jcraft.jzlib.ZOutputStream: void finish()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<lampiro.screens.MMScreen: void showAudio()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen$1: void run()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.TestMidlet: void <init>()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.TestMidlet: void <init>()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.RegisterScreen$1: void run()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void openStream()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void setFeature(java.lang.String,boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.CommandExecutor: java.lang.String getLabel()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void setFeature(java.lang.String,boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.MetaVector: java.lang.String toString()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void swap(int,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: void captureVideo()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: void checkKeys()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/java.lang.StringBuilder.<init>/5	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Config: void saveToStorage()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuffer.<init>/1	<java.lang.StringBuffer: void <init>()>
<it.yup.util.ResourceManager: java.lang.String getString(int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: java.lang.String getText()>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/5	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/6	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/7	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/8	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/9	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/10	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/java.lang.StringBuilder.<init>/11	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void <init>(it.yup.xmpp.FTReceiver)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<lampiro.screens.MessageComposerScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.DebugScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.DebugScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.AddContactScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.OptionsScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.StatusScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.DataResultScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.MMScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.AboutScreen: void <clinit>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.StatusScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.SplashScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.CommandListScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.DataResultScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.MessageComposerScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.SimpleComposerScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.SimpleComposerScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.ChatScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.DeleteContactAlert: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.screens.DataFormScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.InnerMMScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.OptionsScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.KeyScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<it.yup.ui.UIEmoLabel: void <clinit>()>/it.yup.ui.UIEmoLabel.initialize/0	<it.yup.ui.UIEmoLabel: void initialize()>
<it.yup.screens.TaskListScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.TaskListScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.CommandListScreen: void <clinit>()>/it.yup.util.ResourceManager.getManager/0	<it.yup.util.ResourceManager: it.yup.util.ResourceManager getManager(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void saveAlbum()>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/it.yup.xml.BSerializer.write/0	<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.BProcessor.untag/0	<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.util.Utils.getStringUTF8/0	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.BProcessor.untag/1	<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.util.Utils.getStringUTF8/1	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.util.Utils.getStringUTF8/2	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.BProcessor.untag/2	<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.util.Utils.getStringUTF8/3	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.BProcessor.untag/3	<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.util.Utils.getStringUTF8/4	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.BProcessor.unlen/0	<it.yup.xml.BProcessor: int unlen(java.io.InputStream)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.util.Utils.getStringUTF8/5	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeTag/0	<it.yup.xml.BProcessor: void writeTag(byte,java.lang.String,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeTag/1	<it.yup.xml.BProcessor: void writeTag(byte,java.lang.String,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeLength/0	<it.yup.xml.BProcessor: void writeLength(int,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeTag/2	<it.yup.xml.BProcessor: void writeTag(byte,java.lang.String,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeTag/3	<it.yup.xml.BProcessor: void writeTag(byte,java.lang.String,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeLength/1	<it.yup.xml.BProcessor: void writeLength(int,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeLength/2	<it.yup.xml.BProcessor: void writeLength(int,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeTag/4	<it.yup.xml.BProcessor: void writeTag(byte,java.lang.String,java.io.OutputStream)>
<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.BProcessor.writeBinary/0	<it.yup.xml.BProcessor: void writeBinary(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>
<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.KXmlProcessor._parse/0	<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/lampiro.screens.AlbumScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/lampiro.screens.AlbumScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.askRepaint/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<it.yup.screens.AboutScreen: void <init>()>/it.yup.screens.AboutScreen.addCommand/0	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.AboutScreen: void <init>()>/it.yup.screens.AboutScreen.setCommandListener/0	<javax.microedition.lcdui.Canvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$FileReceiveScreen.updateFT/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$FileReceiveScreen.updateFT/1	<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>
<it.yup.ui.UISeparator: void <init>(int,int)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen$UIGroup: void initGroupData()>/lampiro.screens.RosterScreen$UIGroup.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/lampiro.screens.MessageComposerScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.screens.DebugScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.screens.DebugScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.screens.DebugScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.screens.DebugScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DebugScreen.deleteAll/0	<javax.microedition.lcdui.Form: void deleteAll()>
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DebugScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DebugScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MessageComposerScreen.menuAction/0	<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MessageComposerScreen.insert/0	<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MessageComposerScreen.remove/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/2	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/3	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/4	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/5	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/6	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.append/7	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.RosterScreen$UIGroup: void startMoving()>/lampiro.screens.RosterScreen$UIGroup.setGradientColor/0	<it.yup.ui.UIItem: void setGradientColor(int)>
<lampiro.screens.RosterScreen$UIGroup: void startMoving()>/lampiro.screens.RosterScreen$UIGroup.setGradientSelectedColor/0	<it.yup.ui.UIItem: void setGradientSelectedColor(int)>
<lampiro.screens.RosterScreen$UIGroup: void startMoving()>/lampiro.screens.RosterScreen$UIGroup.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<lampiro.screens.RosterScreen$UIGroup: void startMoving()>/lampiro.screens.RosterScreen$UIGroup.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/lampiro.screens.RosterScreen$UIGroup.setGradientColor/0	<it.yup.ui.UIItem: void setGradientColor(int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/lampiro.screens.RosterScreen$UIGroup.setGradientSelectedColor/0	<it.yup.ui.UIItem: void setGradientSelectedColor(int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/lampiro.screens.RosterScreen$UIGroup.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>/lampiro.screens.RosterScreen$UIGroup.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.getScreen/0	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.getScreen/1	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.getContainer/0	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.getScreen/2	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.stopMoving/1	<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>
<it.yup.xmpp.MUC: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/it.yup.xmpp.MUC.compileMessage/0	<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.MUC.updateExistingPresence/0	<it.yup.xmpp.Contact: void updateExistingPresence(it.yup.xmpp.packets.Presence)>
<lampiro.screens.DebugScreen: void <init>()>/lampiro.screens.DebugScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.append/2	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.append/3	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.screens.AddContactScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.DebugScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.AddContactScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UICombobox.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UICombobox.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UICombobox.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<it.yup.ui.UICombobox: boolean keyPressed(int)>/it.yup.ui.UICombobox.openMenu/0	<it.yup.ui.UICombobox: void openMenu()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SubscribeScreen.itemAction/0	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SubscribeScreen.itemAction/1	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox: java.lang.String[] getSelectedStrings()>/it.yup.ui.UICombobox.getSelectedIndeces/0	<it.yup.ui.UICombobox: int[] getSelectedIndeces()>
<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>/it.yup.ui.UICombobox.isMultiChoice/0	<it.yup.ui.UICombobox: boolean isMultiChoice()>
<it.yup.xmpp.SimpleDataFormExecutor: void display(javax.microedition.lcdui.Display,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.SimpleDataFormExecutor.display_internal/0	<it.yup.xmpp.SimpleDataFormExecutor: void display_internal()>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/0	<javax.microedition.lcdui.Form: int append(java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/2	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/3	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/4	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/5	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.append/6	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.screens.OptionsScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AddContactScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.screens.StatusScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.screens.StatusScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.screens.StatusScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.screens.StatusScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.screens.StatusScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataResultScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataResultScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataResultScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<com.jcraft.jzlib.ZOutputStream: void write(int)>/com.jcraft.jzlib.ZOutputStream.write/0	<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>
<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>/it.yup.xmpp.packets.Presence.setStatus/0	<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>
<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>/it.yup.xmpp.packets.Presence.setPriority/0	<it.yup.xmpp.packets.Presence: void setPriority(int)>
<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>/it.yup.xmpp.packets.Presence.setShow/0	<it.yup.xmpp.packets.Presence: void setShow(java.lang.String)>
<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.itemAction/0	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.itemAction/1	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.xmpp.packets.Presence: void setShow(java.lang.String)>/it.yup.xmpp.packets.Presence.removeChild/0	<it.yup.xml.Element: it.yup.xml.Element removeChild(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void setShow(java.lang.String)>/it.yup.xmpp.packets.Presence.addElementAndContent/0	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: java.lang.String getShow()>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void setPriority(int)>/it.yup.xmpp.packets.Presence.removeChild/0	<it.yup.xml.Element: it.yup.xml.Element removeChild(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void setPriority(int)>/it.yup.xmpp.packets.Presence.addElementAndContent/0	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<com.jcraft.jzlib.ZOutputStream: void finish()>/com.jcraft.jzlib.ZOutputStream.flush/0	<com.jcraft.jzlib.ZOutputStream: void flush()>
<it.yup.xmpp.packets.Presence: int getPriority()>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: java.lang.String getResource()>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>/it.yup.xmpp.packets.Presence.removeChild/0	<it.yup.xml.Element: it.yup.xml.Element removeChild(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>/it.yup.xmpp.packets.Presence.addElementAndContent/0	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<com.jcraft.jzlib.ZOutputStream: void close()>/com.jcraft.jzlib.ZOutputStream.finish/0	<com.jcraft.jzlib.ZOutputStream: void finish()>
<com.jcraft.jzlib.ZOutputStream: void close()>/com.jcraft.jzlib.ZOutputStream.end/0	<com.jcraft.jzlib.ZOutputStream: void end()>
<com.jcraft.jzlib.ZOutputStream: void close()>/com.jcraft.jzlib.ZOutputStream.end/1	<com.jcraft.jzlib.ZOutputStream: void end()>
<lampiro.screens.MMScreen: void showCamera()>/lampiro.screens.MMScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<lampiro.screens.MMScreen: void showAudio()>/lampiro.screens.MMScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<it.yup.tests.TestMidlet: void exit()>/it.yup.tests.TestMidlet.destroyApp/0	<it.yup.tests.TestMidlet: void destroyApp(boolean)>
<it.yup.tests.TestMidlet: void exit()>/it.yup.tests.TestMidlet.notifyDestroyed/0	<javax.microedition.midlet.MIDlet: void notifyDestroyed()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.MUCScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.MUCScreen.getMenu/1	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.MUCScreen.getMenu/2	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.MUCScreen.getMenu/3	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.MUCScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.MUCScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/lampiro.screens.MUCScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.closeMe/0	<lampiro.screens.ChatScreen: void closeMe()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.askTopic/0	<lampiro.screens.ChatScreen: void askTopic()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<it.yup.xmlstream.Element: java.lang.Object clone()>/it.yup.xmlstream.Element.clone/0	<it.yup.xmlstream.Element: it.yup.xmlstream.Element clone()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.GroupsScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.GroupsScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.GroupsScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.GroupsScreen.getMenu/1	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.GroupsScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.GroupsScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.sendInvite/0	<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.updateChildren/0	<it.yup.ui.UIPanel: void updateChildren()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedIndex/0	<it.yup.ui.UIPanel: int getSelectedIndex()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedIndex/1	<it.yup.ui.UIPanel: int getSelectedIndex()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedIndex/2	<it.yup.ui.UIPanel: int getSelectedIndex()>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<lampiro.screens.AboutScreen: void <init>()>/lampiro.screens.AboutScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.AboutScreen: void <init>()>/lampiro.screens.AboutScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AboutScreen: void <init>()>/lampiro.screens.AboutScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AboutScreen: void <init>()>/lampiro.screens.AboutScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItemAt/0	<it.yup.ui.UIPanel: void removeItemAt(int)>
<it.yup.ui.UIPanel: void removeItemAt(int)>/it.yup.ui.UIPanel.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.xmpp.IQResultListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.IQResultListener.handleResult/0	<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>
<it.yup.xmpp.IQResultListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.IQResultListener.handleError/0	<lampiro.screens.RosterScreen$IQResultListener2: void handleError(it.yup.xml.Element)>
<it.yup.xmlstream.KXmlSerializer: void endDocument()>/it.yup.xmlstream.KXmlSerializer.endTag/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void endDocument()>/it.yup.xmlstream.KXmlSerializer.flush/0	<it.yup.xmlstream.KXmlSerializer: void flush()>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.ChatScreen$ForwardScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.ChatScreen$ForwardScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.ChatScreen$ForwardScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.ChatScreen$ForwardScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.ChatScreen$ForwardScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIPanel: void removeAllItems()>/it.yup.ui.UIPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UIPanel: void setSelectedIndex(int)>/it.yup.ui.UIPanel.getContainer/0	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UIPanel: void setSelectedIndex(int)>/it.yup.ui.UIPanel.getContainer/1	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.xmlstream.KXmlSerializer: void ignorableWhitespace(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.text/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.setOutput/0	<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.Writer)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.StatusScreen: void <init>()>/lampiro.screens.StatusScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getNamespace()>/it.yup.xmlstream.KXmlSerializer.getDepth/0	<it.yup.xmlstream.KXmlSerializer: int getDepth()>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getNamespace()>/it.yup.xmlstream.KXmlSerializer.getDepth/1	<it.yup.xmlstream.KXmlSerializer: int getDepth()>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getName()>/it.yup.xmlstream.KXmlSerializer.getDepth/0	<it.yup.xmlstream.KXmlSerializer: int getDepth()>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getName()>/it.yup.xmlstream.KXmlSerializer.getDepth/1	<it.yup.xmlstream.KXmlSerializer: int getDepth()>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>/it.yup.xmlstream.KXmlSerializer.text/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<it.yup.xmpp.Roster: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Roster.saveToStorage/0	<it.yup.xmpp.Roster: void saveToStorage()>
<it.yup.util.XMPPConsumer: void <init>()>/it.yup.util.XMPPConsumer.start/0	<java.lang.Thread: void start()>
<lampiro.screens.SplashScreen: void <init>()>/lampiro.screens.SplashScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.SplashScreen: void <init>()>/lampiro.screens.SplashScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/lampiro.screens.SplashScreen.removePopup/0	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.screens.CommandListScreen.append/0	<javax.microedition.lcdui.List: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.screens.CommandListScreen.setCommandListener/0	<javax.microedition.lcdui.List: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.screens.CommandListScreen.setSelectCommand/0	<javax.microedition.lcdui.List: void setSelectCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.screens.CommandListScreen.addCommand/0	<javax.microedition.lcdui.List: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.xmlstream.KXmlParser: java.lang.String getNamespace(java.lang.String)>/it.yup.xmlstream.KXmlParser.getNamespaceCount/0	<it.yup.xmlstream.KXmlParser: int getNamespaceCount(int)>
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/it.yup.ui.UIRadioButtons.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/2	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/3	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/4	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/5	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/6	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/7	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/8	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/9	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/it.yup.xmlstream.KXmlParser.getText/0	<it.yup.xmlstream.KXmlParser: java.lang.String getText()>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/10	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/11	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/it.yup.xmlstream.KXmlParser.getText/1	<it.yup.xmlstream.KXmlParser: java.lang.String getText()>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/12	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/13	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/14	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/15	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/16	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/17	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UIRadioButtons.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UIRadioButtons.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UIRadioButtons.setDirty/1	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UIRadioButtons.askRepaint/1	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIRadioButtons.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIRadioButtons.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmlstream.KXmlParser: int nextTag()>/it.yup.xmlstream.KXmlParser.next/0	<it.yup.xmlstream.KXmlParser: int next()>
<it.yup.xmlstream.KXmlParser: int nextTag()>/it.yup.xmlstream.KXmlParser.next/1	<it.yup.xmlstream.KXmlParser: int next()>
<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlParser.getNamespace/0	<it.yup.xmlstream.KXmlParser: java.lang.String getNamespace()>
<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlParser.getName/0	<it.yup.xmlstream.KXmlParser: java.lang.String getName()>
<it.yup.xmlstream.KXmlParser: java.lang.String nextText()>/it.yup.xmlstream.KXmlParser.next/0	<it.yup.xmlstream.KXmlParser: int next()>
<it.yup.xmlstream.KXmlParser: java.lang.String nextText()>/it.yup.xmlstream.KXmlParser.getText/0	<it.yup.xmlstream.KXmlParser: java.lang.String getText()>
<it.yup.xmlstream.KXmlParser: java.lang.String nextText()>/it.yup.xmlstream.KXmlParser.next/1	<it.yup.xmlstream.KXmlParser: int next()>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.stream_authenticated/0	<it.yup.xmpp.XMPPClient: void stream_authenticated()>
<it.yup.xmlstream.KXmlParser: void skipSubTree()>/it.yup.xmlstream.KXmlParser.require/0	<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>
<it.yup.xmlstream.KXmlParser: void skipSubTree()>/it.yup.xmlstream.KXmlParser.next/0	<it.yup.xmlstream.KXmlParser: int next()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.XMPPClient.setPresence/0	<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String,int)>/it.yup.xmpp.XMPPClient.setPresence/0	<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.XMPPClient.closeStream/0	<it.yup.xmpp.XMPPClient: void closeStream()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/lampiro.screens.GrpMessageComposerScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.screens.RosterScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<it.yup.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.screens.RosterScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<it.yup.screens.RosterScreen: void removeAllContacts()>/it.yup.screens.RosterScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.screens.RosterScreen: void connectionLost()>/it.yup.screens.RosterScreen.removeAllContacts/0	<it.yup.screens.RosterScreen: void removeAllContacts()>
<lampiro.screens.ShowMMScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ShowMMScreen.itemAction/0	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.ShowMMScreen.playAudio/0	<lampiro.screens.ShowMMScreen: void playAudio()>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/lampiro.screens.DataResultScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataResultScreen.getSelectedIndex/0	<it.yup.ui.UIMenu: int getSelectedIndex()>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataResultScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataResultScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.append/2	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.append/3	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen.setItemStateListener/0	<javax.microedition.lcdui.Form: void setItemStateListener(javax.microedition.lcdui.ItemStateListener)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.SimpleComposerScreen.setTitle/0	<javax.microedition.lcdui.TextBox: void setTitle(java.lang.String)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.SimpleComposerScreen.addCommand/0	<javax.microedition.lcdui.TextBox: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.SimpleComposerScreen.addCommand/1	<javax.microedition.lcdui.TextBox: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.SimpleComposerScreen.setCommandListener/0	<javax.microedition.lcdui.TextBox: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.SimpleComposerScreen.removeCommand/0	<javax.microedition.lcdui.TextBox: void removeCommand(javax.microedition.lcdui.Command)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UILayout.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.screens.SimpleComposerScreen.setTitle/0	<javax.microedition.lcdui.TextBox: void setTitle(java.lang.String)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.screens.SimpleComposerScreen.addCommand/0	<javax.microedition.lcdui.TextBox: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.screens.SimpleComposerScreen.addCommand/1	<javax.microedition.lcdui.TextBox: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.screens.SimpleComposerScreen.setCommandListener/0	<javax.microedition.lcdui.TextBox: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.ui.UILayout: void setSelectedIndex(int)>/it.yup.ui.UILayout.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UILayout.getContainer/0	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UILayout.getContainer/1	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.updateChildren/0	<it.yup.ui.UILayout: void updateChildren()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.isFocusable/0	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.traverseFocusable/0	<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.updateChildren/1	<it.yup.ui.UILayout: void updateChildren()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.isFocusable/1	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.traverseFocusable/1	<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.updateChildren/2	<it.yup.ui.UILayout: void updateChildren()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.isFocusable/2	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.traverseFocusable/2	<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UILayout.updateChildren/3	<it.yup.ui.UILayout: void updateChildren()>
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/it.yup.xmpp.Contact.compileMessage/0	<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>
<it.yup.ui.UICheckbox: void setChecked(boolean)>/it.yup.ui.UICheckbox.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UICheckbox: boolean keyPressed(int)>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIContact.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIContact.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIContact.updateContactData/0	<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/lampiro.screens.RosterScreen$UIContact.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.xmpp.Contact: int getHistoryLength(java.lang.String)>/it.yup.xmpp.Contact.getMessageHistory/0	<it.yup.xmpp.Contact: java.util.Vector getMessageHistory(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/lampiro.screens.RosterScreen$UIContact.isSelected/0	<it.yup.ui.UIItem: boolean isSelected()>
<it.yup.xmpp.Contact: void resetMessageHistory(java.lang.String)>/it.yup.xmpp.Contact.getMessageHistory/0	<it.yup.xmpp.Contact: java.util.Vector getMessageHistory(java.lang.String)>
<it.yup.xmpp.Contact: boolean isVisible()>/it.yup.xmpp.Contact.unread_msg/0	<it.yup.xmpp.Contact: boolean unread_msg()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.updateExistingPresence/0	<it.yup.xmpp.Contact: void updateExistingPresence(it.yup.xmpp.packets.Presence)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.mapAvailability/0	<it.yup.xmpp.Contact: int mapAvailability(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.mapAvailability/1	<it.yup.xmpp.Contact: int mapAvailability(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.askCapabilities/0	<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.mapAvailability/2	<it.yup.xmpp.Contact: int mapAvailability(java.lang.String)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.CommandExecutor.sendReply/0	<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.CommandExecutor.sendReply/1	<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.CommandExecutor.sendReply/2	<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.CommandExecutor.sendReply/3	<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: void display(javax.microedition.lcdui.Display,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.CommandExecutor.display_internal/0	<it.yup.xmpp.CommandExecutor: void display_internal()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.CommandExecutor.getLabel/0	<it.yup.xmpp.CommandExecutor: java.lang.String getLabel()>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.unread_msg/1	<it.yup.xmpp.Contact: boolean unread_msg()>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.unread_msg/2	<it.yup.xmpp.Contact: boolean unread_msg()>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/1	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.xmpp.Contact: int getAvailability(java.lang.String)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<it.yup.xmpp.Contact: int getAvailability(java.lang.String)>/it.yup.xmpp.Contact.mapAvailability/0	<it.yup.xmpp.Contact: int mapAvailability(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen$RegisterWaitScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen$RegisterWaitScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen$RegisterWaitScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen$RegisterWaitScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Contact.updatePresence/0	<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$RegisterWaitScreen.stopWaiting/0	<lampiro.screens.RosterScreen$RegisterWaitScreen: void stopWaiting()>
<it.yup.tests.RMSTestMidlet$TestForm: void <init>(it.yup.tests.RMSTestMidlet,java.lang.String)>/it.yup.tests.RMSTestMidlet$TestForm.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.screens.SubscriptionConfirmAlert.setString/0	<javax.microedition.lcdui.Alert: void setString(java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.screens.SubscriptionConfirmAlert.setType/0	<javax.microedition.lcdui.Alert: void setType(javax.microedition.lcdui.AlertType)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.screens.SubscriptionConfirmAlert.setTimeout/0	<javax.microedition.lcdui.Alert: void setTimeout(int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.screens.SubscriptionConfirmAlert.addCommand/0	<javax.microedition.lcdui.Alert: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.screens.SubscriptionConfirmAlert.addCommand/1	<javax.microedition.lcdui.Alert: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.screens.SubscriptionConfirmAlert.setCommandListener/0	<javax.microedition.lcdui.Alert: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.xmpp.Contact: boolean supportsMUC(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.getCapabilities/0	<it.yup.xmpp.Contact: it.yup.xml.Element getCapabilities(it.yup.xmpp.packets.Presence)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.getPrintableHeight/0	<lampiro.screens.ChatScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.updateConversation/0	<lampiro.screens.ChatScreen: boolean updateConversation()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.askRepaint/1	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: boolean keyPressed(int)>/lampiro.screens.RegisterScreen.getSelectedIndex/0	<it.yup.ui.UIMenu: int getSelectedIndex()>
<lampiro.screens.RegisterScreen: boolean keyPressed(int)>/lampiro.screens.RegisterScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.RegisterScreen: void showNotify()>/lampiro.screens.RegisterScreen.setStatusLabel/0	<lampiro.screens.RegisterScreen: void setStatusLabel()>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.itemAction/0	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void hideNotify()>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void hideNotify()>/lampiro.screens.RosterScreen.replace/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void hideNotify()>/lampiro.screens.RosterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ChatScreen: void showNotify()>/lampiro.screens.ChatScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.closeMe/0	<lampiro.screens.ChatScreen: void closeMe()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.askTopic/0	<lampiro.screens.ChatScreen: void askTopic()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.askRepaint/1	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.askRepaint/2	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.askRepaint/3	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.askRepaint/4	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.removeAll/0	<it.yup.ui.UIScreen: void removeAll()>
<lampiro.screens.RosterScreen: void endDrag()>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.replace/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.setFreezed/2	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.replace/1	<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.setFreezed/3	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.askRepaint/1	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.remove/0	<it.yup.ui.UIScreen: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.itemAction/0	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.remove/1	<it.yup.ui.UIScreen: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.remove/2	<it.yup.ui.UIScreen: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.menuAction/0	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/0	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.isFreezed/0	<it.yup.ui.UIScreen: boolean isFreezed()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.addPopup/1	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/1	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/2	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/2	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/3	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/3	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.menuAction/0	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/1	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/4	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.addPopup/2	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/5	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/2	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/6	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.reorganizeContact/0	<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/7	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/3	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/4	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.captureMedia/0	<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/5	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.captureMedia/1	<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/6	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.captureMedia/2	<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/8	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removeAllContacts/0	<lampiro.screens.RosterScreen: void removeAllContacts()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setFreezed/9	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/4	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.captureMedia/3	<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/7	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.queryCmd/0	<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/8	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getWidth/1	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.addPopup/3	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/9	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/10	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.createMUC/0	<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/11	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/12	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/13	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/5	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.removePopup/14	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.askRepaint/6	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setWaitingDF/0	<lampiro.screens.RosterScreen: void setWaitingDF(lampiro.screens.RosterScreen$WaitScreen)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.ChatScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.ChatScreen.isPrintable/0	<lampiro.screens.ChatScreen: boolean isPrintable(int)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.isMyPacket/0	<lampiro.screens.ChatScreen: boolean isMyPacket(it.yup.xml.Element)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.needDisplay/0	<lampiro.screens.ChatScreen: boolean needDisplay()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.updateConversation/0	<lampiro.screens.ChatScreen: boolean updateConversation()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.setFreezed/2	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.ChatScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.ChatScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.xml.KXmlParser: java.lang.String getNamespace(java.lang.String)>/it.yup.xml.KXmlParser.getNamespaceCount/0	<it.yup.xml.KXmlParser: int getNamespaceCount(int)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/2	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/3	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/4	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/5	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/6	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/7	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/8	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/9	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/it.yup.xml.KXmlParser.getText/0	<it.yup.xml.KXmlParser: java.lang.String getText()>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/10	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/11	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/it.yup.xml.KXmlParser.getText/1	<it.yup.xml.KXmlParser: java.lang.String getText()>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/12	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/13	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/14	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/15	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/16	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getPositionDescription()>/java.lang.StringBuffer.append/17	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.reorganizeContact/0	<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.askRepaint/1	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.askRepaint/2	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ChatScreen.addCommand/0	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ChatScreen.addCommand/1	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ChatScreen.addCommand/2	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ChatScreen.setCommandListener/0	<javax.microedition.lcdui.Canvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ChatScreen.setTitle/0	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<it.yup.xml.KXmlParser: int nextTag()>/it.yup.xml.KXmlParser.next/0	<it.yup.xml.KXmlParser: int next()>
<it.yup.xml.KXmlParser: int nextTag()>/it.yup.xml.KXmlParser.next/1	<it.yup.xml.KXmlParser: int next()>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>/it.yup.xml.KXmlParser.getNamespace/0	<it.yup.xml.KXmlParser: java.lang.String getNamespace()>
<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>/it.yup.xml.KXmlParser.getName/0	<it.yup.xml.KXmlParser: java.lang.String getName()>
<it.yup.xml.KXmlParser: java.lang.String nextText()>/it.yup.xml.KXmlParser.next/0	<it.yup.xml.KXmlParser: int next()>
<it.yup.xml.KXmlParser: java.lang.String nextText()>/it.yup.xml.KXmlParser.getText/0	<it.yup.xml.KXmlParser: java.lang.String getText()>
<it.yup.xml.KXmlParser: java.lang.String nextText()>/it.yup.xml.KXmlParser.next/1	<it.yup.xml.KXmlParser: int next()>
<it.yup.xml.KXmlParser: void skipSubTree()>/it.yup.xml.KXmlParser.require/0	<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>
<it.yup.xml.KXmlParser: void skipSubTree()>/it.yup.xml.KXmlParser.next/0	<it.yup.xml.KXmlParser: int next()>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.ChatScreen.removeCommand/0	<javax.microedition.lcdui.Canvas: void removeCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.ChatScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.RosterScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.RosterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.DeleteContactAlert.setString/0	<javax.microedition.lcdui.Alert: void setString(java.lang.String)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.DeleteContactAlert.setType/0	<javax.microedition.lcdui.Alert: void setType(javax.microedition.lcdui.AlertType)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.DeleteContactAlert.setTimeout/0	<javax.microedition.lcdui.Alert: void setTimeout(int)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.DeleteContactAlert.addCommand/0	<javax.microedition.lcdui.Alert: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.DeleteContactAlert.addCommand/1	<javax.microedition.lcdui.Alert: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.DeleteContactAlert.setCommandListener/0	<javax.microedition.lcdui.Alert: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.screens.ChatScreen.repaint/0	<javax.microedition.lcdui.Canvas: void repaint()>
<it.yup.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.screens.ChatScreen.repaint/1	<javax.microedition.lcdui.Canvas: void repaint()>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/lampiro.screens.RosterScreen.removeContact/0	<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void connectionLost()>/lampiro.screens.RosterScreen.removeAllContacts/0	<lampiro.screens.RosterScreen: void removeAllContacts()>
<lampiro.screens.RosterScreen: void connectionLost()>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<it.yup.ui.UICanvas: void pointerPressed(int,int)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<it.yup.ui.UICanvas: void pointerDragged(int,int)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<it.yup.ui.UICanvas: void pointerReleased(int,int)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.flushGraphics/0	<javax.microedition.lcdui.game.GameCanvas: void flushGraphics()>
<it.yup.ui.UIMenu: void setOpenedState(boolean)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.getContainer/0	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.getContainer/1	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataFormScreen.setTitle/0	<javax.microedition.lcdui.Form: void setTitle(java.lang.String)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataFormScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataFormScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataFormScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataFormScreen.setItemStateListener/0	<javax.microedition.lcdui.Form: void setItemStateListener(javax.microedition.lcdui.ItemStateListener)>
<it.yup.screens.DataFormScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/it.yup.screens.DataFormScreen.commandAction/0	<it.yup.screens.DataFormScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.screens.DataFormScreen.insert/0	<javax.microedition.lcdui.Form: void insert(int,javax.microedition.lcdui.Item)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.screens.DataFormScreen.delete/0	<javax.microedition.lcdui.Form: void delete(int)>
<it.yup.xml.KXmlSerializer: void endDocument()>/it.yup.xml.KXmlSerializer.endTag/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>
<it.yup.xml.KXmlSerializer: void endDocument()>/it.yup.xml.KXmlSerializer.flush/0	<it.yup.xml.KXmlSerializer: void flush()>
<com.jcraft.jzlib.ZStream: int inflateInit()>/com.jcraft.jzlib.ZStream.inflateInit/0	<com.jcraft.jzlib.ZStream: int inflateInit(int)>
<com.jcraft.jzlib.ZStream: int inflateInit(boolean)>/com.jcraft.jzlib.ZStream.inflateInit/0	<com.jcraft.jzlib.ZStream: int inflateInit(int,boolean)>
<com.jcraft.jzlib.ZStream: int inflateInit(int)>/com.jcraft.jzlib.ZStream.inflateInit/0	<com.jcraft.jzlib.ZStream: int inflateInit(int,boolean)>
<com.jcraft.jzlib.ZStream: int deflateInit(int)>/com.jcraft.jzlib.ZStream.deflateInit/0	<com.jcraft.jzlib.ZStream: int deflateInit(int,int)>
<com.jcraft.jzlib.ZStream: int deflateInit(int,boolean)>/com.jcraft.jzlib.ZStream.deflateInit/0	<com.jcraft.jzlib.ZStream: int deflateInit(int,int,boolean)>
<com.jcraft.jzlib.ZStream: int deflateInit(int,int)>/com.jcraft.jzlib.ZStream.deflateInit/0	<com.jcraft.jzlib.ZStream: int deflateInit(int,int,boolean)>
<it.yup.xml.KXmlSerializer: void ignorableWhitespace(java.lang.String)>/it.yup.xml.KXmlSerializer.text/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/it.yup.xml.KXmlSerializer.setOutput/0	<it.yup.xml.KXmlSerializer: void setOutput(java.io.Writer)>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextField.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextField.setMaxHeight/0	<it.yup.ui.UITextField: void setMaxHeight(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.setTitle/1	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.getWidth/1	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.getWidth/2	<it.yup.ui.UIItem: int getWidth()>
<it.yup.xml.KXmlSerializer: java.lang.String getNamespace()>/it.yup.xml.KXmlSerializer.getDepth/0	<it.yup.xml.KXmlSerializer: int getDepth()>
<it.yup.xml.KXmlSerializer: java.lang.String getNamespace()>/it.yup.xml.KXmlSerializer.getDepth/1	<it.yup.xml.KXmlSerializer: int getDepth()>
<it.yup.xml.KXmlSerializer: java.lang.String getName()>/it.yup.xml.KXmlSerializer.getDepth/0	<it.yup.xml.KXmlSerializer: int getDepth()>
<it.yup.xml.KXmlSerializer: java.lang.String getName()>/it.yup.xml.KXmlSerializer.getDepth/1	<it.yup.xml.KXmlSerializer: int getDepth()>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>/it.yup.xml.KXmlSerializer.text/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<it.yup.util.MetaVector: boolean contains(java.lang.Object)>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<it.yup.util.MetaVector: void copyInto(java.lang.Object[])>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<it.yup.util.MetaVector: java.lang.Object firstElement()>/it.yup.util.MetaVector.elementAt/0	<it.yup.util.MetaVector: java.lang.Object elementAt(int)>
<it.yup.util.MetaVector: int indexOf(java.lang.Object)>/it.yup.util.MetaVector.indexOf/0	<it.yup.util.MetaVector: int indexOf(java.lang.Object,int)>
<it.yup.util.MetaVector: int indexOf(java.lang.Object,int)>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>/it.yup.util.MetaVector.size/0	<it.yup.util.MetaVector: int size()>
<it.yup.ui.UITextField: void setWrappable(boolean)>/it.yup.ui.UITextField.setDirty/0	<it.yup.ui.UITextField: void setDirty(boolean)>
<it.yup.ui.UITextField: void setWrappable(boolean)>/it.yup.ui.UITextField.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.util.MetaVector: boolean isEmpty()>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextField.unExpand/0	<it.yup.ui.UITextField: void unExpand()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextField.unExpand/1	<it.yup.ui.UITextField: void unExpand()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextField.expand/0	<it.yup.ui.UITextField: void expand()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextField.handleScreen/0	<it.yup.ui.UITextField: void handleScreen()>
<it.yup.util.MetaVector: java.lang.Object lastElement()>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object)>/it.yup.util.MetaVector.lastIndexOf/0	<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object,int)>
<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object,int)>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<it.yup.ui.UITextField: void unExpand()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<it.yup.ui.UITextField: void unExpand()>/it.yup.ui.UITextField.setDirty/0	<it.yup.ui.UITextField: void setDirty(boolean)>
<it.yup.ui.UITextField: void unExpand()>/it.yup.ui.UITextField.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UITextField.setMaxHeight/0	<it.yup.ui.UITextField: void setMaxHeight(int)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UITextField.setDirty/0	<it.yup.ui.UITextField: void setDirty(boolean)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UITextField.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UITextField.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.util.MetaVector: java.lang.String toString()>/it.yup.util.MetaVector.elements/0	<it.yup.util.MetaVector: java.util.Enumeration elements()>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.getSelectedItem/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.getSelectedIndex/0	<it.yup.ui.UIMenu: int getSelectedIndex()>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.addPopup/1	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/lampiro.screens.DataFormScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.MUCComposer.removeCommand/0	<javax.microedition.lcdui.TextBox: void removeCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.DataFormScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.menuAction/0	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<com.jcraft.jzlib.ZInputStream: int read()>/com.jcraft.jzlib.ZInputStream.read/0	<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UICombobox$UIComboScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UICombobox$UIComboScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UICombobox$UIComboScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UICombobox$UIComboScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIScreen.setItemList/0	<it.yup.ui.UIMenu: void setItemList(java.util.Vector)>
<com.jcraft.jzlib.ZInputStream: long skip(long)>/com.jcraft.jzlib.ZInputStream.read/0	<com.jcraft.jzlib.FilterInputStream: int read(byte[])>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.getMenu/1	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIScreen.invalidateArea/0	<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void removeAllPopups()>/it.yup.ui.UIScreen.invalidateArea/0	<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>
<it.yup.ui.UIScreen: void removeAllPopups()>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getSelectedIndex/0	<it.yup.ui.UIMenu: int getSelectedIndex()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/3	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/4	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getItemList/5	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.getItemList/3	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.getItemList/4	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean remove(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean remove(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.remove/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>
<it.yup.ui.UIScreen: void removeAll()>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void replace(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void replace(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.replace/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/3	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/4	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/5	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/6	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/7	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.getItemList/8	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void swap(int,int)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.handleMenuKey/0	<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.handleMenuKey/1	<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<it.yup.ui.UIScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<it.yup.ui.UIScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/3	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<it.yup.ui.UIScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<it.yup.ui.UIScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<it.yup.ui.UIScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/4	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.traverseFocusable/0	<it.yup.ui.UIMenu: int traverseFocusable(int,boolean)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/5	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/6	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/7	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/8	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/9	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.askRepaint/1	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/10	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.traverseFocusable/1	<it.yup.ui.UIMenu: int traverseFocusable(int,boolean)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/11	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/12	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/13	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/14	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/15	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/16	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/17	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/18	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/19	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/20	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.askRepaint/2	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.getItemList/21	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<it.yup.ui.UIScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/0	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/1	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/2	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/3	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/4	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/5	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.setTitle/0	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.addCommand/6	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/lampiro.screens.InnerMMScreen.setCommandListener/0	<javax.microedition.lcdui.Canvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/4	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/5	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/6	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/7	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/8	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.append/9	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.OptionsScreen: void <init>()>/lampiro.screens.OptionsScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.setTitle/0	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.setTitle/1	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.setTitle/2	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.setTitle/3	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.setTitle/4	<javax.microedition.lcdui.Canvas: void setTitle(java.lang.String)>
<lampiro.screens.InnerMMScreen: void captureAudio()>/lampiro.screens.InnerMMScreen.addCommand/0	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lampiro.screens.InnerMMScreen: void captureVideo()>/lampiro.screens.InnerMMScreen.getVideoRes/0	<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.setDirty/1	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.askRepaint/1	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.saveOptions/0	<lampiro.screens.OptionsScreen: void saveOptions()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/lampiro.screens.SendMMScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.paint0/0	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getNeedScrollbar/0	<it.yup.ui.UIMenu: boolean getNeedScrollbar()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIScreen.getItemList/3	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.removeAll/0	<it.yup.ui.UIScreen: void removeAll()>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.getGraphics/1	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.KeyScreen: void checkKeys()>/lampiro.screens.KeyScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SendMMScreen.menuAction/0	<lampiro.screens.ShowMMScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SendMMScreen.itemAction/0	<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.removePopup/0	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.removePopup/1	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.addPopup/1	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.setDirty/1	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.askRepaint/1	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.removePopup/2	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.addPopup/2	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.setDirty/2	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.askRepaint/2	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.setDirty/3	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.removePopup/3	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.addPopup/3	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.askRepaint/3	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.removePopup/4	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.removePopup/5	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.addPopup/4	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.setDirty/4	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.askRepaint/4	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/it.yup.ui.UIGauge.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UIScreen: void invalidate(int,int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIGauge: boolean keyPressed(int)>/it.yup.ui.UIGauge.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIGauge: boolean keyPressed(int)>/it.yup.ui.UIGauge.askRepaint/1	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIGauge: void setLabel(java.lang.String)>/it.yup.ui.UIGauge.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIGauge: void setValue(int)>/it.yup.ui.UIGauge.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void keyRepeated(int)>/it.yup.ui.UIScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<it.yup.ui.UIScreen: void keyRepeated(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.ui.UIScreen: void keyRepeated(int)>/it.yup.ui.UIScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<it.yup.ui.UIScreen: void keyRepeated(int)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void addPaintedItem(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.tests.XMLTestMidlet: void exit()>/it.yup.tests.XMLTestMidlet.destroyApp/0	<it.yup.tests.XMLTestMidlet: void destroyApp(boolean)>
<it.yup.tests.XMLTestMidlet: void exit()>/it.yup.tests.XMLTestMidlet.notifyDestroyed/0	<javax.microedition.midlet.MIDlet: void notifyDestroyed()>
<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>/it.yup.xmlstream.BasicXmlStream.tryToSend/0	<it.yup.xmlstream.SocketStream: void tryToSend()>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.resetStorage/0	<it.yup.xmpp.Config: void resetStorage(boolean)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.screens.TaskListScreen.append/0	<javax.microedition.lcdui.List: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.screens.TaskListScreen.setCommandListener/0	<javax.microedition.lcdui.List: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.screens.TaskListScreen.addCommand/0	<javax.microedition.lcdui.List: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.Config.getData/0	<it.yup.xmpp.Config: byte[] getData(byte[])>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.Config.setData/0	<it.yup.xmpp.Config: void setData(byte[],byte[])>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.Config.setData/1	<it.yup.xmpp.Config: void setData(byte[],byte[])>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.Config.setData/2	<it.yup.xmpp.Config: void setData(byte[],byte[])>
<it.yup.xmpp.XMPPClient$TimerTask1: void run()>/it.yup.xmpp.XMPPClient$TimerTask1.cancel/0	<java.util.TimerTask: boolean cancel()>
<it.yup.util.NetworkConsumer: void <init>()>/it.yup.util.NetworkConsumer.start/0	<java.lang.Thread: void start()>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/it.yup.xmpp.Config.getData/0	<it.yup.xmpp.Config: byte[] getData(byte[])>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/it.yup.xmpp.Config.getData/1	<it.yup.xmpp.Config: byte[] getData(byte[])>
<it.yup.transport.SocketChannel: void open()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
<it.yup.transport.SocketChannel: void close()>/it.yup.transport.SocketChannel.pollAlive/0	<it.yup.transport.SocketChannel: boolean pollAlive()>
<it.yup.xmlstream.BasicXmlStream: void nextInitializer()>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.transport.SocketChannel: it.yup.transport.SocketChannel$UTFReader getReader()>/it.yup.transport.SocketChannel.getInputStream/0	<it.yup.transport.SocketChannel: java.io.InputStream getInputStream()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.contactLayout/0	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.contactLayout/1	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.contactLayout/2	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.contactLayout/3	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.contactLayout/4	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.contactLayout/5	<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.getWidth/1	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<it.yup.ui.Semaphore: void acquire()>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
<it.yup.ui.Semaphore: void acquire()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
<it.yup.ui.Semaphore: boolean attempt(long)>/java.lang.Object.wait/0	<java.lang.Object: void wait(long)>
<it.yup.ui.Semaphore: boolean attempt(long)>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
<it.yup.ui.Semaphore: void release()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
<it.yup.ui.Semaphore: void release(long)>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>/it.yup.util.MetaVector$MultiVectorEnumeration.nextElement/0	<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuffer.append/2	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.lang.StringBuffer.append/3	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.Element: void setAttributes(java.lang.String[],java.lang.String[])>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.ui.UIAccordion: void <init>()>/it.yup.ui.UIAccordion.setItems/0	<it.yup.ui.UIPanel: void setItems(java.util.Vector)>
<it.yup.ui.UIAccordion: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.xml.Element: void removeChild(it.yup.xml.Element)>/it.yup.xml.Element.ensureCapacity/0	<it.yup.xml.Element: void ensureCapacity(int,byte)>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem,java.util.Vector)>/it.yup.ui.UIAccordion.addItem/0	<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int,java.util.Vector)>/it.yup.ui.UIAccordion.insertItem/0	<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>
<it.yup.ui.UIAccordion: int getPanelIndex(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: int getPanelSize(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: it.yup.ui.UIItem getPanelItem(it.yup.ui.UIItem,int)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getScreen/0	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getScreen/1	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<it.yup.ui.UIAccordion: void insertPanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem,int)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void insertPanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem,int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.xml.Element: java.lang.String getText()>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIAccordion.getContainer/0	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIAccordion.getContainer/1	<it.yup.ui.UIItem: it.yup.ui.UIIContainer getContainer()>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UIAccordion.clickLabel/0	<it.yup.ui.UIAccordion: void clickLabel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UIAccordion.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIAccordion: void openLabel(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.clickLabel/0	<it.yup.ui.UIAccordion: void clickLabel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void closeLabel(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.clickLabel/0	<it.yup.ui.UIAccordion: void clickLabel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: java.util.Enumeration getSubPanelElements(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.xml.Element: java.lang.Object clone()>/it.yup.xml.Element.clone/0	<it.yup.xml.Element: it.yup.xml.Element clone()>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIAccordion.getSelectedItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIAccordion.getScreen/0	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIAccordion.getScreen/1	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.getItems/3	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/3	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/4	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/5	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/6	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.getItems/7	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/lampiro.screens.TaskListScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/lampiro.screens.TaskListScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/lampiro.screens.TaskListScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/lampiro.screens.TaskListScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/4	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/5	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/6	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/7	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/8	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/9	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/10	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/11	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/12	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/13	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/14	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/15	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/16	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/17	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/18	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/19	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/20	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/21	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/22	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/23	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/24	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/25	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/26	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/27	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/28	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/29	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/30	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/31	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/32	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.tests.UITestMidlet$TestScreen.append/33	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.tests.UITestMidlet$TestScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.tests.UITestMidlet$TestScreen.addPopup/1	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/it.yup.ui.UILabel.getTextWidth/0	<it.yup.ui.UILabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.computeTextLines/0	<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>
<it.yup.ui.UILabel: void setWrappable(boolean,int)>/it.yup.ui.UILabel.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.CommandListScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.CommandListScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.CommandListScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.CommandListScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.CommandListScreen.stopWaiting/0	<lampiro.screens.CommandListScreen: void stopWaiting()>
<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.CommandListScreen.itemAction/0	<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/lampiro.screens.CommandListScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.CommandListScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.CommandListScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UITextPanel: void <init>()>/it.yup.ui.UITextPanel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UITextPanel: void setText(java.lang.String)>/it.yup.ui.UITextPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.xmlstream.SocketStream: void connectionEstablished(it.yup.transport.BaseChannel)>/it.yup.xmlstream.SocketStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.SocketStream: void connectionEstablished(it.yup.transport.BaseChannel)>/it.yup.xmlstream.SocketStream.restart/0	<it.yup.xmlstream.SocketStream: void restart()>
<it.yup.xmlstream.SocketStream: void connectionEstablished(it.yup.transport.BaseChannel)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
<it.yup.xmlstream.SocketStream: void connectionFailed(it.yup.transport.BaseChannel)>/it.yup.xmlstream.SocketStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>/it.yup.xmlstream.SocketStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>/it.yup.xmlstream.SocketStream.dispatchEvent/1	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xmlstream.SocketStream.promotePacket/0	<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xmlstream.SocketStream.processFeatures/0	<it.yup.xmlstream.BasicXmlStream: void processFeatures(it.yup.xml.Element[])>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xmlstream.SocketStream.connectionLost/0	<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xmlstream.SocketStream.connectionLost/1	<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xmlstream.SocketStream.connectionLost/2	<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UITextPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UITextPanel.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UITextPanel.setDirty/1	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UITextPanel.askRepaint/1	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UITextPanel: void setFont(javax.microedition.lcdui.Font)>/it.yup.ui.UITextPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UITextPanel: void setSelected(boolean)>/it.yup.ui.UITextPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UITextPanel: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UITextPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>/it.yup.xmpp.packets.Message.removeChild/0	<it.yup.xml.Element: it.yup.xml.Element removeChild(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>/it.yup.xmpp.packets.Message.addElementAndContent/0	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Message: java.lang.String getBody()>/it.yup.xmpp.packets.Message.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Message: java.lang.String getErrorText()>/it.yup.xmpp.packets.Message.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.tests.UITestMidlet$KeysScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.tests.UITestMidlet$KeysScreen.setFullScreenMode/0	<javax.microedition.lcdui.Canvas: void setFullScreenMode(boolean)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/lampiro.screens.AlbumScreen.setupScreen/0	<lampiro.screens.AlbumScreen: void setupScreen()>
<lampiro.screens.FTScreen: void ftFinished(java.lang.Object)>/lampiro.screens.FTScreen.fillScreen/0	<lampiro.screens.FTScreen: void fillScreen()>
<lampiro.screens.FTScreen: void ftAccept(it.yup.xmpp.FTSender,boolean)>/lampiro.screens.FTScreen.fillScreen/0	<lampiro.screens.FTScreen: void fillScreen()>
<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/lampiro.screens.FTScreen.fillScreen/0	<lampiro.screens.FTScreen: void fillScreen()>
<lampiro.screens.FTScreen: void chunkTransferred(int,int,java.lang.Object)>/lampiro.screens.FTScreen.fillScreen/0	<lampiro.screens.FTScreen: void fillScreen()>
<it.yup.screens.RegisterScreen: it.yup.screens.RegisterScreen getInstance()>/it.yup.screens.RegisterScreen.placeItems/0	<it.yup.screens.RegisterScreen: void placeItems()>
<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>/lampiro.screens.FTScreen.fillScreen/0	<lampiro.screens.FTScreen: void fillScreen()>
<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>/it.yup.xmpp.Config.loadFromStorage/0	<it.yup.xmpp.Config: void loadFromStorage()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.SubscribeScreen: void <clinit>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmpp.Group: void <clinit>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.AlbumScreen: void <clinit>()>/it.yup.util.RMSIndex.<init>/0	<it.yup.util.RMSIndex: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <clinit>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/0	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/1	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/2	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/3	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/4	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/5	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/6	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/7	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/8	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/9	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/10	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/11	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/12	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICanvas: void <clinit>()>/java.lang.Integer.<init>/13	<java.lang.Integer: void <init>(int)>
<lampiro.screens.FTScreen: void <clinit>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.Utils: void <clinit>()>/java.util.Timer.<init>/0	<java.util.Timer: void <init>()>
<it.yup.xmlstream.BasicXmlStream: void <clinit>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<it.yup.util.Logger: void <clinit>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<com.jcraft.jzlib.JZlib: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.AboutScreen: void <init>()>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<it.yup.ui.UISeparator: void <init>(int)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.ui.UISeparator: void <init>(int,int)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen$IQResultListener1.<init>/0	<lampiro.screens.RosterScreen$IQResultListener1: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$IQResultListener1)>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.screens.DebugScreen: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.DebugScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DebugScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DebugScreen: void <init>()>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.DebugScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.StringItem.<init>/1	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.<init>/1	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextField.<init>/1	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextField.<init>/2	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.ImageItem.<init>/0	<javax.microedition.lcdui.ImageItem: void <init>(java.lang.String,javax.microedition.lcdui.Image,int,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.<init>/1	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.<init>/2	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.<init>/3	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String,int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.screens.ContactInfoScreen$1.<init>/0	<it.yup.screens.ContactInfoScreen$1: void <init>(it.yup.screens.ContactInfoScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UILabel.keyPressed/0	<it.yup.ui.UIItem: boolean keyPressed(int)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.parseForm/0	<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.parseForm/1	<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.parseItem/0	<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.parseForm/2	<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.MUC: void <init>(java.lang.String,java.lang.String)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.xmpp.MUC: void <init>(java.lang.String,java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(it.yup.xml.Element)>
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.<init>/1	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.DebugScreen: void <init>()>/lampiro.screens.DebugScreen.setupLogging/0	<lampiro.screens.DebugScreen: void setupLogging()>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/1	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/2	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/3	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.DebugScreen.setupLogging/0	<lampiro.screens.DebugScreen: void setupLogging()>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/java.lang.Integer.<init>/0	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UICombobox$UIComboScreen.<init>/0	<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>
<it.yup.ui.UICombobox: void setSelected(boolean)>/it.yup.ui.UILabel.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UICombobox: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<it.yup.ui.UICombobox: boolean keyPressed(int)>/it.yup.ui.UILabel.keyPressed/0	<it.yup.ui.UIItem: boolean keyPressed(int)>
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/java.lang.Integer.<init>/0	<java.lang.Integer: void <init>(int)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.ui.UICombobox: void setDirty(boolean)>/it.yup.ui.UILabel.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<lampiro.screens.FTScreen$FTItem: void <init>(java.lang.Object,int,boolean,int,java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIUtils: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/java.lang.String.<init>/0	<java.lang.String: void <init>()>
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.<init>/0	<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/java.util.Date.<init>/0	<java.util.Date: void <init>()>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.SimpleDataFormExecutor.buildReply/0	<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>
<it.yup.tests.UITestMidlet: void <init>()>/javax.microedition.midlet.MIDlet.<init>/0	<javax.microedition.midlet.MIDlet: void <init>()>
<it.yup.tests.UITestMidlet: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet: void <init>()>/it.yup.tests.UITestMidlet$KeysScreen.<init>/0	<it.yup.tests.UITestMidlet$KeysScreen: void <init>(it.yup.tests.UITestMidlet)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.AddContactScreen: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UITextField.<init>/2	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.AddContactScreen: void <init>()>/lampiro.screens.AddContactScreen.getGateways/0	<lampiro.screens.AddContactScreen: void getGateways()>
<it.yup.tests.UITestMidlet$TestScreen$Changer: void run()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>/java.lang.String.<init>/0	<java.lang.String: void <init>(byte[],java.lang.String)>
<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>/java.lang.String.<init>/1	<java.lang.String: void <init>(byte[],java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/1	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.Spacer.<init>/0	<javax.microedition.lcdui.Spacer: void <init>(int,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.Gauge.<init>/0	<javax.microedition.lcdui.Gauge: void <init>(java.lang.String,boolean,int,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.Spacer.<init>/1	<javax.microedition.lcdui.Spacer: void <init>(int,int)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AddContactScreen$IQResultListener1.<init>/0	<lampiro.screens.AddContactScreen$IQResultListener1: void <init>(lampiro.screens.AddContactScreen,lampiro.screens.AddContactScreen$IQResultListener1)>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AddContactScreen.registerContact/0	<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AddContactScreen$IQResultListener2.<init>/0	<lampiro.screens.AddContactScreen$IQResultListener2: void <init>(lampiro.screens.AddContactScreen,lampiro.screens.AddContactScreen$IQResultListener2)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Alert.<init>/0	<javax.microedition.lcdui.Alert: void <init>(java.lang.String,java.lang.String,javax.microedition.lcdui.Image,javax.microedition.lcdui.AlertType)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.OptionsScreen$1.<init>/0	<it.yup.screens.OptionsScreen$1: void <init>(it.yup.screens.OptionsScreen)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.ChatScreen$UICutLabel: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIEmoLabel.<init>/0	<it.yup.ui.UIEmoLabel: void <init>(java.lang.String)>
<it.yup.xmpp.Group: it.yup.xml.Element store()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void <init>(java.lang.String,byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTSender$FTSEventHandler)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/2	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/3	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataResultScreen.showCurrent/0	<it.yup.screens.DataResultScreen: void showCurrent()>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.String.<init>/0	<java.lang.String: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/java.lang.String.<init>/1	<java.lang.String: void <init>(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.FTSender$IQResultListener1.<init>/0	<it.yup.xmpp.FTSender$IQResultListener1: void <init>(it.yup.xmpp.FTSender,it.yup.xmpp.FTSender$IQResultListener1)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.FTSender$PacketListener1.<init>/0	<it.yup.xmpp.FTSender$PacketListener1: void <init>(it.yup.xmpp.FTSender,it.yup.xmpp.FTSender$PacketListener1)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmlstream.EventQuery.<init>/2	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.packets.Stanza: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(it.yup.xml.Element)>
<it.yup.screens.DataResultScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DataResultScreen.showCurrent/0	<it.yup.screens.DataResultScreen: void showCurrent()>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream)>/java.io.OutputStream.<init>/0	<java.io.OutputStream: void <init>()>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream)>/com.jcraft.jzlib.ZStream.<init>/0	<com.jcraft.jzlib.ZStream: void <init>()>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int)>/com.jcraft.jzlib.ZOutputStream.<init>/0	<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>/java.io.OutputStream.<init>/0	<java.io.OutputStream: void <init>()>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>/com.jcraft.jzlib.ZStream.<init>/0	<com.jcraft.jzlib.ZStream: void <init>()>
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/com.jcraft.jzlib.ZStreamException.<init>/0	<com.jcraft.jzlib.ZStreamException: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.xmpp.packets.Presence: void <init>()>/it.yup.xmpp.packets.Stanza.<init>/0	<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>/it.yup.xmpp.packets.Stanza.<init>/0	<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
<it.yup.xmpp.packets.Presence: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.Stanza.<init>/0	<it.yup.xmpp.packets.Stanza: void <init>(it.yup.xml.Element)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.loadFiles/0	<lampiro.screens.AlbumScreen: void loadFiles()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.loadFiles/1	<lampiro.screens.AlbumScreen: void loadFiles()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.AlbumScreen.loadFiles/2	<lampiro.screens.AlbumScreen: void loadFiles()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SendMMScreen.<init>/0	<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
<com.jcraft.jzlib.ZOutputStream: void finish()>/com.jcraft.jzlib.ZStreamException.<init>/0	<com.jcraft.jzlib.ZStreamException: void <init>(java.lang.String)>
<lampiro.screens.MMScreen: void <init>(java.lang.String)>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<lampiro.screens.MMScreen: void showCamera()>/lampiro.screens.InnerMMScreen.<init>/0	<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>
<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>/it.yup.xmpp.packets.Stanza.<init>/0	<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.jcraft.jzlib.ZStreamException: void <init>()>/java.io.IOException.<init>/0	<java.io.IOException: void <init>()>
<com.jcraft.jzlib.ZStreamException: void <init>(java.lang.String)>/java.io.IOException.<init>/0	<java.io.IOException: void <init>(java.lang.String)>
<lampiro.screens.MMScreen: void showAudio()>/lampiro.screens.InnerMMScreen.<init>/0	<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>
<lampiro.screens.ShowMMScreen$1: void run()>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.tests.TestMidlet: void <init>()>/javax.microedition.midlet.MIDlet.<init>/0	<javax.microedition.midlet.MIDlet: void <init>()>
<it.yup.tests.TestMidlet: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.tests.TestMidlet: void <init>()>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.<init>/0	<it.yup.util.MetaVector: void <init>()>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.xmlstream.Element: void <init>(java.lang.String,java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.Element: void <init>(java.lang.String,java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmlstream.Element: void <init>(java.lang.String,java.lang.String)>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element addElement(java.lang.String,java.lang.String)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ChatScreen.<init>/0	<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<it.yup.xmlstream.Element: byte[] toXml()>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.xmlstream.Element: byte[] toXml()>/it.yup.xmlstream.KXmlSerializer.<init>/0	<it.yup.xmlstream.KXmlSerializer: void <init>()>
<it.yup.xmlstream.Element: byte[] toXml()>/it.yup.xmlstream.Element.write/0	<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>
<it.yup.xmlstream.Element: void <init>(it.yup.xmlstream.Element)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<it.yup.ui.UIPanel: void <init>(boolean,boolean)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<it.yup.ui.UIPanel: void <init>()>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.ui.UIPanel: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/lampiro.screens.MUCScreen.populateRosterCombo/0	<lampiro.screens.MUCScreen: void populateRosterCombo()>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/lampiro.screens.ChatScreen.keyPressed/0	<lampiro.screens.ChatScreen: boolean keyPressed(int)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element clone()>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MUCScreen.populateRosterCombo/0	<lampiro.screens.MUCScreen: void populateRosterCombo()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.menuAction/0	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.menuAction/1	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.ChatScreen.itemAction/0	<it.yup.ui.UIScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/1	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.ScreenSaver: void <init>(javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<lampiro.screens.AboutScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.AboutScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<lampiro.screens.AboutScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient$DataFormHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.SimpleDataFormExecutor.<init>/0	<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen$IQResultListener1.getBasePath/0	<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>
<it.yup.xmlstream.KXmlSerializer: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIPanel: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.xmpp.IQResultListener: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.KXmlSerializer: void entityRef(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>/it.yup.xmlstream.KXmlSerializer.getPrefix/0	<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: java.lang.Object getProperty(java.lang.String)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void setFeature(java.lang.String,boolean)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.xmlstream.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.getPrefix/0	<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>()>
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/java.io.OutputStreamWriter.<init>/0	<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/java.io.OutputStreamWriter.<init>/1	<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.getPrefix/0	<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/java.lang.IllegalStateException.<init>/0	<java.lang.IllegalStateException: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.ChatScreen$ForwardScreen.closeMe/0	<lampiro.screens.ChatScreen$ForwardScreen: void closeMe()>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/java.lang.IllegalStateException.<init>/0	<java.lang.IllegalStateException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.getPrefix/0	<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.writeEscaped/0	<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>
<it.yup.xmlstream.KXmlSerializer: void flush()>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<lampiro.screens.ChatScreen$ForwardScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen$ForwardScreen.closeMe/0	<lampiro.screens.ChatScreen$ForwardScreen: void closeMe()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIRadioButtons.<init>/0	<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.xmpp.Roster: void streamInitialized()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Roster: void streamInitialized()>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Roster: void streamInitialized()>/it.yup.xmpp.Roster$RosterX.<init>/0	<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.writeEscaped/0	<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>
<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>/java.lang.String.<init>/0	<java.lang.String: void <init>(char[],int,int)>
<it.yup.xmlstream.KXmlSerializer: void cdsect(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.xmlstream.KXmlSerializer: void comment(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.xmlstream.KXmlSerializer: void processingInstruction(java.lang.String)>/it.yup.xmlstream.KXmlSerializer.check/0	<it.yup.xmlstream.KXmlSerializer: void check(boolean)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Roster: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Roster.updateRosterItem/0	<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/it.yup.xmpp.Roster$IQResultListener1.<init>/0	<it.yup.xmpp.Roster$IQResultListener1: void <init>(it.yup.xmpp.Roster,boolean,it.yup.xmpp.Roster$IQResultListener1)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.Roster.addGatewayGroup/0	<it.yup.xmpp.Roster: void addGatewayGroup(it.yup.xmpp.Contact,it.yup.xml.Element)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.Roster$IQResultListener3.<init>/0	<it.yup.xmpp.Roster$IQResultListener3: void <init>(it.yup.xmpp.Roster,boolean,java.lang.String,it.yup.xmpp.Roster$IQResultListener3)>
<it.yup.util.XMPPConsumer: void <init>()>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.util.XMPPConsumer: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.XMPPConsumer: void <init>()>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.util.XMPPConsumer: void run()>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.util.StderrConsumer: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<lampiro.screens.SplashScreen: void <init>()>/lampiro.screens.SplashScreen$1.<init>/0	<lampiro.screens.SplashScreen$1: void <init>(lampiro.screens.SplashScreen)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/1	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/2	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.xmlstream.KXmlParser: void setInput(java.io.InputStream,java.lang.String)>/org.xmlpull.v1.XmlPullParserException.<init>/0	<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean getFeature(java.lang.String)>/it.yup.xmlstream.KXmlParser.isProp/0	<it.yup.xmlstream.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xmlstream.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.Object getProperty(java.lang.String)>/it.yup.xmlstream.KXmlParser.isProp/0	<it.yup.xmlstream.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.Object getProperty(java.lang.String)>/it.yup.xmlstream.KXmlParser.isProp/1	<it.yup.xmlstream.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.Object getProperty(java.lang.String)>/it.yup.xmlstream.KXmlParser.isProp/2	<it.yup.xmlstream.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xmlstream.KXmlParser: int getNamespaceCount(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/javax.microedition.lcdui.List.<init>/0	<javax.microedition.lcdui.List: void <init>(java.lang.String,int)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.CommandListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.CommandExecutor.<init>/0	<it.yup.xmpp.CommandExecutor: void <init>(java.lang.String[],java.lang.String)>
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/it.yup.ui.UIRadioButtons$UIRadioButton.<init>/0	<it.yup.ui.UIRadioButtons$UIRadioButton: void <init>(it.yup.ui.UIRadioButtons,javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UIVLayout.keyPressed/0	<it.yup.ui.UILayout: boolean keyPressed(int)>
<it.yup.xmlstream.KXmlParser: boolean isWhitespace()>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getText()>/it.yup.xmlstream.KXmlParser.get/0	<it.yup.xmlstream.KXmlParser: java.lang.String get(int)>
<it.yup.xmlstream.KXmlParser: boolean isEmptyElementTag()>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributeNamespace(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributeName(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributePrefix(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xmlstream.KXmlParser: java.lang.String getAttributeValue(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/it.yup.xmpp.XMPPClient.buildSocketConnection/0	<it.yup.xmpp.XMPPClient: void buildSocketConnection()>
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/it.yup.xmlstream.AccountRegistration.<init>/0	<it.yup.xmlstream.AccountRegistration: void <init>()>
<it.yup.xmlstream.KXmlParser: int next()>/it.yup.xmlstream.KXmlParser.nextImpl/0	<it.yup.xmlstream.KXmlParser: void nextImpl()>
<it.yup.xmlstream.KXmlParser: int next()>/it.yup.xmlstream.KXmlParser.peekType/0	<it.yup.xmlstream.KXmlParser: int peekType()>
<it.yup.xmlstream.KXmlParser: int nextToken()>/it.yup.xmlstream.KXmlParser.nextImpl/0	<it.yup.xmlstream.KXmlParser: void nextImpl()>
<it.yup.xmlstream.KXmlParser: int nextTag()>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void require(int,java.lang.String,java.lang.String)>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmlstream.KXmlParser: java.lang.String nextText()>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String nextText()>/it.yup.xmlstream.KXmlParser.exception/1	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient$MessageHandler.<init>/0	<it.yup.xmpp.XMPPClient$MessageHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$MessageHandler)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/2	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient$PresenceHandler.<init>/0	<it.yup.xmpp.XMPPClient$PresenceHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$PresenceHandler)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/3	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/4	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient$DiscoHandler.<init>/0	<it.yup.xmpp.XMPPClient$DiscoHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$DiscoHandler)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient$DataFormHandler.<init>/0	<it.yup.xmpp.XMPPClient$DataFormHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$DataFormHandler)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/5	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/6	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/7	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/8	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient$PacketListener1.<init>/0	<it.yup.xmpp.XMPPClient$PacketListener1: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$PacketListener1)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/9	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.EventQuery.<init>/10	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmlstream.KXmlParser: void setFeature(java.lang.String,boolean)>/it.yup.xmlstream.KXmlParser.isProp/0	<it.yup.xmlstream.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xmlstream.KXmlParser: void setFeature(java.lang.String,boolean)>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/it.yup.xmlstream.KXmlParser.isProp/0	<it.yup.xmlstream.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xmlstream.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/org.xmlpull.v1.XmlPullParserException.<init>/0	<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.XMPPClient.getCapVer/0	<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.XMPPClient$1.<init>/0	<it.yup.xmpp.XMPPClient$1: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.util.RMSIndex.<init>/0	<it.yup.util.RMSIndex: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.XMPPClient$TimerTask1.<init>/0	<it.yup.xmpp.XMPPClient$TimerTask1: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$TimerTask1)>
<it.yup.xmlstream.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UITextField.<init>/2	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DeleteContactAlert.<init>/0	<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.AddContactScreen.<init>/0	<it.yup.screens.AddContactScreen: void <init>()>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.MessageComposerScreen.<init>/0	<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.chatWithSelected/0	<it.yup.screens.RosterScreen: void chatWithSelected(boolean)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.StatusScreen.<init>/0	<it.yup.screens.StatusScreen: void <init>()>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen$AdHocCommandsHandler.<init>/0	<it.yup.screens.RosterScreen$AdHocCommandsHandler: void <init>(it.yup.screens.RosterScreen,it.yup.screens.RosterScreen$AdHocCommandsHandler)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.CommandListScreen.<init>/0	<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.AboutScreen.<init>/0	<it.yup.screens.AboutScreen: void <init>()>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.OptionsScreen.<init>/0	<it.yup.screens.OptionsScreen: void <init>()>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.TaskListScreen.<init>/0	<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler.<init>/0	<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/lampiro.screens.MessageComposerScreen.<init>/0	<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.<init>/1	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MessageComposerScreen.menuAction/0	<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/lampiro.screens.ShowMMScreen.init/0	<lampiro.screens.ShowMMScreen: void init()>
<it.yup.ui.UIItem: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/lampiro.screens.ShowMMScreen.init/0	<lampiro.screens.ShowMMScreen: void init()>
<it.yup.screens.RosterScreen: void askSubscription(it.yup.xmpp.Contact)>/it.yup.screens.SubscriptionConfirmAlert.<init>/0	<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>
<it.yup.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>/it.yup.screens.CommandListScreen.<init>/0	<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/javax.microedition.lcdui.Alert.<init>/0	<javax.microedition.lcdui.Alert: void <init>(java.lang.String,java.lang.String,javax.microedition.lcdui.Image,javax.microedition.lcdui.AlertType)>
<lampiro.screens.ShowMMScreen: void playAudio()>/lampiro.screens.ShowMMScreen$1.<init>/0	<lampiro.screens.ShowMMScreen$1: void <init>(lampiro.screens.ShowMMScreen)>
<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/it.yup.screens.DataFormScreen.<init>/0	<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>
<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/it.yup.screens.DataResultScreen.<init>/0	<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataResultScreen.showCurrent/0	<lampiro.screens.DataResultScreen: void showCurrent()>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataResultScreen.showCurrent/0	<lampiro.screens.DataResultScreen: void showCurrent()>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.TextField.<init>/1	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String,int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen$ItemCommandListener1.<init>/0	<it.yup.screens.MessageComposerScreen$ItemCommandListener1: void <init>(it.yup.screens.MessageComposerScreen,it.yup.screens.MessageComposerScreen$ItemCommandListener1)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.screens.MessageComposerScreen$ItemStateListener1.<init>/0	<it.yup.screens.MessageComposerScreen$ItemStateListener1: void <init>(it.yup.screens.MessageComposerScreen,it.yup.screens.MessageComposerScreen$ItemStateListener1)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/javax.microedition.lcdui.TextBox.<init>/0	<javax.microedition.lcdui.TextBox: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.<init>/1	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.ui.UILayout: void <init>(int)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextBox.<init>/0	<javax.microedition.lcdui.TextBox: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.ui.UIRadioButtons$UIRadioButton: void <init>(it.yup.ui.UIRadioButtons,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.tests.XMPPTestClient: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.tests.XMPPTestClient: void <init>()>/it.yup.tests.XMPPTestClient$Listener.<init>/0	<it.yup.tests.XMPPTestClient$Listener: void <init>(it.yup.tests.XMPPTestClient)>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.xmlstream.SocketStream.<init>/0	<it.yup.xmlstream.SocketStream: void <init>()>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.transport.SocketChannel.<init>/0	<it.yup.transport.SocketChannel: void <init>(java.lang.String,it.yup.transport.TransportListener)>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.tests.XMPPTestClient$Echoer.<init>/0	<it.yup.tests.XMPPTestClient$Echoer: void <init>(it.yup.tests.XMPPTestClient)>
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.ui.UICheckbox: void <init>(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ListenerRegistration: void <init>(it.yup.xmlstream.EventQuery,java.lang.Object,boolean)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.xmpp.Contact: void addTask(it.yup.xmpp.Task)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.CommandExecutor: void <init>(java.lang.String[],java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.CommandExecutor: void <init>(java.lang.String[],java.lang.String)>/it.yup.xmpp.CommandExecutor.init/0	<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.<init>/0	<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/java.util.Date.<init>/0	<java.util.Date: void <init>()>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.availabilityDiff/0	<it.yup.xmpp.Contact: int availabilityDiff(it.yup.xmpp.Contact,it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void <init>(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.Initializer.<init>/0	<it.yup.xmlstream.Initializer: void <init>(java.lang.String,boolean)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.tests.RMSTestMidlet$TestForm: void <init>(it.yup.tests.RMSTestMidlet,java.lang.String)>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.tests.RMSTestMidlet$TestForm: void <init>(it.yup.tests.RMSTestMidlet,java.lang.String)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Alert.<init>/0	<javax.microedition.lcdui.Alert: void <init>(java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.xml.BSerializer: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.transport.SocketChannel$Runnable1: void run()>/it.yup.transport.BaseChannel$Sender.<init>/0	<it.yup.transport.BaseChannel$Sender: void <init>(it.yup.transport.BaseChannel,it.yup.transport.BaseChannel)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/5	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/6	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/7	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/8	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/9	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.<init>/2	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.getPrintableStatus/0	<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/10	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/11	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.updateLabel/0	<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void updateScreen()>/lampiro.screens.RosterScreen.toggleMenus/0	<lampiro.screens.RosterScreen: void toggleMenus()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$RegisterHandler)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.RegisterScreen: void showNotify()>/lampiro.screens.RegisterScreen.placeWizard/0	<lampiro.screens.RegisterScreen: void placeWizard()>
<lampiro.screens.RegisterScreen: void showNotify()>/lampiro.screens.RegisterScreen.placeItems/0	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.StatusScreen.<init>/0	<lampiro.screens.StatusScreen: void <init>()>
<lampiro.screens.RosterScreen: void hideNotify()>/lampiro.screens.RosterScreen.filterContacts/0	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UISeparator.<init>/1	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UISeparator.<init>/2	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MUCComposer.<init>/0	<lampiro.screens.MUCComposer: void <init>(it.yup.xmpp.MUC)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.SimpleComposerScreen.<init>/0	<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen$ForwardScreen.<init>/0	<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen$MUCUpdateListener.<init>/0	<lampiro.screens.ChatScreen$MUCUpdateListener: void <init>(lampiro.screens.ChatScreen)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$MUCStateHandler.<init>/0	<lampiro.screens.RosterScreen$MUCStateHandler: void <init>(it.yup.xmpp.IQResultListener)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ChatScreen$1.<init>/0	<lampiro.screens.ChatScreen$1: void <init>(lampiro.screens.ChatScreen)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/lampiro.screens.RegisterScreen.placeItems/0	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.filterContacts/0	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.filterContacts/1	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.filterContacts/2	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.cutPattern/0	<lampiro.screens.RosterScreen: void cutPattern()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.cutPattern/1	<lampiro.screens.RosterScreen: void cutPattern()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.KeyScreen.<init>/0	<lampiro.screens.KeyScreen: void <init>()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.placeItems/0	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.placeItems/1	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.placeItems/2	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.placeItems/3	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.getServer/0	<lampiro.screens.RegisterScreen: java.lang.String getServer(java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.placeItems/4	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.getServer/1	<lampiro.screens.RegisterScreen: java.lang.String getServer(java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.placeItems/5	<lampiro.screens.RegisterScreen: void placeItems()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.login/0	<lampiro.screens.RegisterScreen: void login()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RegisterScreen.checkLogin/0	<lampiro.screens.RegisterScreen: void checkLogin()>
<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/0	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.chatWithSelected/0	<lampiro.screens.RosterScreen: void chatWithSelected(java.lang.String)>
<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.chatWithSelected/1	<lampiro.screens.RosterScreen: void chatWithSelected(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedUIGroup/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIGroup getSelectedUIGroup()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getAccordion/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedUIGroup/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIGroup getSelectedUIGroup()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.openContactMenu/0	<lampiro.screens.RosterScreen: void openContactMenu()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/0	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AddContactScreen.<init>/0	<lampiro.screens.AddContactScreen: void <init>()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/1	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getActionJid/0	<lampiro.screens.RosterScreen: java.lang.String getActionJid()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.MessageComposerScreen.<init>/0	<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedUIGroup/2	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIGroup getSelectedUIGroup()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.GrpMessageComposerScreen.<init>/0	<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getIMGateways/0	<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getIMGateways/1	<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getActionJid/1	<lampiro.screens.RosterScreen: java.lang.String getActionJid()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.chatWithSelected/0	<lampiro.screens.RosterScreen: void chatWithSelected(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.StatusScreen.<init>/0	<lampiro.screens.StatusScreen: void <init>()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getActionJid/2	<lampiro.screens.RosterScreen: java.lang.String getActionJid()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getActionJid/3	<lampiro.screens.RosterScreen: java.lang.String getActionJid()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/2	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getActionJid/4	<lampiro.screens.RosterScreen: java.lang.String getActionJid()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getActionJid/5	<lampiro.screens.RosterScreen: java.lang.String getActionJid()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.AboutScreen.<init>/0	<lampiro.screens.AboutScreen: void <init>()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.<init>/0	<lampiro.screens.OptionsScreen: void <init>()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/3	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.TaskListScreen.<init>/0	<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/4	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ContactInfoScreen.<init>/0	<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedContact/5	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.GroupsScreen.<init>/0	<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$MUCStateHandler.<init>/0	<lampiro.screens.RosterScreen$MUCStateHandler: void <init>(it.yup.xmpp.IQResultListener)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedUIContact/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIContact getSelectedUIContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.getSelectedUIContact/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIContact getSelectedUIContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$RegisterWaitScreen.<init>/0	<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen$RegisterHandler.<init>/0	<lampiro.screens.RosterScreen$RegisterHandler: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.<init>/1	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.MUCComposer.<init>/0	<lampiro.screens.MUCComposer: void <init>(it.yup.xmpp.MUC)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.SimpleComposerScreen.<init>/0	<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.xml.KXmlParser: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/lampiro.screens.RosterScreen$AdHocCommandsHandler.<init>/0	<lampiro.screens.RosterScreen$AdHocCommandsHandler: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$AdHocCommandsHandler)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xml.Element.<init>/1	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xml.KXmlParser: void setInput(java.io.InputStream,java.lang.String)>/org.xmlpull.v1.XmlPullParserException.<init>/0	<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean getFeature(java.lang.String)>/it.yup.xml.KXmlParser.isProp/0	<it.yup.xml.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xml.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.Object getProperty(java.lang.String)>/it.yup.xml.KXmlParser.isProp/0	<it.yup.xml.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.Object getProperty(java.lang.String)>/it.yup.xml.KXmlParser.isProp/1	<it.yup.xml.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.Object getProperty(java.lang.String)>/it.yup.xml.KXmlParser.isProp/2	<it.yup.xml.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xml.KXmlParser: int getNamespaceCount(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<lampiro.screens.RosterScreen$MUCStateHandler: void <init>(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>(int)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xml.KXmlParser: boolean isWhitespace()>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getText()>/it.yup.xml.KXmlParser.get/0	<it.yup.xml.KXmlParser: java.lang.String get(int)>
<it.yup.xml.KXmlParser: boolean isEmptyElementTag()>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String getAttributeNamespace(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xml.KXmlParser: java.lang.String getAttributeName(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xml.KXmlParser: java.lang.String getAttributePrefix(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/2	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xml.KXmlParser: java.lang.String getAttributeValue(int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.xml.KXmlParser: int next()>/it.yup.xml.KXmlParser.nextImpl/0	<it.yup.xml.KXmlParser: void nextImpl()>
<it.yup.xml.KXmlParser: int next()>/it.yup.xml.KXmlParser.peekType/0	<it.yup.xml.KXmlParser: int peekType()>
<it.yup.xml.KXmlParser: int nextToken()>/it.yup.xml.KXmlParser.nextImpl/0	<it.yup.xml.KXmlParser: void nextImpl()>
<it.yup.xml.KXmlParser: int nextTag()>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen.filterContacts/0	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String nextText()>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String nextText()>/it.yup.xml.KXmlParser.exception/1	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: void setFeature(java.lang.String,boolean)>/it.yup.xml.KXmlParser.isProp/0	<it.yup.xml.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xml.KXmlParser: void setFeature(java.lang.String,boolean)>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/it.yup.xml.KXmlParser.isProp/0	<it.yup.xml.KXmlParser: boolean isProp(java.lang.String,boolean,java.lang.String)>
<it.yup.xml.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>/org.xmlpull.v1.XmlPullParserException.<init>/0	<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.SimpleComposerScreen.<init>/0	<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>
<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.MUCScreen.<init>/0	<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Alert.<init>/0	<javax.microedition.lcdui.Alert: void <init>(java.lang.String)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.ui.UIConfig: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void <init>(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.Initializer.<init>/0	<it.yup.xmlstream.Initializer: void <init>(java.lang.String,boolean)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.ShowMMScreen.<init>/0	<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen.ftNotification/0	<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen$FileReceiveScreen.<init>/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener,lampiro.screens.RosterScreen$FileReceiveScreen)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.lang.String.<init>/0	<java.lang.String: void <init>(byte[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.SASLAuthenticator$PacketListener1.<init>/0	<it.yup.xmlstream.SASLAuthenticator$PacketListener1: void <init>(it.yup.xmlstream.SASLAuthenticator,it.yup.xmlstream.SASLAuthenticator$PacketListener1)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.SASLAuthenticator$PacketListener2.<init>/0	<it.yup.xmlstream.SASLAuthenticator$PacketListener2: void <init>(it.yup.xmlstream.SASLAuthenticator,it.yup.xmlstream.SASLAuthenticator$PacketListener2)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.lang.String.<init>/1	<java.lang.String: void <init>(byte[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.EventQuery.<init>/2	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.SASLAuthenticator$PacketListener3.<init>/0	<it.yup.xmlstream.SASLAuthenticator$PacketListener3: void <init>(it.yup.xmlstream.SASLAuthenticator,it.yup.xmlstream.SASLAuthenticator$PacketListener3)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/lampiro.screens.RosterScreen.ftNotification/0	<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/2	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/3	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/4	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/5	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/6	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmlstream.EventQuery.<init>/7	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void authenticated()>/it.yup.xmpp.FTReceiver.<init>/0	<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>
<lampiro.screens.RosterScreen: void authenticated()>/lampiro.screens.RosterScreen.firstLoginIntro/0	<lampiro.screens.RosterScreen: void firstLoginIntro()>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.CommandListScreen.<init>/0	<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/lampiro.screens.DataFormScreen.<init>/0	<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/lampiro.screens.DataResultScreen.<init>/0	<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/lampiro.screens.RosterScreen.closeWaitingScreen/0	<lampiro.screens.RosterScreen: void closeWaitingScreen()>
<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>/lampiro.screens.RosterScreen$Thread1.<init>/0	<lampiro.screens.RosterScreen$Thread1: void <init>(lampiro.screens.RosterScreen,java.lang.String,int,lampiro.screens.RosterScreen$Thread1)>
<lampiro.screens.RosterScreen: void rosterRetrieved()>/lampiro.screens.RosterScreen.getIMGateways/0	<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterRetrieved()>/lampiro.screens.RosterScreen.getIMGateways/1	<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>
<it.yup.screens.RegisterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RegisterScreen.login/0	<it.yup.screens.RegisterScreen: void login()>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.screens.RegisterScreen.placeItems/0	<it.yup.screens.RegisterScreen: void placeItems()>
<it.yup.ui.UICanvas: void pointerPressed(int,int)>/it.yup.ui.UICanvas.handlePointEvent/0	<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>
<it.yup.ui.UICanvas: void pointerPressed(int,int)>/it.yup.ui.UICanvas.initLongPress/0	<it.yup.ui.UICanvas: java.util.TimerTask initLongPress(it.yup.ui.UIScreen)>
<it.yup.ui.UICanvas: void pointerDragged(int,int)>/it.yup.ui.UICanvas.findItem/0	<it.yup.ui.UICanvas: it.yup.ui.UIItem findItem(int,int,it.yup.ui.UIScreen)>
<it.yup.ui.UICanvas: void pointerReleased(int,int)>/it.yup.ui.UICanvas.handlePointEvent/0	<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.setTabs/0	<it.yup.ui.UICanvas: void setTabs()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.change/0	<it.yup.ui.UICanvas: void change(int)>
<it.yup.ui.UICanvas: void show(int)>/it.yup.ui.UICanvas.change/0	<it.yup.ui.UICanvas: void change(int)>
<it.yup.ui.UICanvas: void hide(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.change/0	<it.yup.ui.UICanvas: void change(int)>
<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.change/0	<it.yup.ui.UICanvas: void change(int)>
<it.yup.xml.BProcessor: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/2	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/3	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.Command.<init>/4	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int,java.lang.String[],javax.microedition.lcdui.Image[])>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.screens.DataFormScreen.createControls/0	<it.yup.screens.DataFormScreen: void createControls()>
<it.yup.screens.DataFormScreen: void setActions(int)>/it.yup.screens.DataFormScreen.createControls/0	<it.yup.screens.DataFormScreen: void createControls()>
<lampiro.screens.SplashScreen$UISplashTextField: void <init>(lampiro.screens.SplashScreen,java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.DataFormScreen.fillForm/0	<it.yup.screens.DataFormScreen: void fillForm()>
<lampiro.screens.SplashScreen$UISplashTextField: boolean keyPressed(int)>/it.yup.ui.UITextField.keyPressed/0	<it.yup.ui.UITextField: boolean keyPressed(int)>
<it.yup.xml.KXmlSerializer: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIVLayout: void <init>(int,int)>/it.yup.ui.UILayout.<init>/0	<it.yup.ui.UILayout: void <init>(int)>
<it.yup.xml.KXmlSerializer: void entityRef(java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<com.jcraft.jzlib.ZStream: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.jcraft.jzlib.ZStream: void <init>()>/com.jcraft.jzlib.Adler32.<init>/0	<com.jcraft.jzlib.Adler32: void <init>()>
<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>/it.yup.xml.KXmlSerializer.getPrefix/0	<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jcraft.jzlib.ZStream: int inflateInit(int,boolean)>/com.jcraft.jzlib.Inflate.<init>/0	<com.jcraft.jzlib.Inflate: void <init>()>
<com.jcraft.jzlib.ZStream: int deflateInit(int,int,boolean)>/com.jcraft.jzlib.Deflate.<init>/0	<com.jcraft.jzlib.Deflate: void <init>()>
<it.yup.xml.KXmlSerializer: java.lang.Object getProperty(java.lang.String)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: void setFeature(java.lang.String,boolean)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.util.GoogleToken: void <init>(java.lang.String,java.lang.String,java.lang.Object)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.xml.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.xml.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.getPrefix/0	<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>()>
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/java.io.OutputStreamWriter.<init>/0	<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<it.yup.xml.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>/java.io.OutputStreamWriter.<init>/1	<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextPanel.<init>/0	<it.yup.ui.UITextPanel: void <init>()>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.getPrefix/0	<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>/java.lang.IllegalStateException.<init>/0	<java.lang.IllegalStateException: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.MUC.<init>/0	<it.yup.xmpp.MUC: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.<init>/1	<it.yup.xmpp.packets.Presence: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.<init>/2	<it.yup.xmpp.packets.Presence: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient$PresenceHandler.handleSubscribe/0	<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/java.lang.IllegalStateException.<init>/0	<java.lang.IllegalStateException: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.getPrefix/0	<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.writeEscaped/0	<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>
<it.yup.xml.KXmlSerializer: void flush()>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIButton.<init>/2	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIButton.<init>/3	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.<init>/5	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/lampiro.screens.DataFormScreen.createControls/0	<lampiro.screens.DataFormScreen: void createControls()>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>/it.yup.xml.KXmlSerializer.writeEscaped/0	<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>
<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>/java.lang.String.<init>/0	<java.lang.String: void <init>(char[],int,int)>
<it.yup.xml.KXmlSerializer: void cdsect(java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.xml.KXmlSerializer: void comment(java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.xml.KXmlSerializer: void processingInstruction(java.lang.String)>/it.yup.xml.KXmlSerializer.check/0	<it.yup.xml.KXmlSerializer: void check(boolean)>
<it.yup.util.MetaVector: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>()>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>()>/java.util.Vector.<init>/2	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>(int)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>(int)>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>(int)>/java.util.Vector.<init>/2	<java.util.Vector: void <init>(int)>
<it.yup.util.MetaVector: void <init>(int,int)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>(int,int)>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.util.MetaVector: void <init>(int,int)>/java.util.Vector.<init>/2	<java.util.Vector: void <init>(int,int)>
<lampiro.screens.DataFormScreen: void setActions(int)>/lampiro.screens.DataFormScreen.createControls/0	<lampiro.screens.DataFormScreen: void createControls()>
<it.yup.util.MetaVector: java.lang.Object elementAt(int)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
<it.yup.util.MetaVector: java.util.Enumeration elements()>/it.yup.util.MetaVector$MultiVectorEnumeration.<init>/0	<it.yup.util.MetaVector$MultiVectorEnumeration: void <init>(it.yup.util.MetaVector)>
<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>/it.yup.util.MetaVector.superEnumeration/0	<it.yup.util.MetaVector: java.util.Enumeration superEnumeration()>
<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
<it.yup.ui.UITextField: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UITextField: void setWrappable(boolean)>/it.yup.ui.UITextField.computeRealHeight/0	<it.yup.ui.UITextField: void computeRealHeight()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextField.isEditable/0	<it.yup.ui.UITextField: boolean isEditable()>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextField.isEditable/1	<it.yup.ui.UITextField: boolean isEditable()>
<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object,int)>/java.lang.IndexOutOfBoundsException.<init>/0	<java.lang.IndexOutOfBoundsException: void <init>()>
<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>/it.yup.util.MetaVector.superEnumeration/0	<it.yup.util.MetaVector: java.util.Enumeration superEnumeration()>
<it.yup.ui.UITextField: void handleScreen()>/javax.microedition.lcdui.TextBox.<init>/0	<javax.microedition.lcdui.TextBox: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.util.MetaVector: void removeElementAt(int)>/it.yup.util.MetaVector.superEnumeration/0	<it.yup.util.MetaVector: java.util.Enumeration superEnumeration()>
<it.yup.util.MetaVector: void removeElementAt(int)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>/it.yup.util.MetaVector.superEnumeration/0	<it.yup.util.MetaVector: java.util.Enumeration superEnumeration()>
<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
<it.yup.util.MetaVector: int size()>/it.yup.util.MetaVector.superEnumeration/0	<it.yup.util.MetaVector: java.util.Enumeration superEnumeration()>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DataFormScreen.fillForm/0	<lampiro.screens.DataFormScreen: void fillForm()>
<it.yup.transport.BaseChannel: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.transport.BaseChannel: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex$KeyEnumeration: void <init>(it.yup.util.RMSIndex)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.RMSIndex$KeyEnumeration: void <init>(it.yup.util.RMSIndex)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex$KeyEnumeration: void <init>(it.yup.util.RMSIndex)>/it.yup.util.RMSIndex$KeyEnumeration.next_item/0	<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>
<it.yup.screens.ChatScreen$ConversationEntry: void <init>(java.util.Vector,byte)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.RMSIndex$KeyEnumeration: java.lang.Object nextElement()>/java.util.NoSuchElementException.<init>/0	<java.util.NoSuchElementException: void <init>()>
<it.yup.util.RMSIndex$KeyEnumeration: java.lang.Object nextElement()>/it.yup.util.RMSIndex$KeyEnumeration.next_item/0	<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream)>/com.jcraft.jzlib.ZInputStream.<init>/0	<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>/com.jcraft.jzlib.FilterInputStream.<init>/0	<com.jcraft.jzlib.FilterInputStream: void <init>(java.io.InputStream)>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>/com.jcraft.jzlib.ZStream.<init>/0	<com.jcraft.jzlib.ZStream: void <init>()>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.SimpleComposerScreen.commandAction/0	<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,int)>/com.jcraft.jzlib.FilterInputStream.<init>/0	<com.jcraft.jzlib.FilterInputStream: void <init>(java.io.InputStream)>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,int)>/com.jcraft.jzlib.ZStream.<init>/0	<com.jcraft.jzlib.ZStream: void <init>()>
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/com.jcraft.jzlib.ZStreamException.<init>/0	<com.jcraft.jzlib.ZStreamException: void <init>(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<it.yup.ui.UIScreen: void <init>()>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.ui.UIScreen: void <init>()>/java.util.Vector.<init>/2	<java.util.Vector: void <init>()>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox$UIComboScreen.updateFilter/0	<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.updateFilter/0	<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.updateFilter/1	<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.updateFilter/2	<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.updateFilter/3	<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/1	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox$UIComboScreen.updateFilter/4	<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/2	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<lampiro.screens.FTScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>
<it.yup.ui.UIScreen: void removeAll()>/it.yup.ui.UIMenu.removeAll/0	<it.yup.ui.UIMenu: void removeAll()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.replace/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void swap(int,int)>/java.lang.ArrayIndexOutOfBoundsException.<init>/0	<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<it.yup.transport.BaseChannel$Sender: void <init>(it.yup.transport.BaseChannel,it.yup.transport.BaseChannel)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<lampiro.screens.SendMMScreen$UploadHandler: void <init>(lampiro.screens.SendMMScreen,java.lang.String,java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen$ConversationEntry: void <init>(java.lang.String,byte)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/2	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/3	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/4	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/5	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/6	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/7	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/javax.microedition.lcdui.Command.<init>/8	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.<init>/1	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.<init>/2	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.<init>/3	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.<init>/4	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.closeScreen/0	<lampiro.screens.InnerMMScreen: void closeScreen()>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.startCapture/0	<lampiro.screens.InnerMMScreen: void startCapture()>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.screens.InnerMMScreen.handleMMFile/0	<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>
<lampiro.screens.InnerMMScreen: void captureAudio()>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<lampiro.screens.InnerMMScreen: void captureVideo()>/lampiro.screens.InnerMMScreen.closeScreen/0	<lampiro.screens.InnerMMScreen: void closeScreen()>
<lampiro.screens.InnerMMScreen: void captureVideo()>/lampiro.screens.InnerMMScreen.closeScreen/1	<lampiro.screens.InnerMMScreen: void closeScreen()>
<lampiro.screens.InnerMMScreen: void captureVideo()>/lampiro.screens.InnerMMScreen.closeScreen/2	<lampiro.screens.InnerMMScreen: void closeScreen()>
<lampiro.screens.InnerMMScreen: void captureVideo()>/lampiro.screens.InnerMMScreen.closeScreen/3	<lampiro.screens.InnerMMScreen: void closeScreen()>
<lampiro.screens.InnerMMScreen: void captureVideo()>/lampiro.screens.InnerMMScreen.handleMMFile/0	<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.<init>/0	<lampiro.screens.OptionsScreen: void <init>()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/lampiro.screens.ShowMMScreen.<init>/0	<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.KeyScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.KeyScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.SendMMScreen$UploadHandler.<init>/0	<lampiro.screens.SendMMScreen$UploadHandler: void <init>(lampiro.screens.SendMMScreen,java.lang.String,java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.FTSender.<init>/0	<it.yup.xmpp.FTSender: void <init>(java.lang.String,byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTSender$FTSEventHandler)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.ShowMMScreen.itemAction/0	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.ShowMMScreen.itemAction/1	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.ShowMMScreen.itemAction/2	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.isValid/0	<lampiro.screens.KeyScreen: boolean isValid(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/lampiro.screens.KeyScreen.isValid/1	<lampiro.screens.KeyScreen: boolean isValid(int)>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/java.lang.IllegalArgumentException.<init>/1	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/java.lang.IllegalArgumentException.<init>/2	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/it.yup.ui.UIGauge$Ticker.<init>/0	<it.yup.ui.UIGauge$Ticker: void <init>(it.yup.ui.UIGauge,it.yup.ui.UIGauge$Ticker)>
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver: void <init>(it.yup.xmpp.FTReceiver$FTREventHandler)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener.<init>/0	<it.yup.xmpp.FTReceiver$OpenListener: void <init>(it.yup.xmpp.FTReceiver)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIScreen.intersect/0	<it.yup.ui.UIScreen: boolean intersect(int[],int[])>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIScreen.intersect/1	<it.yup.ui.UIScreen: boolean intersect(int[],int[])>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIScreen.intersect/2	<it.yup.ui.UIScreen: boolean intersect(int[],int[])>
<it.yup.ui.UIAccordion$AccordionItem: void <init>(it.yup.ui.UIAccordion,it.yup.ui.UIVLayout)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIGauge: void setValue(int)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIScreen.intersect/0	<it.yup.ui.UIScreen: boolean intersect(int[],int[])>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIScreen.intersect/1	<it.yup.ui.UIScreen: boolean intersect(int[],int[])>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIScreen.intersect/2	<it.yup.ui.UIScreen: boolean intersect(int[],int[])>
<it.yup.xml.KXmlProcessor: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIGauge: void start()>/it.yup.ui.UIGauge$Ticker.<init>/0	<it.yup.ui.UIGauge$Ticker: void <init>(it.yup.ui.UIGauge,it.yup.ui.UIGauge$Ticker)>
<it.yup.tests.XMLTestMidlet: void <init>()>/javax.microedition.midlet.MIDlet.<init>/0	<javax.microedition.midlet.MIDlet: void <init>()>
<it.yup.tests.XMLTestMidlet: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.tests.XMLTestMidlet: void <init>()>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String)>
<it.yup.tests.XMLTestMidlet: void startApp()>/it.yup.tests.XMLTestMidlet.testEnDecode/0	<it.yup.tests.XMLTestMidlet: void testEnDecode()>
<it.yup.xmlstream.EventQueryRegistration: void <init>(java.lang.Object,java.util.Vector)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIScreen: void setDirty(boolean)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.util.Utils: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.UIScreen: void setSelectedIndex(int)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<it.yup.ui.UIEmoLabel: void <init>(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm$Field.getOption/0	<it.yup.xmpp.packets.DataForm$Field: java.lang.String[] getOption(it.yup.xml.Element)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>/java.util.Date.<init>/0	<java.util.Date: void <init>()>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.loadFromStorage/0	<it.yup.xmpp.Config: void loadFromStorage()>
<it.yup.xmpp.Config: void saveToStorage()>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.xmpp.Config: void saveToStorage()>/java.io.DataOutputStream.<init>/0	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/javax.microedition.lcdui.List.<init>/0	<javax.microedition.lcdui.List: void <init>(java.lang.String,int)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataOutputStream.<init>/0	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.util.NetworkConsumer: void <init>()>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.util.NetworkConsumer: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<lampiro.screens.RosterScreen$Thread1: void run()>/lampiro.screens.MMScreen.<init>/0	<lampiro.screens.MMScreen: void <init>(java.lang.String)>
<it.yup.ui.UIButton: void <init>(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.ui.UIButton: void <init>(javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.transport.SocketChannel: void <init>(java.lang.String,it.yup.transport.TransportListener)>/it.yup.transport.BaseChannel.<init>/0	<it.yup.transport.BaseChannel: void <init>()>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(it.yup.xml.Element)>
<it.yup.transport.SocketChannel: void open()>/it.yup.transport.SocketChannel$Runnable1.<init>/0	<it.yup.transport.SocketChannel$Runnable1: void <init>(it.yup.transport.SocketChannel,it.yup.transport.SocketChannel$Runnable1)>
<it.yup.transport.SocketChannel: void open()>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>(java.lang.Runnable)>
<it.yup.transport.SocketChannel: void sendContent(byte[])>/it.yup.transport.SocketChannel$TimerTask1.<init>/0	<it.yup.transport.SocketChannel$TimerTask1: void <init>(it.yup.transport.SocketChannel,it.yup.transport.SocketChannel$TimerTask1)>
<it.yup.transport.SocketChannel: it.yup.transport.SocketChannel$UTFReader getReader()>/it.yup.transport.SocketChannel$UTFReader.<init>/0	<it.yup.transport.SocketChannel$UTFReader: void <init>(it.yup.transport.SocketChannel,java.io.InputStream)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.addToPanel/0	<lampiro.screens.ContactInfoScreen: void addToPanel(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/5	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.addToPanel/1	<lampiro.screens.ContactInfoScreen: void addToPanel(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/6	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/7	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/8	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/9	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/10	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/11	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/12	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/13	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/14	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.<init>/1	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/15	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.addToPanel/2	<lampiro.screens.ContactInfoScreen: void addToPanel(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIVLayout.<init>/1	<it.yup.ui.UIVLayout: void <init>(int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/16	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.<init>/2	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.<init>/17	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen.addToPanel/3	<lampiro.screens.ContactInfoScreen: void addToPanel(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.ContactInfoScreen$1.<init>/0	<lampiro.screens.ContactInfoScreen$1: void <init>(lampiro.screens.ContactInfoScreen)>
<it.yup.xmlstream.AccountRegistration: void <init>()>/it.yup.xmlstream.Initializer.<init>/0	<it.yup.xmlstream.Initializer: void <init>(java.lang.String,boolean)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.ui.UIButton: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.Semaphore: void <init>(long)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.ui.Semaphore: void release(long)>/java.lang.IllegalArgumentException.<init>/0	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/lampiro.screens.ContactInfoScreen.setColor/0	<lampiro.screens.ContactInfoScreen: void setColor(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/lampiro.screens.ContactInfoScreen.setColor/1	<lampiro.screens.ContactInfoScreen: void setColor(it.yup.ui.UIItem)>
<it.yup.util.MetaVector$MultiVectorEnumeration: void <init>(it.yup.util.MetaVector)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.MetaVector$MultiVectorEnumeration: void <init>(it.yup.util.MetaVector)>/it.yup.util.MetaVector$MultiVectorEnumeration.checkNext/0	<it.yup.util.MetaVector$MultiVectorEnumeration: void checkNext()>
<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>/java.util.NoSuchElementException.<init>/0	<java.util.NoSuchElementException: void <init>()>
<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>/it.yup.util.MetaVector$MultiVectorEnumeration.checkNext/0	<it.yup.util.MetaVector$MultiVectorEnumeration: void checkNext()>
<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>/it.yup.util.MetaVector$MultiVectorEnumeration.checkNext/1	<it.yup.util.MetaVector$MultiVectorEnumeration: void checkNext()>
<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>/it.yup.util.MetaVector$MultiVectorEnumeration.checkNext/2	<it.yup.util.MetaVector$MultiVectorEnumeration: void checkNext()>
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Roster$RosterX: void <init>(it.yup.xmpp.Roster)>/it.yup.xmlstream.EventQuery.<init>/2	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String[][])>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xml.Element: void <init>(it.yup.xml.Element)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/javax.microedition.lcdui.List.<init>/0	<javax.microedition.lcdui.List: void <init>(java.lang.String,int)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.xml.Element: it.yup.xml.Element clone()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(it.yup.xml.Element)>
<it.yup.xmpp.IqManager: void streamInitialized()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.IqManager: void streamInitialized()>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.IqManager: void handleError(it.yup.xml.Element)>/it.yup.xmpp.IqManager.handleAnswer/0	<it.yup.xmpp.IqManager: void handleAnswer(it.yup.xml.Element,boolean)>
<it.yup.xmpp.IqManager: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.IqManager.handleAnswer/0	<it.yup.xmpp.IqManager: void handleAnswer(it.yup.xml.Element,boolean)>
<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.ui.UIAccordion: void <init>()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<it.yup.ui.UIAccordion: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>(int)>
<it.yup.ui.UIAccordion: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.ui.UIAccordion: void <init>()>/it.yup.util.MetaVector.<init>/0	<it.yup.util.MetaVector: void <init>(int)>
<it.yup.transport.SocketChannel$UTFReader: void <init>(it.yup.transport.SocketChannel,java.io.InputStream)>/java.io.Reader.<init>/0	<java.io.Reader: void <init>()>
<it.yup.transport.SocketChannel$UTFReader: int read(char[],int,int)>/java.io.IOException.<init>/0	<java.io.IOException: void <init>(java.lang.String)>
<it.yup.transport.SocketChannel$UTFReader: int read(char[])>/java.io.IOException.<init>/0	<java.io.IOException: void <init>(java.lang.String)>
<it.yup.ui.UIAccordion: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIPanel.getHeight/0	<it.yup.ui.UIPanel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/0	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/java.io.IOException.<init>/0	<java.io.IOException: void <init>(java.lang.String)>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/1	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/2	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/3	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/4	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/5	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.transport.SocketChannel$UTFReader: int read()>/it.yup.transport.SocketChannel$UTFReader.getByte/6	<it.yup.transport.SocketChannel$UTFReader: int getByte()>
<it.yup.ui.UIAccordion: void addSpareItem(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void insertSpareItem(it.yup.ui.UIItem,int)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.wrapItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.<init>/0	<it.yup.ui.UIAccordion$AccordionItem: void <init>(it.yup.ui.UIAccordion,it.yup.ui.UIVLayout)>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem,java.util.Vector)>/it.yup.ui.UIAccordion.setSubPanel/0	<it.yup.ui.UIAccordion: void setSubPanel(it.yup.ui.UIItem,java.util.Vector)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>/it.yup.ui.UIAccordion.wrapItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>/it.yup.ui.UIAccordion$AccordionItem.<init>/0	<it.yup.ui.UIAccordion$AccordionItem: void <init>(it.yup.ui.UIAccordion,it.yup.ui.UIVLayout)>
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.<init>/1	<it.yup.xmpp.packets.Presence: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int,java.util.Vector)>/it.yup.ui.UIAccordion.setSubPanel/0	<it.yup.ui.UIAccordion: void setSubPanel(it.yup.ui.UIItem,java.util.Vector)>
<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.close/0	<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItem/0	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void removeAllItems()>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.close/0	<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>
<it.yup.xml.Element: byte[] toXml()>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UIPanel.keyPressed/0	<it.yup.ui.UIPanel: boolean keyPressed(int)>
<it.yup.ui.UIAccordion: void clickLabel(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.close/0	<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void clickLabel(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.open/0	<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIAccordion.close/0	<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.close/0	<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void move(int,int)>/it.yup.ui.UIAccordion.open/0	<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.close/0	<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void swap(int,int)>/it.yup.ui.UIAccordion.open/0	<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void setLabelColor(int)>/it.yup.ui.UIAccordion.updateItemsColor/0	<it.yup.ui.UIAccordion: void updateItemsColor()>
<it.yup.ui.UIAccordion: void setLabelGradientColor(int)>/it.yup.ui.UIAccordion.updateItemsColor/0	<it.yup.ui.UIAccordion: void updateItemsColor()>
<it.yup.ui.UIAccordion: void setLabelGradientSelectedColor(int)>/it.yup.ui.UIAccordion.updateItemsColor/0	<it.yup.ui.UIAccordion: void updateItemsColor()>
<it.yup.ui.UIAccordion: void setLabelSelectedColor(int)>/it.yup.ui.UIAccordion.updateItemsColor/0	<it.yup.ui.UIAccordion: void updateItemsColor()>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.screens.SplashScreen: void <init>()>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.ui.UICheckbox.<init>/1	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void <init>(it.yup.tests.UITestMidlet)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIEmoLabel.<init>/0	<it.yup.ui.UIEmoLabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.<init>/2	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.<init>/3	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/5	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.<init>/2	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextPanel.<init>/0	<it.yup.ui.UITextPanel: void <init>()>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.<init>/3	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.<init>/4	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.<init>/5	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/6	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.<init>/4	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/7	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/8	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/9	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/10	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.<init>/5	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/11	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/12	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/13	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/2	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/14	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/3	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.<init>/1	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.<init>/2	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/4	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/5	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.<init>/6	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/15	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/16	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/17	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIRadioButtons.<init>/0	<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/18	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/19	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/20	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/21	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/22	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/23	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/24	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/25	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.<init>/1	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.<init>/3	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/26	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/27	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/28	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/29	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/30	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/31	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.<init>/2	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.<init>/3	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/32	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/33	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/34	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/35	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.<init>/36	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.tests.RMSTestMidlet: void <init>()>/javax.microedition.midlet.MIDlet.<init>/0	<javax.microedition.midlet.MIDlet: void <init>()>
<it.yup.tests.RMSTestMidlet: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.tests.RMSTestMidlet: void <init>()>/it.yup.tests.RMSTestMidlet$TestForm.<init>/0	<it.yup.tests.RMSTestMidlet$TestForm: void <init>(it.yup.tests.RMSTestMidlet,java.lang.String)>
<it.yup.tests.RMSTestMidlet: void <init>()>/it.yup.util.RMSIndex.<init>/0	<it.yup.util.RMSIndex: void <init>(java.lang.String,int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.DebugScreen.<init>/0	<lampiro.screens.DebugScreen: void <init>()>
<it.yup.ui.UILabel: void <init>(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UIItem.<init>/0	<it.yup.ui.UIItem: void <init>()>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/it.yup.ui.UILabel.splitLongStrings/0	<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>
<it.yup.xmpp.FTReceiver$OpenListener: void <init>(it.yup.xmpp.FTReceiver)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xmpp.FTReceiver$OpenListener.acceptSession/0	<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener$PacketListener1.<init>/0	<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void <init>(it.yup.xmpp.FTReceiver$OpenListener,it.yup.xmpp.FTReceiver$OpenListener$PacketListener1)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$OpenListener$PacketListener2.<init>/0	<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void <init>(it.yup.xmpp.FTReceiver$OpenListener,it.yup.xmpp.FTReceiver$OpenListener$PacketListener2)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.EventQuery.<init>/1	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.EventQuery.<init>/2	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.EventQuery.<init>/3	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.get_item/0	<it.yup.util.RMSIndex: it.yup.util.RMSIndex$Item get_item(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex$Item.<init>/0	<it.yup.util.RMSIndex$Item: void <init>(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.physicalWrite/0	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex$Item.<init>/1	<it.yup.util.RMSIndex$Item: void <init>(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/0	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/1	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.loadChunk/0	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.get_item/1	<it.yup.util.RMSIndex: it.yup.util.RMSIndex$Item get_item(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.physicalWrite/1	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/2	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex$Item.<init>/2	<it.yup.util.RMSIndex$Item: void <init>(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.physicalWrite/2	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.sorted_insert/0	<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/3	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/4	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/5	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex$Item.<init>/3	<it.yup.util.RMSIndex$Item: void <init>(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/6	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.sorted_insert/1	<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex.saveChunk/7	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.util.RMSIndex: byte[] load(byte[])>/it.yup.util.RMSIndex.get_item/0	<it.yup.util.RMSIndex: it.yup.util.RMSIndex$Item get_item(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: byte[] load(byte[])>/it.yup.util.RMSIndex.loadChunk/0	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.util.RMSIndex: byte[] load(byte[])>/it.yup.util.RMSIndex.get_item/1	<it.yup.util.RMSIndex: it.yup.util.RMSIndex$Item get_item(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: byte[] load(byte[])>/it.yup.util.RMSIndex.physicalRead/0	<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.get_item/0	<it.yup.util.RMSIndex: it.yup.util.RMSIndex$Item get_item(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.loadChunk/0	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.get_offset/0	<it.yup.util.RMSIndex: int get_offset(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.deleteSplittedRecords/0	<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.saveChunk/0	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.saveChunk/1	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.saveChunk/2	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.join/0	<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void delete(byte[])>/it.yup.util.RMSIndex.join/1	<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.CommandExecutor.<init>/0	<it.yup.xmpp.CommandExecutor: void <init>(java.lang.String[],java.lang.String)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm.<init>/0	<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen$RegisterDataFormExecutor.<init>/0	<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$RegisterHandler)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.DataFormScreen.<init>/0	<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.<init>/0	<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>
<it.yup.util.RMSIndex: java.util.Enumeration keys()>/it.yup.util.RMSIndex$KeyEnumeration.<init>/0	<it.yup.util.RMSIndex$KeyEnumeration: void <init>(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex: void <init>(java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.RMSIndex: void <init>(java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex: void <init>(java.lang.String)>/it.yup.util.RMSIndex$DefaultUTF8Comparator.<init>/0	<it.yup.util.RMSIndex$DefaultUTF8Comparator: void <init>(it.yup.util.RMSIndex,it.yup.util.RMSIndex$DefaultUTF8Comparator)>
<lampiro.LampiroMidlet: void <init>()>/javax.microedition.midlet.MIDlet.<init>/0	<javax.microedition.midlet.MIDlet: void <init>()>
<lampiro.LampiroMidlet: void <init>()>/it.yup.screens.SplashScreen.<init>/0	<it.yup.screens.SplashScreen: void <init>()>
<it.yup.util.RMSIndex: void <init>(java.lang.String,int)>/it.yup.util.RMSIndex.<init>/0	<it.yup.util.RMSIndex: void <init>(java.lang.String)>
<it.yup.util.RMSIndex: boolean open()>/it.yup.util.RMSIndex.physicalWrite/0	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: boolean open()>/it.yup.util.RMSIndex.loadChunk/0	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.xmlstream.SocketStream: void <init>()>/it.yup.xmlstream.BasicXmlStream.<init>/0	<it.yup.xmlstream.BasicXmlStream: void <init>()>
<it.yup.xmlstream.SocketStream: void initialize(java.lang.String,java.lang.String)>/it.yup.xml.KXmlParser.<init>/0	<it.yup.xml.KXmlParser: void <init>()>
<it.yup.ui.UITextPanel: void <init>()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<it.yup.xmpp.BluendoXMLRPC: void <init>(java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.BluendoXMLRPC: void open()>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.xmpp.BluendoXMLRPC: void open()>/java.io.DataOutputStream.<init>/0	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.ui.UITextPanel: void setMaxHeight(int)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<it.yup.xmlstream.SocketStream: void connectionEstablished(it.yup.transport.BaseChannel)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>(java.lang.Runnable)>
<it.yup.ui.UIHLayout: void <init>(int)>/it.yup.ui.UILayout.<init>/0	<it.yup.ui.UILayout: void <init>(int)>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UIPanel.keyPressed/0	<it.yup.ui.UIPanel: boolean keyPressed(int)>
<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>/it.yup.xmpp.packets.Stanza.<init>/0	<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Message: void <init>(it.yup.xml.Element)>/it.yup.xmpp.packets.Stanza.<init>/0	<it.yup.xmpp.packets.Stanza: void <init>(it.yup.xml.Element)>
<it.yup.tests.UITestMidlet$KeysScreen: void <init>(it.yup.tests.UITestMidlet)>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextField.setLayout/0	<javax.microedition.lcdui.TextField: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextField.setLayout/1	<javax.microedition.lcdui.TextField: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.TextField.setLayout/2	<javax.microedition.lcdui.TextField: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.setLayout/0	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getAllPresences/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence[] getAllPresences()>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getAvailability/0	<it.yup.xmpp.Contact: int getAvailability(java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.ImageItem.setLayout/0	<javax.microedition.lcdui.ImageItem: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.setLayout/1	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.setLayout/2	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.setDefaultCommand/0	<javax.microedition.lcdui.StringItem: void setDefaultCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.setItemCommandListener/0	<javax.microedition.lcdui.StringItem: void setItemCommandListener(javax.microedition.lcdui.ItemCommandListener)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/javax.microedition.lcdui.StringItem.setLayout/3	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.MUC: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/it.yup.xmpp.packets.Message.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.getBody/0	<it.yup.xmpp.packets.Message: java.lang.String getBody()>
<it.yup.tests.XMPPTestClient$Echoer: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.ui.UICheckbox.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.ui.UICombobox: void append(it.yup.ui.UILabel)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.ui.UICombobox: void append(it.yup.ui.UILabel)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator$PacketListener4: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Alert.setTimeout/0	<javax.microedition.lcdui.Alert: void setTimeout(int)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.Alert.setCommandListener/0	<javax.microedition.lcdui.Alert: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/lampiro.screens.GatewayRegisterScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Group: it.yup.xml.Element store()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.MMScreen: void showAudio()>/lampiro.screens.InnerMMScreen.setTypeIndex/0	<lampiro.screens.InnerMMScreen: void setTypeIndex(int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.addElement/0	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.addElement/1	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.addElement/2	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.addElement/3	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.addElement/3	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.addElement/4	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/java.util.Vector.addElement/5	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.addElement/4	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.toString/0	<it.yup.util.MetaVector: java.lang.String toString()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.size/0	<it.yup.util.MetaVector: int size()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.indexOf/0	<it.yup.util.MetaVector: int indexOf(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.removeElement/0	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.removeElement/1	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.toString/1	<it.yup.util.MetaVector: java.lang.String toString()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.indexOf/1	<it.yup.util.MetaVector: int indexOf(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.insertElementAt/0	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.indexOf/2	<it.yup.util.MetaVector: int indexOf(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.insertElementAt/1	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.toString/2	<it.yup.util.MetaVector: java.lang.String toString()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.indexOf/3	<it.yup.util.MetaVector: int indexOf(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.setElementAt/0	<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.removeElement/2	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.removeElement/3	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.toString/3	<it.yup.util.MetaVector: java.lang.String toString()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.setElementAt/1	<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.size/1	<it.yup.util.MetaVector: int size()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.setElementAt/2	<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.toString/4	<it.yup.util.MetaVector: java.lang.String toString()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.contains/0	<it.yup.util.MetaVector: boolean contains(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.lastIndexOf/0	<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.removeElementAt/0	<it.yup.util.MetaVector: void removeElementAt(int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.toString/5	<it.yup.util.MetaVector: java.lang.String toString()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.firstElement/0	<it.yup.util.MetaVector: java.lang.Object firstElement()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.lastElement/0	<it.yup.util.MetaVector: java.lang.Object lastElement()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.elementAt/0	<it.yup.util.MetaVector: java.lang.Object elementAt(int)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.addElement/5	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.lastIndexOf/1	<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object)>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.size/2	<it.yup.util.MetaVector: int size()>
<it.yup.tests.TestMidlet: void <init>()>/it.yup.util.MetaVector.copyInto/0	<it.yup.util.MetaVector: void copyInto(java.lang.Object[])>
<it.yup.xmlstream.Element: byte[] toXml()>/it.yup.xmlstream.KXmlSerializer.setOutput/0	<it.yup.xmlstream.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>
<it.yup.xmlstream.Element: byte[] toXml()>/it.yup.xmlstream.KXmlSerializer.endDocument/0	<it.yup.xmlstream.KXmlSerializer: void endDocument()>
<it.yup.xmlstream.Element: byte[] toXml()>/it.yup.xmlstream.KXmlSerializer.flush/0	<it.yup.xmlstream.KXmlSerializer: void flush()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/1	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.AboutScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.AboutScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.xmpp.IQResultListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/lampiro.screens.ChatScreen.getTitle/0	<it.yup.ui.UIScreen: java.lang.String getTitle()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setWrappable/1	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setStatus/0	<it.yup.ui.UIItem: void setStatus(java.lang.Object)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setWrappable/2	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setFocusable/2	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setStatus/1	<it.yup.ui.UIItem: void setStatus(java.lang.Object)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getStatus/0	<it.yup.ui.UIItem: java.lang.Object getStatus()>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleError(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/it.yup.xmpp.packets.Iq.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.Contact.getGroups/0	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.Contact.getGroups/1	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.Contact.getGroups/2	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<it.yup.util.XMPPConsumer: void run()>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UIVLayout.insert/2	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.ui.UIVLayout.insert/3	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIRadioButtons: void <init>(java.lang.String[])>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.xmpp.Contact.getPresence/1	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.packets.Presence.setShow/0	<it.yup.xmpp.packets.Presence: void setShow(java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.packets.Presence.setPriority/0	<it.yup.xmpp.packets.Presence: void setPriority(int)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.packets.Presence.setStatus/0	<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.packets.Presence.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.setShow/0	<it.yup.xmpp.packets.Presence: void setShow(java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.setStatus/0	<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.setStatus/1	<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.setPriority/0	<it.yup.xmpp.packets.Presence: void setPriority(int)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.Task.getFrom/0	<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getFrom()>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.Task.getStatus/0	<it.yup.xmpp.SimpleDataFormExecutor: byte getStatus()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.packets.Presence.setShow/0	<it.yup.xmpp.packets.Presence: void setShow(java.lang.String)>
<it.yup.tests.XMPPTestClient$Listener: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.packets.Presence.setStatus/0	<it.yup.xmpp.packets.Presence: void setStatus(java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/0	<it.yup.xmpp.Contact: boolean isVisible()>
<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/1	<it.yup.xmpp.Contact: boolean isVisible()>
<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.compareTo/0	<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>
<lampiro.screens.ShowMMScreen: void playAudio()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
<it.yup.screens.RosterScreen: void handleTask(it.yup.xmpp.Task,boolean)>/it.yup.xmpp.Task.display/0	<it.yup.xmpp.SimpleDataFormExecutor: void display(javax.microedition.lcdui.Display,javax.microedition.lcdui.Displayable)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.expand/0	<it.yup.ui.UITextField: void expand()>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/it.yup.xml.Element.setAttributes/0	<it.yup.xml.Element: void setAttributes(java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/it.yup.xmpp.packets.Message.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: it.yup.xml.Element getCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.unread_msg/0	<it.yup.xmpp.Contact: boolean unread_msg()>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.unread_msg/3	<it.yup.xmpp.Contact: boolean unread_msg()>
<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: boolean supportsMUC(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Presence.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Presence.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Presence.setAttribute/3	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xmpp.packets.Iq.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UISeparator.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIVLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>/it.yup.ui.UIHLayout.insert/3	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setExpandable/0	<it.yup.ui.UITextField: void setExpandable(boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setMaxHeight/0	<it.yup.ui.UITextField: void setMaxHeight(int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.expand/0	<it.yup.ui.UITextField: void expand()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.KeyScreen.checkKeys/0	<lampiro.screens.KeyScreen: void checkKeys()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setExpandable/0	<it.yup.ui.UITextField: void setExpandable(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.expand/0	<it.yup.ui.UITextField: void expand()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIGauge.cancel/0	<it.yup.ui.UIGauge: void cancel()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Iq.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/1	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/2	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/3	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/4	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/5	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/6	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/7	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/8	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/9	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/10	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/java.util.Hashtable.put/11	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addElement/2	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addElement/3	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getGroups/0	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getAllPresences/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence[] getAllPresences()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addElementAndContent/0	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.xmpp.FTReceiver$OpenListener.answerFT/0	<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.io.ByteArrayOutputStream.write/0	<java.io.ByteArrayOutputStream: void write(byte[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.io.ByteArrayOutputStream.write/1	<java.io.ByteArrayOutputStream: void write(int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.io.ByteArrayOutputStream.write/2	<java.io.ByteArrayOutputStream: void write(byte[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.io.ByteArrayOutputStream.write/3	<java.io.ByteArrayOutputStream: void write(int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/java.io.ByteArrayOutputStream.write/4	<java.io.ByteArrayOutputStream: void write(byte[])>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addText/1	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/0	<it.yup.ui.UIMenu: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/1	<it.yup.ui.UIMenu: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/0	<it.yup.ui.UIMenu: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/1	<it.yup.ui.UIMenu: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/5	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.setAttributes/0	<it.yup.xml.Element: void setAttributes(java.lang.String[],java.lang.String[])>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.removeAllElements/0	<it.yup.xml.Element: void removeAllElements()>
<lampiro.screens.RosterScreen: void handleTask(it.yup.xmpp.Task,boolean)>/it.yup.xmpp.Task.display/0	<it.yup.xmpp.SimpleDataFormExecutor: void display(javax.microedition.lcdui.Display,javax.microedition.lcdui.Displayable)>
<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.getTitle/0	<it.yup.ui.UIScreen: java.lang.String getTitle()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.setDirty/1	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.showNotify/0	<it.yup.ui.UIScreen: void showNotify()>
<lampiro.screens.AddContactScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setLayoutHeight/0	<it.yup.ui.UIItem: void setLayoutHeight(int)>
<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setType/0	<it.yup.ui.UIItem: void setType(int)>
<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.expand/0	<it.yup.ui.UITextField: void expand()>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.setOpenedState/0	<it.yup.ui.UIMenu: void setOpenedState(boolean)>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.setSubmenu/0	<it.yup.ui.UIMenu: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.getAbsoluteX/0	<it.yup.ui.UIMenu: int getAbsoluteX()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.getAbsoluteY/0	<it.yup.ui.UIMenu: int getAbsoluteY()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.getAbsoluteX/1	<it.yup.ui.UIMenu: int getAbsoluteX()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.getAbsoluteY/1	<it.yup.ui.UIMenu: int getAbsoluteY()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.itemAction/0	<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.itemAction/1	<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.OptionsScreen.saveOptions/1	<lampiro.screens.OptionsScreen: void saveOptions()>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UILabel.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.FTSender.sessionInitiate/0	<it.yup.xmpp.FTSender: void sessionInitiate()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setFlip/0	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.xmpp.FTSender$IQResultListener3: void handleError(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.AddContactScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/6	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Config: void saveToStorage()>/java.io.DataOutputStream.writeShort/0	<java.io.DataOutputStream: void writeShort(int)>
<it.yup.xmpp.Config: void saveToStorage()>/java.io.DataOutputStream.writeUTF/0	<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataInputStream.readUTF/0	<java.io.DataInputStream: java.lang.String readUTF()>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataInputStream.readUTF/1	<java.io.DataInputStream: java.lang.String readUTF()>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataOutputStream.write/0	<java.io.DataOutputStream: void write(byte[])>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataOutputStream.writeUTF/0	<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.io.DataOutputStream.writeUTF/1	<java.io.DataOutputStream: void writeUTF(java.lang.String)>
<lampiro.screens.RosterScreen$Thread1: void run()>/lampiro.screens.MMScreen.showAudio/0	<lampiro.screens.MMScreen: void showAudio()>
<lampiro.screens.RosterScreen$Thread1: void run()>/lampiro.screens.MMScreen.showCamera/0	<lampiro.screens.MMScreen: void showCamera()>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.delAttribute/0	<it.yup.xml.Element: void delAttribute(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getAllPresences/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence[] getAllPresences()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setAnchorPoint/2	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getAvailability/0	<it.yup.xmpp.Contact: int getAvailability(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setWrappable/1	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.getHeight/1	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.getHeight/2	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.getHeight/0	<it.yup.ui.UIItem: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmpp.packets.Iq.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleError(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.getHeight/1	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.setWrappable/1	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UIVLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UIVLayout.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.getHeight/2	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.getHeight/3	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.getHeight/4	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UILabel.getHeight/5	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UIVLayout.setHeight/0	<it.yup.ui.UIVLayout: void setHeight(int)>
<it.yup.xmpp.IqManager: void addRegistration(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/it.yup.xmpp.packets.Iq.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener3: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.packets.Presence.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UIAccordion: void insertPanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem,int)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIEmoLabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIEmoLabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/3	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setSubmenu/1	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.setAutoClose/0	<it.yup.ui.UIMenu: void setAutoClose(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setSubmenu/2	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/5	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/6	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/7	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.setMaxHeight/0	<it.yup.ui.UITextField: void setMaxHeight(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextPanel.setMaxHeight/0	<it.yup.ui.UITextPanel: void setMaxHeight(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UITextPanel.setText/0	<it.yup.ui.UITextPanel: void setText(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/8	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/9	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.setWidth/1	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.setWidth/2	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setSubmenu/3	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setSubmenu/4	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/3	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/1	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/2	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/4	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/5	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/6	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/7	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/8	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/9	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/10	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIButton.setImg/0	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.insert/2	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.insert/3	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.insert/4	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIVLayout.insert/5	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/0	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/2	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/1	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFont/1	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/3	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/2	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/2	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFont/2	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/4	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/3	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/3	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFont/3	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/5	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/4	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/4	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFont/4	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/6	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/5	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/5	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFont/5	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/7	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/6	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/6	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/3	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/4	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/5	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/11	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/12	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIHLayout.insert/13	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/8	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/7	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/7	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/9	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/8	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/8	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/10	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/9	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/9	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/11	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/10	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/10	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/12	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/11	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/11	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/13	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/12	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/12	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/6	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/7	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/8	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/9	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/10	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/11	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/12	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICombobox.append/13	<it.yup.ui.UICombobox: void append(java.lang.String)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/14	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/13	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/13	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/15	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/14	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/14	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setWrappable/1	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/16	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/15	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/15	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setWrappable/2	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/17	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setAnchorPoint/16	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFlip/16	<it.yup.ui.UILabel: void setFlip(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setWrappable/3	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UILabel.setFocusable/18	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteX/0	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setWidth/1	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteY/1	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteX/1	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/5	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/6	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.packets.Stanza.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.Roster$IQResultListener1: void handleError(it.yup.xml.Element)>/it.yup.xml.Element.toXml/0	<it.yup.xml.Element: byte[] toXml()>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setLayoutWidth/0	<it.yup.ui.UIItem: void setLayoutWidth(int)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setType/0	<it.yup.ui.UIItem: void setType(int)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setContainer/0	<it.yup.ui.UIItem: void setContainer(it.yup.ui.UIIContainer)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.xmpp.Roster: void <clinit>()>/java.lang.String.<init>/0	<java.lang.String: void <init>(char[])>
<lampiro.screens.AboutScreen: void <clinit>()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<lampiro.screens.AlbumScreen: void loadAlbum()>/lampiro.screens.AlbumScreen.saveAlbum/0	<lampiro.screens.AlbumScreen: void saveAlbum()>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>/it.yup.util.Utils.compareTo/0	<it.yup.util.Utils: boolean compareTo(it.yup.xmpp.Contact,it.yup.xmpp.Contact)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/lampiro.screens.RosterScreen.getChatScreenList/0	<lampiro.screens.RosterScreen: java.util.Hashtable getChatScreenList()>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/1	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.Element.writeEscaped/0	<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/2	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/3	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/4	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.Element.writeXml/0	<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.xml.Element.writeEscaped/1	<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/5	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/6	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/7	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<lampiro.screens.SubscribeScreen: void releaseScreen(lampiro.screens.SubscribeScreen)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.xmpp.Group: it.yup.xmpp.Group getGroup(java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.FTSender: boolean supportFT(java.lang.String)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.util.RMSIndex.store/0	<it.yup.util.RMSIndex: void store(byte[],byte[])>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.ui.UICanvas.getScreenList/0	<it.yup.ui.UICanvas: java.util.Vector getScreenList()>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.util.RMSIndex.delete/0	<it.yup.util.RMSIndex: void delete(byte[])>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getScreenList/0	<it.yup.ui.UICanvas: java.util.Vector getScreenList()>
<lampiro.screens.RosterScreen: void showNextScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(int)>
<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getScreenList/0	<it.yup.ui.UICanvas: java.util.Vector getScreenList()>
<lampiro.screens.RosterScreen: void showPreviousScreen(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(int)>
<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: void closeAndOpenRoster(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UICanvas: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.FTScreen: void startFtreceive(it.yup.xmpp.FTReceiver$OpenListener)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.FTScreen: void addFileSend(it.yup.xmpp.FTSender,java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Logger: void addConsumer(it.yup.util.LogConsumer)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.Logger: void removeConsumer(it.yup.util.LogConsumer)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RegisterScreen: lampiro.screens.RegisterScreen getInstance()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.LampiroMidlet: void exit()>/lampiro.LampiroMidlet.destroyApp/0	<lampiro.LampiroMidlet: void destroyApp(boolean)>
<lampiro.LampiroMidlet: void exit()>/lampiro.LampiroMidlet.notifyDestroyed/0	<javax.microedition.midlet.MIDlet: void notifyDestroyed()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/lampiro.screens.RosterScreen$UIGroup.stopMoving/0	<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UIItem.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UICombobox: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UICombobox: void openMenu()>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.updateTask/0	<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.SimpleDataFormExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.setProperty/1	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.setProperty/2	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.setProperty/1	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<it.yup.screens.StatusScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.setPresence/0	<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>
<it.yup.xmpp.Group: it.yup.xml.Element store()>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.addMessageToHistory/0	<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>
<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.open/1	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.close/1	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.open/2	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.close/2	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.open/3	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.load/0	<it.yup.util.RMSIndex: byte[] load(byte[])>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.RMSIndex.close/3	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.packets.Presence: java.lang.String getResource()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.MMScreen: void showCamera()>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.MMScreen: void showCamera()>/lampiro.screens.RosterScreen.showAlert/0	<lampiro.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<lampiro.screens.MMScreen: void showAudio()>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.MMScreen: void showAudio()>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/1	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.ui.UIPanel: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.AboutScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.AboutScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/1	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/2	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.setPresence/0	<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String,int)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.xmpp.XMPPClient.createStream/0	<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>
<it.yup.screens.RegisterScreen$1: void run()>/it.yup.xmpp.XMPPClient.openStream/0	<it.yup.xmpp.XMPPClient: void openStream()>
<it.yup.util.XMPPConsumer: void run()>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.SplashScreen: void <init>()>/java.util.Timer.schedule/0	<java.util.Timer: void schedule(java.util.TimerTask,long)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.SplashScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/it.yup.xmpp.IqManager.addRegistration/0	<it.yup.xmpp.IqManager: void addRegistration(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.IqManager.streamInitialized/0	<it.yup.xmpp.IqManager: void streamInitialized()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/java.util.Timer.schedule/0	<java.util.Timer: void schedule(java.util.TimerTask,long,long)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.GatewayRegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.GatewayRegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.ShowMMScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.ui.UIRadioButtons$UIRadioButton: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UICheckbox: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/lampiro.screens.RosterScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Config.getCapabilities/0	<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Config.getCapabilities/1	<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.updateTask/0	<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.updateTask/0	<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getXmppListener/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.getXmppListener/2	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Contact: it.yup.xml.Element getCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Config.getCapabilities/0	<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.showAlert/1	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.showAlert/2	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getXmppListener/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.showAlert/3	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.updateTask/0	<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.showAlert/4	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.showAlert/5	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient.getXmppListener/2	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Config.saveCapabilities/0	<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void stopWaiting()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/1	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/2	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen.isCameraOn/0	<lampiro.screens.RosterScreen: boolean isCameraOn()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen.isMicOn/0	<lampiro.screens.RosterScreen: boolean isMicOn()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen.reorganizeContact/0	<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.ui.UICanvas.close/1	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RegisterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.captureMedia/0	<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.captureMedia/1	<lampiro.screens.RosterScreen: void captureMedia(java.lang.String,int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/1	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.createMUC/0	<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/2	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.LampiroMidlet.platformRequest/0	<javax.microedition.midlet.MIDlet: boolean platformRequest(java.lang.String)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.closeStream/0	<it.yup.xmpp.XMPPClient: void closeStream()>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.hasQwerty/0	<it.yup.ui.UICanvas: boolean hasQwerty()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.closeStream/0	<it.yup.xmpp.XMPPClient: void closeStream()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/1	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/1	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/2	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/3	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/4	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/5	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/6	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/4	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setDirty/1	<it.yup.ui.UIMenu: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/2	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/7	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/8	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/9	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/10	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/11	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/12	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.ChatScreen: void closeMe()>/lampiro.screens.RosterScreen.updateContact/0	<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.ChatScreen: void closeMe()>/lampiro.screens.RosterScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.ChatScreen: void closeMe()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.updateContact/0	<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/lampiro.screens.RosterScreen.updateContact/1	<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/lampiro.screens.RosterScreen.reorganizeContact/0	<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.askRepaint/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getCurrentScreen/1	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.askRepaint/1	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getCurrentScreen/2	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.askRepaint/2	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<lampiro.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>/java.util.Hashtable.remove/1	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<lampiro.screens.RosterScreen: void removeAllContacts()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: void removeAllContacts()>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.screens.RosterScreen.updateContact/0	<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/lampiro.LampiroMidlet.platformRequest/0	<javax.microedition.midlet.MIDlet: boolean platformRequest(java.lang.String)>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UICanvas.askRepaint/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<it.yup.screens.DeleteContactAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/lampiro.screens.SubscribeScreen.addSubscription/0	<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/lampiro.screens.SubscribeScreen.addSubscription/1	<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getChildren/1	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/lampiro.screens.SubscribeScreen.itemAction/0	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void playSmartTone()>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen: void askSubscription(it.yup.xmpp.Contact)>/lampiro.screens.SubscribeScreen.addSubscription/0	<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void askSubscription(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void connectionLost()>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void connectionLost()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen: void showCommand(java.lang.Object)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.closeStream/0	<it.yup.xmpp.XMPPClient: void closeStream()>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.stream_authenticated/0	<it.yup.xmpp.XMPPClient: void stream_authenticated()>
<it.yup.ui.UICanvas: void pointerPressed(int,int)>/java.util.Timer.schedule/0	<java.util.Timer: void schedule(java.util.TimerTask,long)>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.isFreezed/0	<it.yup.ui.UIScreen: boolean isFreezed()>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.paint/0	<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>/it.yup.ui.UIScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.SplashScreen$UISplashTextField: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.updatePresence/0	<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UITextField: boolean keyPressed(int)>/javax.microedition.lcdui.TextBox.setCommandListener/0	<javax.microedition.lcdui.TextBox: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UITextField: void handleScreen()>/javax.microedition.lcdui.TextBox.addCommand/0	<javax.microedition.lcdui.TextBox: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.ui.UITextField: void handleScreen()>/javax.microedition.lcdui.TextBox.addCommand/1	<javax.microedition.lcdui.TextBox: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.ui.UITextField: void handleScreen()>/javax.microedition.lcdui.TextBox.setCommandListener/0	<javax.microedition.lcdui.TextBox: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.MUCComposer: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UICanvas.askRepaint/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<lampiro.screens.DataFormScreen: void stopWaiting()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.hasQwerty/0	<it.yup.ui.UICanvas: boolean hasQwerty()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.close/1	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.open/1	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.fileAcceptance/0	<lampiro.screens.RosterScreen: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/lampiro.screens.RosterScreen.fileError/0	<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.fileSent/0	<lampiro.screens.RosterScreen: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.SendMMScreen$UploadHandler: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.SendMMScreen$UploadHandler: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.sessionInitated/0	<lampiro.screens.RosterScreen: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>
<lampiro.screens.SendMMScreen$UploadHandler: void chunkSent(int,int,it.yup.xmpp.FTSender)>/lampiro.screens.RosterScreen.chunkSent/0	<lampiro.screens.RosterScreen: void chunkSent(int,int,it.yup.xmpp.FTSender)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/3	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/4	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/5	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/6	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.xmpp.Config.getProperty/7	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.InnerMMScreen: java.lang.String getVideoRes(boolean)>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/1	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.saveToStorage/1	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.updateScreen/0	<lampiro.screens.RosterScreen: void updateScreen()>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Config.resetStorage/0	<it.yup.xmpp.Config: void resetStorage(boolean)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/1	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.OptionsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.setProperty/1	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.setProperty/2	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.setProperty/3	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICanvas.setQwerty/0	<it.yup.ui.UICanvas: void setQwerty(boolean)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICanvas.setQwerty/1	<it.yup.ui.UICanvas: void setQwerty(boolean)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.setProperty/4	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.setProperty/5	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<it.yup.xmpp.FTSender$IQResultListener3: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>/java.util.Timer.scheduleAtFixedRate/0	<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>
<it.yup.ui.UIGauge: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UIGauge: void start()>/java.util.Timer.scheduleAtFixedRate/0	<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>
<it.yup.ui.UIScreen: void keyRepeated(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.chatWithContact/0	<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getProperty/3	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.getProperty/4	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.setProperty/1	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.setProperty/2	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.setProperty/3	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/it.yup.xmpp.Config.setProperty/4	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmpp.Config: void saveToStorage()>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.transport.SocketChannel: void sendContent(byte[])>/java.util.Timer.schedule/0	<java.util.Timer: void schedule(java.util.TimerTask,long)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIVLayout.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIVLayout.setHeight/0	<it.yup.ui.UIVLayout: void setHeight(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleError(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.xmpp.FTSender$IQResultListener4: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.ContactInfoScreen: it.yup.ui.UIVLayout contactLayout(it.yup.ui.UILabel,it.yup.ui.UILabel)>/it.yup.ui.UICanvas.getCurrentScreen/1	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<it.yup.ui.UIAccordion: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.screens.RosterScreen$AdHocCommandsHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.handleClientCommands/0	<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>
<it.yup.ui.UIAccordion: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.ChatScreen$1: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen$1: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.RosterScreen.setWaitingDF/0	<lampiro.screens.RosterScreen: void setWaitingDF(lampiro.screens.RosterScreen$WaitScreen)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.ui.UICanvas.open/1	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UITextPanel: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.AlbumScreen: void saveAlbum()>/it.yup.util.RMSIndex.store/0	<it.yup.util.RMSIndex: void store(byte[],byte[])>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.setPrefix/0	<it.yup.xml.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.startTag/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.attribute/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.text/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.endTag/0	<it.yup.xml.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>
<it.yup.xml.BSerializer: void write(it.yup.xml.Element,org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.flush/0	<it.yup.xml.KXmlSerializer: void flush()>
<it.yup.util.GoogleToken: java.lang.String encode(java.lang.String)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.util.Utils: void hexDigit(java.io.PrintStream,byte)>/java.io.PrintStream.write/0	<java.io.PrintStream: void write(int)>
<it.yup.util.Utils: void hexDigit(java.io.PrintStream,byte)>/java.io.PrintStream.write/1	<java.io.PrintStream: void write(int)>
<it.yup.screens.AboutScreen: void <clinit>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<lampiro.screens.AboutScreen: void <clinit>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void <clinit>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.screens.ChatScreen: void <clinit>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.ui.UITextField: void <clinit>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.ui.UITextField: void <clinit>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.IOException.<init>/0	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.IOException.<init>/1	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.IOException.<init>/2	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.IOException.<init>/3	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.IOException.<init>/4	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String[][])>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/it.yup.ui.UIUtils.colorize/1	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/lampiro.screens.RosterScreen$UIGroup.saveGroups/0	<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/it.yup.util.Utils.tokenize/0	<it.yup.util.Utils: java.util.Vector tokenize(java.lang.String,char)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/2	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.Utils.str2flags/0	<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIUtils.easyMenu/1	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getInstance/1	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIUtils.easyCenterLayout/1	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.Utils.str2flags/0	<it.yup.util.Utils: boolean[] str2flags(java.lang.String,int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UICanvas.getUIImage/2	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIUtils.colorize/1	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIUtils.colorize/2	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIUtils.colorize/3	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIUtils.colorize/4	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIUtils.colorize/5	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen$UIGroup.getGroup/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.getUIImage/2	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.getUIImage/3	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.util.RMSIndex.load/0	<it.yup.util.RMSIndex: byte[] load(byte[])>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.RosterScreen$UIGroup: void moveGroups(it.yup.ui.UIAccordion,int,int)>/java.util.Vector.setElementAt/0	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<lampiro.screens.RosterScreen$UIGroup: void moveGroups(it.yup.ui.UIAccordion,int,int)>/java.util.Vector.setElementAt/1	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<lampiro.screens.RosterScreen$UIGroup: void swapGroups(it.yup.ui.UIAccordion,int,int)>/java.util.Vector.setElementAt/0	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<lampiro.screens.RosterScreen$UIGroup: void swapGroups(it.yup.ui.UIAccordion,int,int)>/java.util.Vector.setElementAt/1	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/it.yup.ui.UIMenu.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UICombobox.append/1	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UICombobox.setSelectedIndex/0	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UITextField.setMaxHeight/0	<it.yup.ui.UITextField: void setMaxHeight(int)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.addMessageToHistory/0	<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/1	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/2	<it.yup.ui.UICombobox: int getSelectedIndex()>
<it.yup.xmpp.packets.DataForm: void <init>(it.yup.xml.Element)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.screens.AddContactScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/0	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItemAt/0	<it.yup.ui.UIPanel: void removeItemAt(int)>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.TextField.setString/0	<javax.microedition.lcdui.TextField: void setString(java.lang.String)>
<it.yup.screens.AddContactScreen: void _itemStateChanged(javax.microedition.lcdui.Item)>/javax.microedition.lcdui.TextField.setString/0	<javax.microedition.lcdui.TextField: void setString(java.lang.String)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>/it.yup.ui.UILabel.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<it.yup.ui.UICombobox: void setSelected(boolean)>/it.yup.ui.UILabel.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UICombobox: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getHeight/1	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UICombobox$UIComboScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildren/1	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.ui.UICombobox: void setDirty(boolean)>/it.yup.ui.UICombobox$UIComboScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.xmpp.SimpleDataFormExecutor: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.packets.DataForm.getResultElement/0	<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>
<it.yup.xmpp.SimpleDataFormExecutor: void display_internal()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(it.yup.ui.UILabel)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedIndex/0	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getFrom()>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/0	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/1	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.setSelectedFlags/0	<javax.microedition.lcdui.ChoiceGroup: void setSelectedFlags(boolean[])>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/2	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/3	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.OptionsScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.setSelectedFlags/1	<javax.microedition.lcdui.ChoiceGroup: void setSelectedFlags(boolean[])>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/1	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/1	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/2	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleError(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleResult(it.yup.xml.Element)>/lampiro.screens.GatewayRegisterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/0	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.StatusScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.setSelectedIndex/0	<javax.microedition.lcdui.ChoiceGroup: void setSelectedIndex(int,boolean)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.StringItem.setText/0	<javax.microedition.lcdui.StringItem: void setText(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.FTSender$FTSEventHandler.sessionInitated/0	<lampiro.screens.RosterScreen: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>
<it.yup.screens.DataResultScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.DataFormListener.execute/0	<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>
<it.yup.screens.DataResultScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.DataFormListener.execute/1	<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream)>/com.jcraft.jzlib.ZStream.inflateInit/0	<com.jcraft.jzlib.ZStream: int inflateInit()>
<com.jcraft.jzlib.ZOutputStream: void <init>(java.io.OutputStream,int,boolean)>/com.jcraft.jzlib.ZStream.deflateInit/0	<com.jcraft.jzlib.ZStream: int deflateInit(int,boolean)>
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/com.jcraft.jzlib.ZStream.deflate/0	<com.jcraft.jzlib.ZStream: int deflate(int)>
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/com.jcraft.jzlib.ZStream.inflate/0	<com.jcraft.jzlib.ZStream: int inflate(int)>
<com.jcraft.jzlib.ZOutputStream: void write(byte[],int,int)>/java.io.OutputStream.write/0	<java.io.OutputStream: void write(byte[],int,int)>
<com.jcraft.jzlib.ZOutputStream: void finish()>/com.jcraft.jzlib.ZStream.deflate/0	<com.jcraft.jzlib.ZStream: int deflate(int)>
<com.jcraft.jzlib.ZOutputStream: void finish()>/com.jcraft.jzlib.ZStream.inflate/0	<com.jcraft.jzlib.ZStream: int inflate(int)>
<com.jcraft.jzlib.ZOutputStream: void finish()>/java.io.OutputStream.write/0	<java.io.OutputStream: void write(byte[],int,int)>
<com.jcraft.jzlib.ZOutputStream: void end()>/com.jcraft.jzlib.ZStream.deflateEnd/0	<com.jcraft.jzlib.ZStream: int deflateEnd()>
<com.jcraft.jzlib.ZOutputStream: void end()>/com.jcraft.jzlib.ZStream.inflateEnd/0	<com.jcraft.jzlib.ZStream: int inflateEnd()>
<com.jcraft.jzlib.ZOutputStream: void end()>/com.jcraft.jzlib.ZStream.free/0	<com.jcraft.jzlib.ZStream: void free()>
<com.jcraft.jzlib.ZOutputStream: void close()>/java.io.OutputStream.close/0	<java.io.OutputStream: void close()>
<com.jcraft.jzlib.ZOutputStream: void close()>/java.io.OutputStream.close/1	<java.io.OutputStream: void close()>
<com.jcraft.jzlib.ZOutputStream: void flush()>/java.io.OutputStream.flush/0	<java.io.OutputStream: void flush()>
<it.yup.xmlstream.Element: void setAttribute(java.lang.String,java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.Element: void delAttribute(java.lang.String)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element addElement(java.lang.String,java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICombobox.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UICombobox.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.xmlstream.Element: void <init>(it.yup.xmlstream.Element)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.Element: void <init>(it.yup.xmlstream.Element)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.openMenu/0	<it.yup.ui.UICombobox: void openMenu()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getGroups/1	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getGroups/2	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndeces/0	<it.yup.ui.UICombobox: int[] getSelectedIndeces()>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.setSelectedFlags/0	<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.removeAll/0	<it.yup.ui.UICombobox: void removeAll()>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIPanel: void removeItemAt(int)>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<it.yup.ui.UIPanel: void removeItemAt(int)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIPanel: void removeAllItems()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIRadioButtons.setSelectedIndex/0	<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIRadioButtons.setSelectedIndex/1	<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIRadioButtons.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIRadioButtons.getItem/0	<it.yup.ui.UILayout: it.yup.ui.UIItem getItem(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UITextField.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UITextField.setSubmenu/1	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIRadioButtons.getSelectedIndex/0	<it.yup.ui.UIRadioButtons: int getSelectedIndex()>
<lampiro.screens.StatusScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<it.yup.util.XMPPConsumer: void run()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.XMPPConsumer: void run()>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<it.yup.util.XMPPConsumer: void run()>/java.util.Vector.removeElementAt/1	<java.util.Vector: void removeElementAt(int)>
<it.yup.util.XMPPConsumer: void gotMessage(java.lang.String,int)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.screens.CommandListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.getFullJid/0	<it.yup.xmpp.Contact: java.lang.String getFullJid()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Contact.updatePresence/0	<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.XMPPClient$XmppListener.authenticated/0	<it.yup.screens.RosterScreen: void authenticated()>
<it.yup.xmlstream.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmlstream.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/1	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmlstream.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/2	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmlstream.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/3	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void playSmartTone()>/it.yup.xmpp.XMPPClient$XmppListener.playSmartTone/0	<it.yup.screens.RosterScreen: void playSmartTone()>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String,int)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.Contact.updatePresence/0	<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xmpp.XMPPClient$XmppListener.updateContact/0	<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xmpp.XMPPClient$XmppListener.handleCommand/0	<it.yup.screens.RosterScreen: void handleCommand(it.yup.xmpp.Contact,java.lang.String)>
<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/it.yup.xmpp.XMPPClient$XmppListener.showAlert/0	<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.XMPPClient$XmppListener.updateContact/0	<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.XMPPClient$XmppListener.updateContact/1	<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.XMPPClient$XmppListener.handleTask/0	<it.yup.screens.RosterScreen: void handleTask(it.yup.xmpp.Task,boolean)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIHLayout.insert/3	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIButton.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIButton.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UIMenu.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIScreen.addPaintedItem/0	<it.yup.ui.UIScreen: void addPaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setAbsoluteX/0	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/javax.microedition.lcdui.Alert.setString/0	<javax.microedition.lcdui.Alert: void setString(java.lang.String)>
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/javax.microedition.lcdui.Alert.setType/0	<javax.microedition.lcdui.Alert: void setType(javax.microedition.lcdui.AlertType)>
<it.yup.screens.RosterScreen: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>/javax.microedition.lcdui.Alert.setTimeout/0	<javax.microedition.lcdui.Alert: void setTimeout(int)>
<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/it.yup.screens.DataFormScreen.setActions/0	<it.yup.screens.DataFormScreen: void setActions(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.DataFormListener.execute/0	<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.ChoiceGroup.append/0	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.ChoiceGroup.append/1	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.ChoiceGroup.setSelectedIndex/0	<javax.microedition.lcdui.ChoiceGroup: void setSelectedIndex(int,boolean)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.StringItem.setLayout/0	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.StringItem.setDefaultCommand/0	<javax.microedition.lcdui.StringItem: void setDefaultCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/javax.microedition.lcdui.StringItem.setItemCommandListener/0	<javax.microedition.lcdui.StringItem: void setItemCommandListener(javax.microedition.lcdui.ItemCommandListener)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.addMessageToHistory/0	<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>
<lampiro.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.addMessageToHistory/0	<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.screens.SimpleComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.addMessageToHistory/0	<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>
<it.yup.ui.UIRadioButtons$UIRadioButton: boolean keyPressed(int)>/it.yup.ui.UIRadioButtons.keyPressed/0	<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.xmlstream.BasicXmlStream.initialize/0	<it.yup.xmlstream.SocketStream: void initialize(java.lang.String,java.lang.String)>
<it.yup.tests.XMPPTestClient: void startClient()>/it.yup.transport.BaseChannel.open/0	<it.yup.transport.SocketChannel: void open()>
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.Contact.getAvailability/0	<it.yup.xmpp.Contact: int getAvailability()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.Contact.getAvailability/1	<it.yup.xmpp.Contact: int getAvailability()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.Contact.getAllPresences/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence[] getAllPresences()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.getText/1	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.getImg/0	<it.yup.ui.UILabel: javax.microedition.lcdui.Image getImg()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.setImg/0	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.setLayoutWidth/0	<it.yup.ui.UIItem: void setLayoutWidth(int)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.Contact.unread_msg/0	<it.yup.xmpp.Contact: boolean unread_msg()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.getImg/1	<it.yup.ui.UILabel: javax.microedition.lcdui.Image getImg()>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.ui.UILabel.setImg/1	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UISeparator.getHeight/0	<it.yup.ui.UIItem: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.setWrappable/1	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.RosterScreen$UIContact: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.xmpp.Contact: void addTask(it.yup.xmpp.Task)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.Contact: void removeTask(it.yup.xmpp.Task)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.xmpp.Contact: it.yup.xmpp.Task[] getTasks()>/java.util.Vector.copyInto/0	<java.util.Vector: void copyInto(java.lang.Object[])>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.packets.DataForm.getResultElement/0	<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.packets.DataForm.getResultElement/1	<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIGauge.start/0	<it.yup.ui.UIGauge: void start()>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void stopWaiting()>/it.yup.ui.UIGauge.cancel/0	<it.yup.ui.UIGauge: void cancel()>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.send/0	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.nextInitializer/0	<it.yup.xmlstream.BasicXmlStream: void nextInitializer()>
<it.yup.xmlstream.BasicXmlStream$SessionOpener: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Contact.getGroups/0	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Contact.supportsMUC/0	<it.yup.xmpp.Contact: boolean supportsMUC(it.yup.xmpp.packets.Presence)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.Contact.getAvailability/0	<it.yup.xmpp.Contact: int getAvailability(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIHLayout.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/9	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.setAbsoluteX/0	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/lampiro.screens.RosterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/it.yup.ui.UITextField.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.xmpp.Contact.getAvailability/0	<it.yup.xmpp.Contact: int getAvailability()>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.ui.UIHLayout.getItem/0	<it.yup.ui.UILayout: it.yup.ui.UIItem getItem(int)>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.ui.UIHLayout.getItem/1	<it.yup.ui.UILayout: it.yup.ui.UIItem getItem(int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getSelectedIndex/0	<it.yup.ui.UIPanel: int getSelectedIndex()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setText/1	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.remove/1	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.append/3	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.ChatScreen: void closeMe()>/it.yup.xmlstream.EventQueryRegistration.remove/0	<it.yup.xmlstream.EventQueryRegistration: void remove()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedIndex/0	<it.yup.ui.UIPanel: int getSelectedIndex()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedIndex/1	<it.yup.ui.UIPanel: int getSelectedIndex()>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.getItem/0	<it.yup.ui.UILayout: it.yup.ui.UIItem getItem(int)>
<it.yup.xml.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.screens.ChatScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/1	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/2	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>/java.util.Hashtable.put/3	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIButton.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIButton.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.getHistoryLength/0	<it.yup.xmpp.Contact: int getHistoryLength(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.send/0	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.nextInitializer/0	<it.yup.xmlstream.BasicXmlStream: void nextInitializer()>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.send/0	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.send/1	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.send/2	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmlstream.SASLAuthenticator: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: void removeAll()>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: void removeAll()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/java.util.Vector.setElementAt/0	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<it.yup.ui.UIMenu: void clear()>/java.util.Vector.setSize/0	<java.util.Vector: void setSize(int)>
<lampiro.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>/lampiro.screens.DataFormScreen.setActions/0	<lampiro.screens.DataFormScreen: void setActions(int)>
<it.yup.ui.UIMenu: void setOpenedState(boolean)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: void setOpenedState(boolean)>/it.yup.ui.UIScreen.removePaintedItem/1	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UIMenu.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.ChoiceGroup.setLayout/0	<javax.microedition.lcdui.ChoiceGroup: void setLayout(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.ChoiceGroup.setLayout/1	<javax.microedition.lcdui.ChoiceGroup: void setLayout(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/javax.microedition.lcdui.StringItem.setLayout/0	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.DataFormScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.DataFormListener.execute/0	<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/javax.microedition.lcdui.ChoiceGroup.delete/0	<javax.microedition.lcdui.ChoiceGroup: void delete(int)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/javax.microedition.lcdui.ChoiceGroup.append/0	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/javax.microedition.lcdui.ChoiceGroup.delete/1	<javax.microedition.lcdui.ChoiceGroup: void delete(int)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/javax.microedition.lcdui.ChoiceGroup.append/1	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<com.jcraft.jzlib.ZStream: int inflateInit(int,boolean)>/com.jcraft.jzlib.Inflate.inflateInit/0	<com.jcraft.jzlib.Inflate: int inflateInit(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.ZStream: int inflate(int)>/com.jcraft.jzlib.Inflate.inflate/0	<com.jcraft.jzlib.Inflate: int inflate(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.ZStream: int inflateEnd()>/com.jcraft.jzlib.Inflate.inflateEnd/0	<com.jcraft.jzlib.Inflate: int inflateEnd(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.ZStream: int inflateSync()>/com.jcraft.jzlib.Inflate.inflateSync/0	<com.jcraft.jzlib.Inflate: int inflateSync(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.ZStream: int inflateSetDictionary(byte[],int)>/com.jcraft.jzlib.Inflate.inflateSetDictionary/0	<com.jcraft.jzlib.Inflate: int inflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>
<com.jcraft.jzlib.ZStream: int deflateInit(int,int,boolean)>/com.jcraft.jzlib.Deflate.deflateInit/0	<com.jcraft.jzlib.Deflate: int deflateInit(com.jcraft.jzlib.ZStream,int,int)>
<com.jcraft.jzlib.ZStream: int deflate(int)>/com.jcraft.jzlib.Deflate.deflate/0	<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.ZStream: int deflateEnd()>/com.jcraft.jzlib.Deflate.deflateEnd/0	<com.jcraft.jzlib.Deflate: int deflateEnd()>
<com.jcraft.jzlib.ZStream: int deflateParams(int,int)>/com.jcraft.jzlib.Deflate.deflateParams/0	<com.jcraft.jzlib.Deflate: int deflateParams(com.jcraft.jzlib.ZStream,int,int)>
<com.jcraft.jzlib.ZStream: int deflateSetDictionary(byte[],int)>/com.jcraft.jzlib.Deflate.deflateSetDictionary/0	<com.jcraft.jzlib.Deflate: int deflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>
<it.yup.util.GoogleToken: void run()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
<it.yup.util.GoogleToken: void run()>/java.lang.Object.notify/1	<java.lang.Object: void notify()>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextPanel.setContainer/0	<it.yup.ui.UITextPanel: void setContainer(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextPanel.setText/0	<it.yup.ui.UITextPanel: void setText(java.lang.String)>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextPanel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>/it.yup.ui.UITextPanel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UITextField: void setText(java.lang.String)>/it.yup.ui.UITextPanel.setText/0	<it.yup.ui.UITextPanel: void setText(java.lang.String)>
<it.yup.ui.UITextField: java.lang.String getText()>/it.yup.ui.UITextPanel.getText/0	<it.yup.ui.UITextPanel: java.lang.String getText()>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.util.MetaVector: void addElement(java.lang.Object)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UITextField: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UITextPanel.getHeight/0	<it.yup.ui.UIPanel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UITextField: void setSelected(boolean)>/it.yup.ui.UITextPanel.setSelected/0	<it.yup.ui.UITextPanel: void setSelected(boolean)>
<it.yup.ui.UITextField: boolean keyPressed(int)>/it.yup.ui.UITextPanel.keyPressed/0	<it.yup.ui.UITextPanel: boolean keyPressed(int)>
<it.yup.ui.UITextField: void unExpand()>/it.yup.ui.UITextPanel.setSelected/0	<it.yup.ui.UITextPanel: void setSelected(boolean)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UITextPanel.setSelected/0	<it.yup.ui.UITextPanel: void setSelected(boolean)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UITextPanel.getTextLines/0	<it.yup.ui.UITextPanel: java.util.Vector getTextLines()>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UIScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<it.yup.util.MetaVector: void removeAllElements()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UITextField: void handleScreen()>/it.yup.ui.UITextPanel.getText/0	<it.yup.ui.UITextPanel: java.lang.String getText()>
<it.yup.util.MetaVector: void removeElementAt(int)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.util.MetaVector: void setElementAt(java.lang.Object,int)>/java.util.Vector.setElementAt/0	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<it.yup.ui.UIScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void setMaxHeight(int)>/it.yup.ui.UITextPanel.setMaxHeight/0	<it.yup.ui.UITextPanel: void setMaxHeight(int)>
<it.yup.ui.UITextField: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UITextPanel.setScreen/0	<it.yup.ui.UITextPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UITextField: void setDirty(boolean)>/it.yup.ui.UITextPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UITextField: boolean isDirty()>/it.yup.ui.UITextPanel.isDirty/0	<it.yup.ui.UIPanel: boolean isDirty()>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.DataFormListener.execute/0	<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,boolean)>/com.jcraft.jzlib.ZStream.inflateInit/0	<com.jcraft.jzlib.ZStream: int inflateInit(boolean)>
<com.jcraft.jzlib.ZInputStream: void <init>(java.io.InputStream,int)>/com.jcraft.jzlib.ZStream.deflateInit/0	<com.jcraft.jzlib.ZStream: int deflateInit(int)>
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/java.io.InputStream.read/0	<java.io.InputStream: int read(byte[],int,int)>
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/com.jcraft.jzlib.ZStream.deflate/0	<com.jcraft.jzlib.ZStream: int deflate(int)>
<com.jcraft.jzlib.ZInputStream: int read(byte[],int,int)>/com.jcraft.jzlib.ZStream.inflate/0	<com.jcraft.jzlib.ZStream: int inflate(int)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<it.yup.ui.UICombobox$UIComboScreen: void <init>(it.yup.ui.UICombobox,java.lang.String)>/it.yup.ui.UIPanel.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.DataFormScreen: void stopWaiting()>/it.yup.ui.UIGauge.cancel/0	<it.yup.ui.UIGauge: void cancel()>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIHLayout.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setScreen/1	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setScreen/2	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setFont/1	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setBg_color/2	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setFg_color/2	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setFont/2	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.ui.UIScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/2	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.setSelectedFlags/0	<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/3	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.setDirty/0	<it.yup.ui.UICombobox: void setDirty(boolean)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UICombobox.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/4	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<com.jcraft.jzlib.ZInputStream: void close()>/java.io.InputStream.close/0	<java.io.InputStream: void close()>
<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIScreen: void removeAllPopups()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>/it.yup.ui.UIMenu.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.setOpenedState/0	<it.yup.ui.UIMenu: void setOpenedState(boolean)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/6	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/7	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/8	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getItemList/9	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.transport.BaseChannel$Sender: void run()>/it.yup.transport.BaseChannel.pollAlive/0	<it.yup.transport.SocketChannel: boolean pollAlive()>
<it.yup.transport.BaseChannel$Sender: void run()>/it.yup.transport.BaseChannel.close/0	<it.yup.transport.SocketChannel: void close()>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/1	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedFlags/0	<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/2	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/3	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedFlags/1	<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/4	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/5	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/6	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/7	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedIndex/0	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/8	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/9	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/10	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/11	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/12	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedIndex/1	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setAnchorPoint/2	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/13	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/14	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.append/15	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedIndex/2	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICheckbox.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/1	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/2	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/3	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICombobox.isSelected/0	<it.yup.ui.UICombobox: boolean isSelected(int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICombobox.isSelected/1	<it.yup.ui.UICombobox: boolean isSelected(int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICombobox.isSelected/2	<it.yup.ui.UICombobox: boolean isSelected(int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICombobox.isSelected/3	<it.yup.ui.UICombobox: boolean isSelected(int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UIGauge.getValue/0	<it.yup.ui.UIGauge: int getValue()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UICombobox.append/1	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UICombobox.setSelectedIndex/0	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIVLayout.isDirty/0	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIVLayout.paint0/0	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getClipHeight/1	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/1	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isDirty/0	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.setDirty/2	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.setAbsoluteX/0	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.paint0/0	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getClipHeight/2	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UICanvas.getClipHeight/3	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/2	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/3	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getText/1	<it.yup.ui.UILabel: java.lang.String getText()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/4	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.getItemList/2	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.getItemList/3	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.getItemList/4	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.getItemList/5	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.getItemList/6	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/5	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIMenu.isOpenedState/6	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getText/5	<it.yup.ui.UILabel: java.lang.String getText()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.getText/6	<it.yup.ui.UILabel: java.lang.String getText()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UILabel.setText/2	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIHLayout.isDirty/0	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: boolean paint(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIHLayout.paint0/0	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<lampiro.screens.KeyScreen: void <init>()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.KeyScreen: void <init>()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/2	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/3	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/4	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/5	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/6	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/7	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/8	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/9	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/10	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/11	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/12	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UILabel.setText/13	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UIScreen: java.lang.String getTitle()>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<it.yup.ui.UIScreen: void setTitle(java.lang.String)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UIScreen: void invalidate(int,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void invalidate(int,int)>/it.yup.ui.UIVLayout.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIScreen: void invalidate(int,int)>/it.yup.ui.UIHLayout.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.FTReceiver$FTREventHandler.reqFT/0	<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIMenu.getAbsoluteX/1	<it.yup.ui.UIMenu: int getAbsoluteX()>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIMenu.getWidth/1	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIMenu.getAbsoluteY/1	<it.yup.ui.UIMenu: int getAbsoluteY()>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIMenu.getHeight/1	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>/it.yup.ui.UIMenu.setDirty/1	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIMenu.getAbsoluteX/0	<it.yup.ui.UIMenu: int getAbsoluteX()>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIMenu.getAbsoluteY/0	<it.yup.ui.UIMenu: int getAbsoluteY()>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIGauge: void cancel()>/it.yup.ui.UIGauge$Ticker.cancel/0	<java.util.TimerTask: boolean cancel()>
<it.yup.ui.UIGauge: void start()>/it.yup.ui.UIGauge$Ticker.cancel/0	<java.util.TimerTask: boolean cancel()>
<it.yup.tests.XMLTestMidlet: void <init>()>/javax.microedition.lcdui.Form.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.xmlstream.EventQueryRegistration: void remove()>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIScreen: void setDirty(boolean)>/it.yup.ui.UIMenu.setDirty/1	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIScreen: void setDirty(boolean)>/it.yup.ui.UIVLayout.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIScreen: void setDirty(boolean)>/it.yup.ui.UIHLayout.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIScreen: void setDirty(boolean)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UIScreen: void addPaintedItem(it.yup.ui.UIItem)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.NetworkConsumer: void run()>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<it.yup.util.NetworkConsumer: void gotMessage(java.lang.String,int)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.transport.SocketChannel: void sendContent(byte[])>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.transport.SocketChannel: void sendContent(byte[])>/java.util.TimerTask.cancel/0	<java.util.TimerTask: boolean cancel()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/4	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/5	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/6	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.addItem/7	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xmlstream.BasicXmlStream.send/0	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmlstream.AccountRegistration: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.AccountRegistration: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.nextInitializer/0	<it.yup.xmlstream.BasicXmlStream: void nextInitializer()>
<it.yup.xmlstream.AccountRegistration: void packetReceived(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/1	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/javax.microedition.lcdui.List.append/0	<javax.microedition.lcdui.List: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/javax.microedition.lcdui.List.addCommand/0	<javax.microedition.lcdui.List: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/javax.microedition.lcdui.List.setCommandListener/0	<javax.microedition.lcdui.List: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.List.getSelectedFlags/0	<javax.microedition.lcdui.List: int getSelectedFlags(boolean[])>
<it.yup.transport.SocketChannel$UTFReader: void close()>/java.io.InputStream.close/0	<java.io.InputStream: void close()>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void removeAllItems()>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<it.yup.ui.UIAccordion: void removeAllItems()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>/java.util.Vector.copyInto/0	<java.util.Vector: void copyInto(java.lang.Object[])>
<it.yup.ui.UIAccordion: void move(int,int)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void move(int,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.removeElement/1	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.insertElementAt/1	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/4	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/10	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.append/11	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.tests.UITestMidlet$TestScreen: void buildScreen()>/it.yup.ui.UIMenu.setWidth/3	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<it.yup.tests.UITestMidlet$TestScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/it.yup.util.RMSIndex$Comparator.compare/0	<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>
<it.yup.util.RMSIndex: void store(byte[],byte[])>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<it.yup.util.RMSIndex: void delete(byte[])>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<it.yup.util.RMSIndex: void delete(byte[])>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.contains/0	<it.yup.ui.UIPanel: boolean contains(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIGauge.start/0	<it.yup.ui.UIGauge: void start()>
<lampiro.screens.CommandListScreen: void stopWaiting()>/it.yup.ui.UIGauge.cancel/0	<it.yup.ui.UIGauge: void cancel()>
<lampiro.LampiroMidlet: void startApp()>/it.yup.xmpp.XMPPClient.setPresence/0	<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>
<it.yup.xmlstream.SocketStream: void initialize(java.lang.String,java.lang.String)>/it.yup.xml.KXmlParser.setFeature/0	<it.yup.xml.KXmlParser: void setFeature(java.lang.String,boolean)>
<it.yup.xmpp.BluendoXMLRPC: void write(it.yup.xml.Element)>/java.io.DataOutputStream.write/0	<java.io.DataOutputStream: void write(int)>
<it.yup.xmpp.BluendoXMLRPC: void write(it.yup.xml.Element)>/java.io.DataOutputStream.write/1	<java.io.DataOutputStream: void write(int)>
<it.yup.xmpp.BluendoXMLRPC: void write(it.yup.xml.Element)>/java.io.DataOutputStream.write/2	<java.io.DataOutputStream: void write(int)>
<it.yup.xmpp.BluendoXMLRPC: void write(it.yup.xml.Element)>/java.io.DataOutputStream.write/3	<java.io.DataOutputStream: void write(byte[],int,int)>
<it.yup.xmpp.BluendoXMLRPC: it.yup.xml.Element read()>/java.io.DataInputStream.read/0	<java.io.DataInputStream: int read()>
<it.yup.xmpp.BluendoXMLRPC: it.yup.xml.Element read()>/java.io.DataInputStream.readFully/0	<java.io.DataInputStream: void readFully(byte[],int,int)>
<it.yup.xmpp.BluendoXMLRPC: void flush()>/java.io.DataOutputStream.flush/0	<java.io.DataOutputStream: void flush()>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xml.KXmlParser.require/0	<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xml.KXmlParser.nextToken/0	<it.yup.xml.KXmlParser: int nextToken()>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.transport.SocketChannel.close/0	<it.yup.transport.SocketChannel: void close()>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.transport.SocketChannel.close/1	<it.yup.transport.SocketChannel: void close()>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.DataInputStream.readFully/0	<java.io.DataInputStream: void readFully(byte[],int,int)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.DataInputStream.readFully/1	<java.io.DataInputStream: void readFully(byte[],int,int)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.DataInputStream.readFully/2	<java.io.DataInputStream: void readFully(byte[],int,int)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.DataInputStream.readFully/3	<java.io.DataInputStream: void readFully(byte[],int,int)>
<it.yup.xml.BProcessor: java.lang.Object parse(java.io.InputStream,java.lang.String)>/java.io.DataInputStream.readFully/4	<java.io.DataInputStream: void readFully(byte[],int,int)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element _parse(org.xmlpull.v1.XmlPullParser)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/0	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/1	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/2	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/3	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/4	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/5	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/6	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/7	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/8	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: void <clinit>()>/com.jcraft.jzlib.Deflate$Config.<init>/9	<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.lang.StringBuilder.<init>/5	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/it.yup.ui.UICanvas.getUIImage/2	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/it.yup.ui.UICanvas.getUIImage/3	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/it.yup.ui.UICanvas.getUIImage/4	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/it.yup.ui.UICanvas.getUIImage/5	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.xml.BProcessor: void writeTag(byte,java.lang.String,java.io.OutputStream)>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/lampiro.screens.RosterScreen$UIGroup.getFg_color/0	<it.yup.ui.UIItem: int getFg_color()>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/lampiro.screens.RosterScreen$UIGroup.initGroupData/0	<lampiro.screens.RosterScreen$UIGroup: void initGroupData()>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/lampiro.screens.RosterScreen$UIGroup.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.SubscribeScreen: void <init>()>/lampiro.screens.SubscribeScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/lampiro.screens.SubscribeScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void <init>()>/lampiro.screens.SubscribeScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<lampiro.screens.AlbumScreen: void <init>()>/lampiro.screens.AlbumScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.AlbumScreen: void <init>()>/lampiro.screens.AlbumScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.AlbumScreen: void <init>()>/lampiro.screens.AlbumScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.screens.RosterScreen.addCommand/0	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.screens.RosterScreen.addCommand/1	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.screens.RosterScreen.addCommand/2	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.screens.RosterScreen.addCommand/3	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.screens.RosterScreen.addCommand/4	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.screens.RosterScreen.setCommandListener/0	<javax.microedition.lcdui.Canvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lampiro.screens.RegisterScreen: void <init>()>/lampiro.screens.RegisterScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void <init>()>/lampiro.screens.RegisterScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.screens.RegisterScreen.setItemStateListener/0	<javax.microedition.lcdui.Form: void setItemStateListener(javax.microedition.lcdui.ItemStateListener)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.screens.RegisterScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.screens.RegisterScreen.setCommandListener/0	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.setFullScreenMode/0	<javax.microedition.lcdui.game.GameCanvas: void setFullScreenMode(boolean)>
<lampiro.screens.FTScreen: void <init>()>/lampiro.screens.FTScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.FTScreen: void <init>()>/lampiro.screens.FTScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.FTScreen: void <init>()>/lampiro.screens.FTScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.FTScreen: void <init>()>/lampiro.screens.FTScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void <clinit>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void <init>(byte[],java.lang.String,int)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/lampiro.screens.ShowMMScreen.itemAction/0	<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.getPrintableHeight/0	<lampiro.screens.MUCScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.updateConversation/0	<lampiro.screens.MUCScreen: boolean updateConversation()>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/12	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/13	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void endDrag()>/lampiro.screens.RosterScreen$UIGroup.stopMoving/0	<lampiro.screens.RosterScreen$UIGroup: void stopMoving()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/12	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/13	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void closeMe()>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: void removeAllContacts()>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void dataReceived(byte[],java.lang.String,java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UIMenu: void <init>(java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Contact.updatePresence/0	<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>
<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.askRepaint/1	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.askRepaint/2	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.DataFormScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UIMenu.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UIMenu.setAbsoluteY/0	<it.yup.ui.UIMenu: void setAbsoluteY(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.setAbsoluteX/0	<it.yup.ui.UIMenu: void setAbsoluteX(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.AboutScreen: void <clinit>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/it.yup.ui.UIAccordion.insertItem/0	<it.yup.ui.UIAccordion: void insertItem(it.yup.ui.UIItem,int,java.util.Vector)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/it.yup.ui.UIAccordion.addItem/0	<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem,java.util.Vector)>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/12	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/13	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/14	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/15	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/16	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/17	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/18	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/19	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/20	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/21	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/22	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/23	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/12	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/13	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/14	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/15	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/16	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/17	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/18	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/19	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/20	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/21	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/22	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/23	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/24	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/25	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/26	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/27	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/28	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/29	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/30	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.util.ResourceManager.getString/31	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/lampiro.screens.RosterScreen$UIGroup.orderGroups/0	<lampiro.screens.RosterScreen$UIGroup: void orderGroups()>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/lampiro.screens.SubscribeScreen.<init>/0	<lampiro.screens.SubscribeScreen: void <init>()>
<it.yup.xmpp.Group: void <init>(java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.Element: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.AlbumScreen: void <init>()>/lampiro.screens.AlbumScreen.setupScreen/0	<lampiro.screens.AlbumScreen: void setupScreen()>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Canvas.<init>/0	<javax.microedition.lcdui.Canvas: void <init>()>
<it.yup.util.MemoryLogConsumer: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.RegisterScreen: void <init>()>/lampiro.screens.RegisterScreen.getServer/0	<lampiro.screens.RegisterScreen: java.lang.String getServer(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.RosterScreen: void <init>()>/lampiro.screens.RosterScreen.toggleMenus/0	<lampiro.screens.RosterScreen: void toggleMenus()>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.Form.<init>/0	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.screens.RegisterScreen.get_server/0	<it.yup.screens.RegisterScreen: java.lang.String get_server(java.lang.String)>
<it.yup.ui.UICanvas: void <init>()>/javax.microedition.lcdui.game.GameCanvas.<init>/0	<javax.microedition.lcdui.game.GameCanvas: void <init>(boolean)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.initLongPress/0	<it.yup.ui.UICanvas: java.util.TimerTask initLongPress(it.yup.ui.UIScreen)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.UICanvas.setupdefaultKeyCode/0	<it.yup.ui.UICanvas: void setupdefaultKeyCode()>
<lampiro.screens.FTScreen: void <init>()>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.FTScreen: void <init>()>/lampiro.screens.FTScreen.fillScreen/0	<lampiro.screens.FTScreen: void fillScreen()>
<it.yup.xmpp.Config: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.IqManager: void <init>()>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.util.MetaVector: java.util.Enumeration access$0(it.yup.util.MetaVector)>/it.yup.util.MetaVector.superEnumeration/0	<it.yup.util.MetaVector: java.util.Enumeration superEnumeration()>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/5	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/6	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/7	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/8	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/9	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/10	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.lang.StringBuilder.<init>/11	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>/lampiro.screens.FTScreen.getInstance/0	<lampiro.screens.FTScreen: lampiro.screens.FTScreen getInstance()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.XMPPClient.getErrorString/0	<it.yup.xmpp.XMPPClient: java.lang.String getErrorString(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xmpp.Group.getGroups/0	<it.yup.xmpp.Group: java.util.Hashtable getGroups()>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.util.Utils.getBytesUtf8/1	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.BProcessor.toBinary/1	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.colorize/1	<it.yup.ui.UIUtils: int colorize(int,int)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.medColor/0	<it.yup.ui.UIUtils: int medColor(int,int)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.medColor/1	<it.yup.ui.UIUtils: int medColor(int,int)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.access$0/0	<lampiro.screens.RosterScreen$UIGroup: java.util.Hashtable access$0()>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.access$5/0	<lampiro.screens.RosterScreen$UIGroup: void access$5(lampiro.screens.RosterScreen$UIGroup,it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/1	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/2	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/3	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/4	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/5	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getGroup/6	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.ChatScreen: boolean isPrintable(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.xmpp.Contact.domain/0	<it.yup.xmpp.Contact: java.lang.String domain(java.lang.String)>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<lampiro.screens.AlbumScreen: void setupScreen()>/lampiro.screens.AlbumScreen.updateChildren/0	<lampiro.screens.AlbumScreen: void updateChildren()>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$4/0	<lampiro.screens.FTScreen$FTItem: boolean access$4(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$3/0	<lampiro.screens.FTScreen$FTItem: boolean access$3()>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$5/0	<lampiro.screens.FTScreen$FTItem: int access$5(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$6/0	<lampiro.screens.FTScreen$FTItem: int access$6(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$1/0	<lampiro.screens.FTScreen$FTItem: java.lang.Object access$1(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$7/0	<lampiro.screens.FTScreen$FTItem: java.lang.String access$7(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$1/1	<lampiro.screens.FTScreen$FTItem: java.lang.Object access$1(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$7/1	<lampiro.screens.FTScreen$FTItem: java.lang.String access$7(lampiro.screens.FTScreen$FTItem)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen$FTItem.access$6/1	<lampiro.screens.FTScreen$FTItem: int access$6(lampiro.screens.FTScreen$FTItem)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.util.RMSIndex.rmExist/0	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/javax.microedition.rms.RecordStore.deleteRecordStore/0	<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.util.RMSIndex.rmExist/1	<it.yup.util.RMSIndex: boolean rmExist(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/javax.microedition.rms.RecordStore.deleteRecordStore/1	<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/javax.microedition.rms.RecordStore.deleteRecordStore/2	<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/javax.microedition.rms.RecordStore.deleteRecordStore/3	<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.util.MemoryLogConsumer.getConsumer/0	<it.yup.util.MemoryLogConsumer: it.yup.util.MemoryLogConsumer getConsumer()>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.xmpp.XMPPClient.getInstance/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/it.yup.util.Utils.is_jid/0	<it.yup.util.Utils: boolean is_jid(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIUtils.imageResize/0	<it.yup.ui.UIUtils: javax.microedition.lcdui.Image imageResize(javax.microedition.lcdui.Image,int,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/lampiro.screens.RosterScreen.getOrderedContacts/0	<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.ChatScreen$ForwardScreen: void closeMe()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ChatScreen$ForwardScreen: void closeMe()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.Roster: void addGatewayGroup(it.yup.xmpp.Contact,it.yup.xml.Element)>/it.yup.xmpp.Contact.domain/0	<it.yup.xmpp.Contact: java.lang.String domain(java.lang.String)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/it.yup.util.Utils.digest/0	<it.yup.util.Utils: byte[] digest(java.lang.String,java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/lampiro.screens.AlbumScreen.getCount/0	<lampiro.screens.AlbumScreen: int getCount(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIUtils.imageResize/0	<it.yup.ui.UIUtils: javax.microedition.lcdui.Image imageResize(javax.microedition.lcdui.Image,int,int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIUtils.easyCenterLayout/1	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen$UIGroup.getGroup/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen$UIGroup.access$0/0	<lampiro.screens.RosterScreen$UIGroup: java.util.Hashtable access$0()>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen$UIGroup.getGroup/1	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: void cutPattern()>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: void cutPattern()>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void cutPattern()>/it.yup.ui.UICanvas.unlock/1	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RegisterScreen: void login()>/javax.microedition.rms.RecordStore.deleteRecordStore/0	<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem,java.lang.String,java.lang.String)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UIUtils.easyCenterLayout/0	<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.util.Utils.is_email/0	<it.yup.util.Utils: boolean is_email(java.lang.String)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UICanvas.getUIImage/0	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UICanvas.getUIImage/1	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UICanvas.getUIImage/2	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UICanvas.getUIImage/3	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UICanvas.getUIImage/4	<it.yup.ui.UICanvas: javax.microedition.lcdui.Image getUIImage(java.lang.String)>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.getInstance/2	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.getInstance/3	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.getInstance/4	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xml.KXmlSerializer: void check(boolean)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.KXmlSerializer: void check(boolean)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.userhost/1	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.XMPPClient.access$2/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.XMPPClient.access$2/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener access$2(it.yup.xmpp.XMPPClient)>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>/it.yup.util.RMSIndex.access$0/0	<it.yup.util.RMSIndex: java.util.Vector access$0(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>/it.yup.util.RMSIndex.access$0/1	<it.yup.util.RMSIndex: java.util.Vector access$0(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>/it.yup.util.RMSIndex.access$1/0	<it.yup.util.RMSIndex: java.util.Vector access$1(it.yup.util.RMSIndex,int)>
<lampiro.screens.InnerMMScreen: void closeScreen()>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.InnerMMScreen: void closeScreen()>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.InnerMMScreen: void closeScreen()>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/it.yup.ui.UICanvas.display/0	<it.yup.ui.UICanvas: void display(javax.microedition.lcdui.Displayable)>
<lampiro.screens.KeyScreen: boolean isValid(int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.KXmlProcessor.parseDocument/0	<it.yup.xml.KXmlProcessor: it.yup.xml.Element parseDocument(org.xmlpull.v1.XmlPullParser)>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.BProcessor.toBinary/0	<it.yup.xml.BProcessor: byte[] toBinary(it.yup.xml.Element)>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.util.Utils.getStringUTF8/0	<it.yup.util.Utils: java.lang.String getStringUTF8(byte[])>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIAccordion: void setSubPanel(it.yup.ui.UIItem,java.util.Vector)>/it.yup.ui.UIAccordion$AccordionItem.access$0/0	<it.yup.ui.UIAccordion$AccordionItem: void access$0(it.yup.ui.UIAccordion$AccordionItem,java.util.Vector)>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$2/0	<it.yup.ui.UIAccordion$AccordionItem: java.util.Vector access$2(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$1/0	<it.yup.ui.UIAccordion$AccordionItem: it.yup.ui.UIVLayout access$1(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$2/0	<it.yup.ui.UIAccordion$AccordionItem: java.util.Vector access$2(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$1/0	<it.yup.ui.UIAccordion$AccordionItem: it.yup.ui.UIVLayout access$1(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion$AccordionItem.access$1/1	<it.yup.ui.UIAccordion$AccordionItem: it.yup.ui.UIVLayout access$1(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.ui.UIAccordion: void updateItemsColor()>/it.yup.ui.UIAccordion$AccordionItem.access$1/0	<it.yup.ui.UIAccordion$AccordionItem: it.yup.ui.UIVLayout access$1(it.yup.ui.UIAccordion$AccordionItem)>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xmpp.FTReceiver.access$0/0	<it.yup.xmpp.FTReceiver: it.yup.xmpp.XMPPClient access$0(it.yup.xmpp.FTReceiver)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/it.yup.xmlstream.BasicXmlStream.addEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: boolean makeRoll(int,it.yup.ui.UIScreen)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIScreen.isFreezed/0	<it.yup.ui.UIScreen: boolean isFreezed()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleError(it.yup.xml.Element)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleResult(it.yup.xml.Element)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.insert/0	<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.remove/1	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.remove/2	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.GroupsScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UIPanel: void setSelectedIndex(int)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Contact.addMessageToHistory/0	<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/3	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/4	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/5	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/6	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/7	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/8	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<lampiro.screens.ChatScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/0	<it.yup.ui.UIItem: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/1	<it.yup.ui.UIItem: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.util.MetaVector: int indexOf(java.lang.Object,int)>/java.util.Enumeration.nextElement/0	<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>
<it.yup.util.MetaVector: int lastIndexOf(java.lang.Object,int)>/java.util.Enumeration.nextElement/0	<it.yup.util.MetaVector$MultiVectorEnumeration: java.lang.Object nextElement()>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UITextField: void expand()>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.DataFormScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/java.util.Vector.copyInto/1	<java.util.Vector: void copyInto(java.lang.Object[])>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIScreen: void swap(int,int)>/java.util.Vector.setElementAt/0	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<it.yup.ui.UIScreen: void swap(int,int)>/java.util.Vector.setElementAt/1	<java.util.Vector: void setElementAt(java.lang.Object,int)>
<it.yup.transport.BaseChannel$Sender: void run()>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>/it.yup.ui.UIScreen.removePaintedItem/0	<it.yup.ui.UIScreen: void removePaintedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void move(int,int)>/java.util.Vector.removeElement/1	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void move(int,int)>/java.util.Vector.insertElementAt/1	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.removeElement/2	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.insertElementAt/2	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.removeElement/3	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.insertElementAt/3	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.CommandListScreen: boolean keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<it.yup.ui.UITextPanel: void setText(java.lang.String)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xmpp.packets.Message.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.xmpp.packets.Message.setBody/0	<it.yup.xmpp.packets.Message: void setBody(java.lang.String)>
<it.yup.xml.Element: void writeXml(it.yup.xml.Element,java.lang.String,java.io.OutputStream)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.lang.StringBuffer.delete/0	<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<lampiro.screens.RosterScreen$UIGroup: void access$5(lampiro.screens.RosterScreen$UIGroup,it.yup.xmpp.Contact)>/lampiro.screens.RosterScreen$UIGroup.removeContact/0	<lampiro.screens.RosterScreen$UIGroup: void removeContact(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.Group: void <init>(java.lang.String)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmlstream.Element: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmlstream.Element: void <init>()>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.<init>/2	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>()>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.XMPPClient: void <init>()>/it.yup.xmpp.Roster.<init>/0	<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/2	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/3	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/4	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/5	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/6	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/7	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/8	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/9	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/10	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RosterScreen: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.MemoryLogConsumer: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/2	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/3	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/4	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICheckbox.<init>/1	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICheckbox.<init>/2	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICheckbox.<init>/3	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/5	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/5	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.<init>/6	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/6	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.<init>/7	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/3	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/4	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/5	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/6	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/7	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/8	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/9	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/10	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/11	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/12	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/13	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/14	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/15	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/16	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/17	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/18	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/19	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/20	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/21	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/22	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/23	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/24	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/25	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/26	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.RosterScreen: void <init>()>/java.util.Hashtable.<init>/1	<java.util.Hashtable: void <init>()>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIMenu.<init>/2	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/27	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.<init>/28	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.<init>/0	<it.yup.ui.UIAccordion: void <init>()>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.<init>/1	<it.yup.ui.UIAccordion: void <init>()>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/1	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/2	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.<init>/3	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/1	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.<init>/2	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.Gauge.<init>/0	<javax.microedition.lcdui.Gauge: void <init>(java.lang.String,boolean,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/1	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.Command.<init>/2	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.screens.RegisterScreen$ItemCommandListener1.<init>/0	<it.yup.screens.RegisterScreen$ItemCommandListener1: void <init>(it.yup.screens.RegisterScreen,it.yup.screens.RegisterScreen$ItemCommandListener1)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.screens.RegisterScreen$ItemStateListener1.<init>/0	<it.yup.screens.RegisterScreen$ItemStateListener1: void <init>(it.yup.screens.RegisterScreen,it.yup.screens.RegisterScreen$ItemStateListener1)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.ui.Semaphore.<init>/0	<it.yup.ui.Semaphore: void <init>(long)>
<it.yup.ui.UICanvas: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.FTScreen: void <init>()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.FTScreen: void <init>()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.FTScreen: void <init>()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmpp.Config: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmpp.Config: void <init>()>/java.util.Hashtable.<init>/1	<java.util.Hashtable: void <init>(int)>
<it.yup.xmpp.Config: void <init>()>/it.yup.util.RMSIndex.<init>/0	<it.yup.util.RMSIndex: void <init>(java.lang.String)>
<it.yup.xmpp.IqManager: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.ui.UIEmoLabel: void initialize()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.Contact.getMessageHistory/0	<it.yup.xmpp.Contact: java.util.Vector getMessageHistory(java.lang.String)>
<it.yup.ui.UIScreen: boolean askRepaint()>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.ChatScreen: void askTopic()>/lampiro.screens.ChatScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.ChatScreen: void askTopic()>/lampiro.screens.ChatScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.ui.UIPanel: void updateChildren()>/it.yup.ui.UIPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UIPanel: void updateChildren()>/it.yup.ui.UIPanel.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.drawBorder/0	<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.drawPixel/0	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.drawPixel/1	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.drawPixel/2	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setDirty/1	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UILayout.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UILayout.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<lampiro.screens.ChatScreen: boolean updateConversation()>/lampiro.screens.ChatScreen.updateResConversation/0	<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.invalidateArea/0	<it.yup.ui.UIScreen: void invalidateArea(int,int,int,int)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.removePopup/0	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.getItemList/1	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.askRepaint/1	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<it.yup.ui.UIScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.removePopup/1	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.askRepaint/2	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/java.util.Vector.copyInto/0	<java.util.Vector: void copyInto(java.lang.Object[])>
<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.xmlstream.SocketStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.areMatching/0	<it.yup.xmlstream.BasicXmlStream: boolean areMatching(it.yup.xml.Element,it.yup.xmlstream.EventQuery)>
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void promotePacket(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.dispatchEvent/0	<it.yup.xmlstream.BasicXmlStream: void dispatchEvent(java.lang.String,java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void processFeatures(it.yup.xml.Element[])>/it.yup.xmlstream.BasicXmlStream.nextInitializer/0	<it.yup.xmlstream.BasicXmlStream: void nextInitializer()>
<lampiro.screens.AlbumScreen: void setupScreen()>/lampiro.screens.AlbumScreen.removeAll/0	<it.yup.ui.UIScreen: void removeAll()>
<lampiro.screens.AlbumScreen: void setupScreen()>/lampiro.screens.AlbumScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.FTScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.deleteAll/0	<javax.microedition.lcdui.Form: void deleteAll()>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/2	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/3	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/4	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/5	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.append/6	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.resetStorage/0	<it.yup.xmpp.Config: void resetStorage(boolean)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.resetStorage/1	<it.yup.xmpp.Config: void resetStorage(boolean)>
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/lampiro.screens.AddContactScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.deleteAll/0	<javax.microedition.lcdui.Form: void deleteAll()>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.removeCommand/0	<javax.microedition.lcdui.Form: void removeCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.removeCommand/1	<javax.microedition.lcdui.Form: void removeCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataResultScreen: void showCurrent()>/it.yup.screens.DataResultScreen.addCommand/1	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmpp.packets.Stanza.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmpp.packets.Stanza.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmpp.packets.Stanza.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.util.RMSIndex.load/0	<it.yup.util.RMSIndex: byte[] load(byte[])>
<lampiro.screens.AlbumScreen: void loadFiles()>/lampiro.screens.AlbumScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/it.yup.xmlstream.KXmlSerializer.getNamespace/0	<it.yup.xmlstream.KXmlSerializer: java.lang.String getNamespace()>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>/it.yup.xmlstream.KXmlSerializer.setPrefix/0	<it.yup.xmlstream.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/lampiro.screens.ShowMMScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/lampiro.screens.ShowMMScreen.setTitle/1	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ShowMMScreen: void init()>/lampiro.screens.ShowMMScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.ShowMMScreen: void init()>/lampiro.screens.ShowMMScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/lampiro.screens.ShowMMScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/lampiro.screens.DataResultScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/lampiro.screens.DataResultScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/lampiro.screens.ChatScreen.getLabelHeader/0	<lampiro.screens.ChatScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>
<lampiro.screens.RosterScreen: void toggleMenus()>/lampiro.screens.RosterScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.RosterScreen: void toggleMenus()>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void toggleMenus()>/lampiro.screens.RosterScreen.getSeparator/0	<lampiro.screens.RosterScreen: it.yup.ui.UIItem getSeparator()>
<lampiro.screens.RosterScreen: void toggleMenus()>/lampiro.screens.RosterScreen.keyPressed/0	<lampiro.screens.RosterScreen: boolean keyPressed(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.removeAll/0	<it.yup.ui.UIScreen: void removeAll()>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RegisterScreen: void placeWizard()>/lampiro.screens.RegisterScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.getSelectedIndex/0	<it.yup.ui.UIMenu: int getSelectedIndex()>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.getSelectedIndex/1	<it.yup.ui.UIMenu: int getSelectedIndex()>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.removeAll/0	<it.yup.ui.UIScreen: void removeAll()>
<lampiro.screens.RegisterScreen: void placeItems()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/4	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/5	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/6	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/7	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/8	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/9	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/10	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/11	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/12	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/13	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.append/14	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen.isFreezed/0	<it.yup.ui.UIScreen: boolean isFreezed()>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void cutPattern()>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void cutPattern()>/lampiro.screens.RosterScreen.replace/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void cutPattern()>/lampiro.screens.RosterScreen.replace/1	<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void cutPattern()>/lampiro.screens.RosterScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.RosterScreen: void cutPattern()>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.removePopup/0	<it.yup.ui.UIScreen: void removePopup(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.removeAll/0	<it.yup.ui.UIScreen: void removeAll()>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.append/2	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen.append/3	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void checkLogin()>/lampiro.screens.RegisterScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void checkLogin()>/lampiro.screens.RegisterScreen.indexOf/1	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void checkLogin()>/lampiro.screens.RegisterScreen.insert/0	<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void checkLogin()>/lampiro.screens.RegisterScreen.remove/0	<it.yup.ui.UIScreen: it.yup.ui.UIItem remove(int)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void chatWithSelected(java.lang.String)>/lampiro.screens.RosterScreen.chatWithContact/0	<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>/lampiro.screens.RosterScreen.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>/lampiro.screens.RosterScreen.indexOf/1	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/lampiro.screens.RosterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/lampiro.screens.RosterScreen.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/lampiro.screens.RosterScreen.getWidth/1	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/lampiro.screens.RosterScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.screens.RegisterScreen: void login()>/it.yup.screens.RegisterScreen.deleteAll/0	<javax.microedition.lcdui.Form: void deleteAll()>
<it.yup.screens.RegisterScreen: void login()>/it.yup.screens.RegisterScreen.append/0	<javax.microedition.lcdui.Form: int append(java.lang.String)>
<it.yup.screens.RegisterScreen: void login()>/it.yup.screens.RegisterScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.keyPressed/0	<it.yup.ui.UICanvas: void keyPressed(int)>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.keyPressed/1	<it.yup.ui.UICanvas: void keyPressed(int)>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.keyRepeated/0	<it.yup.ui.UICanvas: void keyRepeated(int)>
<it.yup.ui.UICanvas: void setTabs()>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.deleteAll/0	<javax.microedition.lcdui.Form: void deleteAll()>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.append/1	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.append/2	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.append/3	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.append/4	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.append/5	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.xml.KXmlSerializer: void check(boolean)>/it.yup.xml.KXmlSerializer.getNamespace/0	<it.yup.xml.KXmlSerializer: java.lang.String getNamespace()>
<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>/it.yup.xml.KXmlSerializer.setPrefix/0	<it.yup.xml.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/lampiro.screens.DataFormScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/lampiro.screens.DataFormScreen.setSelectedIndex/0	<it.yup.ui.UIScreen: void setSelectedIndex(int)>
<lampiro.screens.DataFormScreen: void createControls()>/lampiro.screens.DataFormScreen.setFreezed/1	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/lampiro.screens.DataFormScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UITextField.setMaxHeight/0	<it.yup.ui.UITextField: void setMaxHeight(int)>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UICombobox$UIComboScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UICombobox$UIComboScreen.setTitle/1	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UICombobox$UIComboScreen.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UICombobox$UIComboScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.InnerMMScreen: void startCapture()>/lampiro.screens.InnerMMScreen.removeCommand/0	<javax.microedition.lcdui.Canvas: void removeCommand(javax.microedition.lcdui.Command)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getScreen/0	<it.yup.ui.UIItem: it.yup.ui.UIScreen getScreen()>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setFirstVisible/0	<it.yup.ui.UIPanel: void setFirstVisible(int)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/it.yup.ui.UILabel.getTextWidth/0	<it.yup.ui.UILabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/it.yup.ui.UILabel.getTextWidth/1	<it.yup.ui.UILabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.AlbumScreen: int getCount(int)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element pullDocumentStart(org.xmlpull.v1.XmlPullParser)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.xml.Element.removeChild/0	<it.yup.xml.Element: void removeChild(it.yup.xml.Element)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element load(java.io.DataInputStream)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen$UIGroup: void toggleMenus()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UICanvas: void lock()>/it.yup.ui.Semaphore.acquire/0	<it.yup.ui.Semaphore: void acquire()>
<it.yup.ui.UICanvas: void unlock()>/it.yup.ui.Semaphore.release/0	<it.yup.ui.Semaphore: void release()>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$UIGroup: void <clinit>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String,int)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DebugScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addElement/2	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addElement/3	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DebugScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.OptionsScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void <init>(lampiro.screens.GatewayRegisterScreen)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleError(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen$GatewayRegistrationHandler: void handleResult(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.MMScreen: void showCamera()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MMScreen: void showCamera()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen$ForwardScreen: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SplashScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.RosterScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void <init>(lampiro.screens.RosterScreen$UIGroup,int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataResultScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.MessageComposerScreen: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable,int)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.MessageComposerScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmpp.Contact: it.yup.xml.Element store()>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$RegisterWaitScreen: void <init>(lampiro.screens.RosterScreen)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SubscriptionConfirmAlert: void <init>(it.yup.xmpp.Contact,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.SubscriptionConfirmAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addText/1	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DeleteContactAlert: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setParentMenu/0	<it.yup.ui.UIMenu: void setParentMenu(it.yup.ui.UIMenu)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIMenu.setParentMenu/0	<it.yup.ui.UIMenu: void setParentMenu(it.yup.ui.UIMenu)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen: void itemStateChanged(javax.microedition.lcdui.Item)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xmpp.DataFormListener)>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UITextField: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UITextPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UICombobox: void setDirty(boolean)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UITextField: void setDirty(boolean)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UITextField: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UITextField: void setDirty(boolean)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void <init>(javax.microedition.media.Player,javax.microedition.media.Control,int,java.lang.String)>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/12	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/13	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/14	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/15	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/16	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/17	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/18	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/19	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/20	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/21	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/22	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/23	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/24	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/25	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/26	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/27	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/28	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void <init>()>/it.yup.util.ResourceManager.getString/29	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.InnerMMScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.OptionsScreen: void saveOptions()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/4	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/2	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/7	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/9	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/10	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/11	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/12	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/13	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/14	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.KeyScreen: boolean keyPressed(int)>/it.yup.util.ResourceManager.getString/15	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.xmpp.Task.getLabel/0	<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getLabel()>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.TaskListScreen: void <init>(it.yup.xmpp.Task[])>/it.yup.xmpp.Task.getLabel/0	<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getLabel()>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.CommandListScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.AlbumScreen: void updateChildren()>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/it.yup.xmpp.Config.getData/0	<it.yup.xmpp.Config: byte[] getData(byte[])>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xmpp.Config.setData/0	<it.yup.xmpp.Config: void setData(byte[],byte[])>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.RosterScreen: java.util.Vector getOrderedContacts()>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/lampiro.screens.RosterScreen.updateContact/0	<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/lampiro.screens.RosterScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.MUCScreen: void handlePresence(it.yup.xmpp.MUC,it.yup.xml.Element,java.lang.String)>/it.yup.ui.UICanvas.askRepaint/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.setImg/0	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.setImg/1	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.setImg/2	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIButton.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void <init>()>/it.yup.ui.UIPanel.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setFont/1	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setFocusable/2	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setFocusable/3	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setFocusable/4	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICombobox.append/1	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedIndex/0	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setText/1	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UITextField.setText/2	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICombobox.setSelectedIndex/1	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/2	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIButton.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIHLayout.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIHLayout.setBg_color/0	<it.yup.ui.UILayout: void setBg_color(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setSepSize/0	<it.yup.ui.UIAccordion: void setSepSize(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setSepColor/0	<it.yup.ui.UIAccordion: void setSepColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelColor/0	<it.yup.ui.UIAccordion: void setLabelColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelGradientColor/0	<it.yup.ui.UIAccordion: void setLabelGradientColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelGradientSelectedColor/0	<it.yup.ui.UIAccordion: void setLabelGradientSelectedColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelSelectedColor/0	<it.yup.ui.UIAccordion: void setLabelSelectedColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setMaxHeight/1	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setSepSize/1	<it.yup.ui.UIAccordion: void setSepSize(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setSepColor/1	<it.yup.ui.UIAccordion: void setSepColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelColor/1	<it.yup.ui.UIAccordion: void setLabelColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelGradientColor/1	<it.yup.ui.UIAccordion: void setLabelGradientColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelGradientSelectedColor/1	<it.yup.ui.UIAccordion: void setLabelGradientSelectedColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setLabelSelectedColor/1	<it.yup.ui.UIAccordion: void setLabelSelectedColor(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setModal/1	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/1	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setFocusable/2	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.ui.UILabel.setBg_color/2	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/0	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/1	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/2	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.append/3	<javax.microedition.lcdui.ChoiceGroup: int append(java.lang.String,javax.microedition.lcdui.Image)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.StringItem.setLayout/0	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.StringItem.setDefaultCommand/0	<javax.microedition.lcdui.StringItem: void setDefaultCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.StringItem.setItemCommandListener/0	<javax.microedition.lcdui.StringItem: void setItemCommandListener(javax.microedition.lcdui.ItemCommandListener)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.setSelectedFlags/0	<javax.microedition.lcdui.ChoiceGroup: void setSelectedFlags(boolean[])>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.ChoiceGroup.setSelectedIndex/0	<javax.microedition.lcdui.ChoiceGroup: void setSelectedIndex(int,boolean)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.setString/0	<javax.microedition.lcdui.TextField: void setString(java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.setString/1	<javax.microedition.lcdui.TextField: void setString(java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/javax.microedition.lcdui.TextField.setString/2	<javax.microedition.lcdui.TextField: void setString(java.lang.String)>
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UIItem: boolean askRepaint()>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.packets.Message.getBody/0	<it.yup.xmpp.packets.Message: java.lang.String getBody()>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.packets.Message.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.packets.Message.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.packets.Message.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.packets.Message.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xmpp.packets.Message.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void updateExistingPresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIScreen: boolean askRepaint()>/it.yup.ui.UICanvas.askRepaint/0	<it.yup.ui.UICanvas: void askRepaint(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIScreen.invalidatePopups/0	<it.yup.ui.UIScreen: void invalidatePopups(it.yup.ui.UIMenu,int,int,int,int)>
<lampiro.screens.ChatScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.getGroups/0	<it.yup.xmpp.Contact: java.lang.String[] getGroups()>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/0	<it.yup.xmpp.Contact: boolean isVisible()>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/1	<it.yup.xmpp.Contact: boolean isVisible()>
<lampiro.screens.ChatScreen: boolean isMyPacket(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.ChatScreen: boolean needDisplay()>/it.yup.xmpp.Contact.getHistoryLength/0	<it.yup.xmpp.Contact: int getHistoryLength(java.lang.String)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/java.util.Vector.copyInto/0	<java.util.Vector: void copyInto(java.lang.Object[])>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.setOpenedState/0	<it.yup.ui.UIMenu: void setOpenedState(boolean)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getAbsoluteX/0	<it.yup.ui.UIMenu: int getAbsoluteX()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getAbsoluteY/0	<it.yup.ui.UIMenu: int getAbsoluteY()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getParentMenu/0	<it.yup.ui.UIMenu: it.yup.ui.UIMenu getParentMenu()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getParentMenu/1	<it.yup.ui.UIMenu: it.yup.ui.UIMenu getParentMenu()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UICanvas.getGameAction/1	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.keyPressed/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.isAutoClose/0	<it.yup.ui.UIMenu: boolean isAutoClose()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.setOpenedState/1	<it.yup.ui.UIMenu: void setOpenedState(boolean)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.getAbsoluteY/1	<it.yup.ui.UIMenu: int getAbsoluteY()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.setOpenedState/2	<it.yup.ui.UIMenu: void setOpenedState(boolean)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.setSubmenu/1	<it.yup.ui.UIMenu: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.isAutoClose/1	<it.yup.ui.UIMenu: boolean isAutoClose()>
<it.yup.xmlstream.SocketStream: void tryToSend()>/it.yup.transport.SocketChannel.sendContent/0	<it.yup.transport.SocketChannel: void sendContent(byte[])>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.transport.SocketChannel.getReader/0	<it.yup.transport.SocketChannel: it.yup.transport.SocketChannel$UTFReader getReader()>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.xml.KXmlParser.setInput/0	<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.xml.KXmlParser.defineEntityReplacementText/0	<it.yup.xml.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<it.yup.xmlstream.SocketStream: void restart()>/it.yup.transport.SocketChannel.sendContent/0	<it.yup.transport.SocketChannel: void sendContent(byte[])>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(it.yup.ui.UILabel)>
<lampiro.screens.AddContactScreen: void getGateways()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.setPrefix/0	<it.yup.xmlstream.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.startTag/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.attribute/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.text/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.endTag/0	<it.yup.xmlstream.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>
<it.yup.xmlstream.Element: void write(org.xmlpull.v1.XmlSerializer)>/org.xmlpull.v1.XmlSerializer.flush/0	<it.yup.xmlstream.KXmlSerializer: void flush()>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/it.yup.ui.UICombobox.removeAll/0	<it.yup.ui.UICombobox: void removeAll()>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/it.yup.ui.UICombobox.append/1	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIPanel.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.Contact.getAllPresences/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence[] getAllPresences()>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.Contact.getPresence/1	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.Contact.getPrintableName/1	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIPanel.removeItemAt/0	<it.yup.ui.UIPanel: void removeItemAt(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIPanel.removeItemAt/1	<it.yup.ui.UIPanel: void removeItemAt(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.RosterScreen: void closeWaitingScreen()>/lampiro.screens.RosterScreen$WaitScreen.stopWaiting/0	<lampiro.screens.RosterScreen$RegisterWaitScreen: void stopWaiting()>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.StringItem.setText/0	<javax.microedition.lcdui.StringItem: void setText(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIMenu.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIItem.setSubmenu/1	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIItem.setSubmenu/2	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIItem.setSubmenu/3	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIItem.setSubmenu/4	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIPanel.addItem/3	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIPanel.addItem/4	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UITextPanel.getText/0	<it.yup.ui.UITextPanel: java.lang.String getText()>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UIPanel.removeAllItems/1	<it.yup.ui.UIPanel: void removeAllItems()>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void addToPanel(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen: void setColor(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.xmpp.IqManager: void handleAnswer(it.yup.xml.Element,boolean)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getHeight/1	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex$Comparator.compare/0	<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>
<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>/java.util.Vector.insertElementAt/1	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.util.RMSIndex: int get_offset(java.util.Vector,byte[],boolean)>/it.yup.util.RMSIndex$Comparator.compare/0	<it.yup.util.RMSIndex$DefaultUTF8Comparator: int compare(byte[],byte[])>
<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.CommandExecutor.sendPacket/0	<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>
<lampiro.screens.RosterScreen: boolean askRepaint()>/lampiro.screens.RosterScreen.updateHeader/0	<lampiro.screens.RosterScreen: void updateHeader()>
<lampiro.screens.RosterScreen: boolean askRepaint()>/it.yup.ui.UIScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.AlbumScreen: void setupScreen()>/lampiro.screens.AlbumScreen.loadFiles/0	<lampiro.screens.AlbumScreen: void loadFiles()>
<it.yup.screens.RegisterScreen: void placeItems()>/it.yup.screens.RegisterScreen.checkLogin/0	<it.yup.screens.RegisterScreen: void checkLogin()>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.setDefaults/0	<it.yup.xmpp.Config: void setDefaults()>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.setDefaults/1	<it.yup.xmpp.Config: void setDefaults()>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.Config.setDefaults/2	<it.yup.xmpp.Config: void setDefaults()>
<lampiro.screens.RosterScreen$IQResultListener1: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$IQResultListener1)>/lampiro.screens.RosterScreen$IQResultListener1.<init>/0	<lampiro.screens.RosterScreen$IQResultListener1: void <init>(lampiro.screens.RosterScreen)>
<it.yup.screens.ContactInfoScreen$1: void <init>(it.yup.screens.ContactInfoScreen)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.AddContactScreen$IQResultListener1: void <init>(lampiro.screens.AddContactScreen,lampiro.screens.AddContactScreen$IQResultListener1)>/lampiro.screens.AddContactScreen$IQResultListener1.<init>/0	<lampiro.screens.AddContactScreen$IQResultListener1: void <init>(lampiro.screens.AddContactScreen)>
<lampiro.screens.AddContactScreen$IQResultListener2: void <init>(lampiro.screens.AddContactScreen,lampiro.screens.AddContactScreen$IQResultListener2)>/lampiro.screens.AddContactScreen$IQResultListener2.<init>/0	<lampiro.screens.AddContactScreen$IQResultListener2: void <init>(lampiro.screens.AddContactScreen)>
<it.yup.screens.OptionsScreen$1: void <init>(it.yup.screens.OptionsScreen)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.FTSender$IQResultListener1: void <init>(it.yup.xmpp.FTSender,it.yup.xmpp.FTSender$IQResultListener1)>/it.yup.xmpp.FTSender$IQResultListener1.<init>/0	<it.yup.xmpp.FTSender$IQResultListener1: void <init>(it.yup.xmpp.FTSender)>
<it.yup.xmpp.FTSender$PacketListener1: void <init>(it.yup.xmpp.FTSender,it.yup.xmpp.FTSender$PacketListener1)>/it.yup.xmpp.FTSender$PacketListener1.<init>/0	<it.yup.xmpp.FTSender$PacketListener1: void <init>(it.yup.xmpp.FTSender)>
<it.yup.xmpp.packets.Stanza: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/it.yup.xmlstream.KXmlSerializer.writeEscaped/0	<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.Roster.updateGateways/0	<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>
<it.yup.xmpp.Roster$IQResultListener1: void <init>(it.yup.xmpp.Roster,boolean,it.yup.xmpp.Roster$IQResultListener1)>/it.yup.xmpp.Roster$IQResultListener1.<init>/0	<it.yup.xmpp.Roster$IQResultListener1: void <init>(it.yup.xmpp.Roster,boolean)>
<it.yup.xmpp.Roster$IQResultListener3: void <init>(it.yup.xmpp.Roster,boolean,java.lang.String,it.yup.xmpp.Roster$IQResultListener3)>/it.yup.xmpp.Roster$IQResultListener3.<init>/0	<it.yup.xmpp.Roster$IQResultListener3: void <init>(it.yup.xmpp.Roster,boolean,java.lang.String)>
<lampiro.screens.SplashScreen$1: void <init>(lampiro.screens.SplashScreen)>/java.util.TimerTask.<init>/0	<java.util.TimerTask: void <init>()>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.push/0	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.peekType/0	<it.yup.xmlstream.KXmlParser: int peekType()>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.pushEntity/0	<it.yup.xmlstream.KXmlParser: void pushEntity()>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.parseStartTag/0	<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.parseEndTag/0	<it.yup.xmlstream.KXmlParser: void parseEndTag()>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.pushText/0	<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/it.yup.xmlstream.KXmlParser.parseLegacy/0	<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>
<it.yup.xmlstream.KXmlParser: int peekType()>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int peekType()>/it.yup.xmlstream.KXmlParser.peek/1	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmpp.XMPPClient$MessageHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$MessageHandler)>/it.yup.xmpp.XMPPClient$MessageHandler.<init>/0	<it.yup.xmpp.XMPPClient$MessageHandler: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$PresenceHandler)>/it.yup.xmpp.XMPPClient$PresenceHandler.<init>/0	<it.yup.xmpp.XMPPClient$PresenceHandler: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$DiscoHandler)>/it.yup.xmpp.XMPPClient$DiscoHandler.<init>/0	<it.yup.xmpp.XMPPClient$DiscoHandler: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$DataFormHandler: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$DataFormHandler)>/it.yup.xmpp.XMPPClient$DataFormHandler.<init>/0	<it.yup.xmpp.XMPPClient$DataFormHandler: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$PacketListener1: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$PacketListener1)>/it.yup.xmpp.XMPPClient$PacketListener1.<init>/0	<it.yup.xmpp.XMPPClient$PacketListener1: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.xmpp.XMPPClient$1: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.XMPPClient$TimerTask1: void <init>(it.yup.xmpp.XMPPClient,it.yup.xmpp.XMPPClient$TimerTask1)>/it.yup.xmpp.XMPPClient$TimerTask1.<init>/0	<it.yup.xmpp.XMPPClient$TimerTask1: void <init>(it.yup.xmpp.XMPPClient)>
<it.yup.screens.RosterScreen$AdHocCommandsHandler: void <init>(it.yup.screens.RosterScreen,it.yup.screens.RosterScreen$AdHocCommandsHandler)>/it.yup.screens.RosterScreen$AdHocCommandsHandler.<init>/0	<it.yup.screens.RosterScreen$AdHocCommandsHandler: void <init>(it.yup.screens.RosterScreen)>
<lampiro.screens.ShowMMScreen$1: void <init>(lampiro.screens.ShowMMScreen)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.screens.MessageComposerScreen$ItemCommandListener1: void <init>(it.yup.screens.MessageComposerScreen,it.yup.screens.MessageComposerScreen$ItemCommandListener1)>/it.yup.screens.MessageComposerScreen$ItemCommandListener1.<init>/0	<it.yup.screens.MessageComposerScreen$ItemCommandListener1: void <init>(it.yup.screens.MessageComposerScreen)>
<it.yup.screens.MessageComposerScreen$ItemStateListener1: void <init>(it.yup.screens.MessageComposerScreen,it.yup.screens.MessageComposerScreen$ItemStateListener1)>/it.yup.screens.MessageComposerScreen$ItemStateListener1.<init>/0	<it.yup.screens.MessageComposerScreen$ItemStateListener1: void <init>(it.yup.screens.MessageComposerScreen)>
<it.yup.tests.XMPPTestClient$Listener: void <init>(it.yup.tests.XMPPTestClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.tests.XMPPTestClient$Echoer: void <init>(it.yup.tests.XMPPTestClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xmpp.CommandExecutor.sendPacket/0	<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>
<it.yup.xmlstream.Initializer: void <init>(java.lang.String,boolean)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/lampiro.screens.ChatScreen.checkSize/0	<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>
<lampiro.screens.RegisterScreen: void placeItems()>/lampiro.screens.RegisterScreen.checkLogin/0	<lampiro.screens.RegisterScreen: void checkLogin()>
<lampiro.screens.MUCComposer: void <init>(it.yup.xmpp.MUC)>/lampiro.screens.SimpleComposerScreen.<init>/0	<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void <init>(lampiro.screens.ChatScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.ChatScreen$1: void <init>(lampiro.screens.ChatScreen)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<lampiro.screens.RosterScreen: void cutPattern()>/lampiro.screens.RosterScreen.filterContacts/0	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>/lampiro.screens.RosterScreen.getSelectedUIContact/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIContact getSelectedUIContact()>
<lampiro.screens.RosterScreen: void chatWithSelected(java.lang.String)>/lampiro.screens.RosterScreen.getSelectedContact/0	<lampiro.screens.RosterScreen: it.yup.xmpp.Contact getSelectedContact()>
<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIGroup getSelectedUIGroup()>/lampiro.screens.RosterScreen.getAccordion/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>
<lampiro.screens.RosterScreen: void openContactMenu()>/lampiro.screens.RosterScreen.getAccordion/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>
<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIContact getSelectedUIContact()>/lampiro.screens.RosterScreen.getAccordion/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>
<lampiro.screens.RosterScreen$RegisterHandler: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$RegisterHandler)>/lampiro.screens.RosterScreen$RegisterHandler.<init>/0	<lampiro.screens.RosterScreen$RegisterHandler: void <init>(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$AdHocCommandsHandler: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$AdHocCommandsHandler)>/lampiro.screens.RosterScreen$AdHocCommandsHandler.<init>/0	<lampiro.screens.RosterScreen$AdHocCommandsHandler: void <init>(lampiro.screens.RosterScreen)>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.push/0	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.peekType/0	<it.yup.xml.KXmlParser: int peekType()>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.pushEntity/0	<it.yup.xml.KXmlParser: void pushEntity()>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.parseStartTag/0	<it.yup.xml.KXmlParser: void parseStartTag(boolean)>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.parseEndTag/0	<it.yup.xml.KXmlParser: void parseEndTag()>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.pushText/0	<it.yup.xml.KXmlParser: void pushText(int,boolean)>
<it.yup.xml.KXmlParser: void nextImpl()>/it.yup.xml.KXmlParser.parseLegacy/0	<it.yup.xml.KXmlParser: int parseLegacy(boolean)>
<it.yup.xml.KXmlParser: int peekType()>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int peekType()>/it.yup.xml.KXmlParser.peek/1	<it.yup.xml.KXmlParser: int peek(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener,lampiro.screens.RosterScreen$FileReceiveScreen)>/lampiro.screens.RosterScreen$FileReceiveScreen.<init>/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmlstream.SASLAuthenticator$PacketListener1: void <init>(it.yup.xmlstream.SASLAuthenticator,it.yup.xmlstream.SASLAuthenticator$PacketListener1)>/it.yup.xmlstream.SASLAuthenticator$PacketListener1.<init>/0	<it.yup.xmlstream.SASLAuthenticator$PacketListener1: void <init>(it.yup.xmlstream.SASLAuthenticator)>
<it.yup.xmlstream.SASLAuthenticator$PacketListener2: void <init>(it.yup.xmlstream.SASLAuthenticator,it.yup.xmlstream.SASLAuthenticator$PacketListener2)>/it.yup.xmlstream.SASLAuthenticator$PacketListener2.<init>/0	<it.yup.xmlstream.SASLAuthenticator$PacketListener2: void <init>(it.yup.xmlstream.SASLAuthenticator)>
<it.yup.xmlstream.SASLAuthenticator$PacketListener3: void <init>(it.yup.xmlstream.SASLAuthenticator,it.yup.xmlstream.SASLAuthenticator$PacketListener3)>/it.yup.xmlstream.SASLAuthenticator$PacketListener3.<init>/0	<it.yup.xmlstream.SASLAuthenticator$PacketListener3: void <init>(it.yup.xmlstream.SASLAuthenticator)>
<lampiro.screens.RosterScreen$Thread1: void <init>(lampiro.screens.RosterScreen,java.lang.String,int,lampiro.screens.RosterScreen$Thread1)>/lampiro.screens.RosterScreen$Thread1.<init>/0	<lampiro.screens.RosterScreen$Thread1: void <init>(lampiro.screens.RosterScreen,java.lang.String,int)>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.findItem/0	<it.yup.ui.UICanvas: it.yup.ui.UIItem findItem(int,int,it.yup.ui.UIScreen)>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UICanvas.change/0	<it.yup.ui.UICanvas: void change(int)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.setShowAction/0	<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.setShowAction/1	<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.setShowAction/2	<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen.setShowAction/3	<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>
<it.yup.xml.KXmlSerializer: void check(boolean)>/it.yup.xml.KXmlSerializer.writeEscaped/0	<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>
<com.jcraft.jzlib.Adler32: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.jcraft.jzlib.Inflate: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.jcraft.jzlib.Deflate: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.DataFormScreen: void createControls()>/lampiro.screens.DataFormScreen.addDesc/0	<lampiro.screens.DataFormScreen: void addDesc()>
<com.jcraft.jzlib.FilterInputStream: void <init>(java.io.InputStream)>/java.io.InputStream.<init>/0	<java.io.InputStream: void <init>()>
<it.yup.ui.UIGauge$Ticker: void <init>(it.yup.ui.UIGauge,it.yup.ui.UIGauge$Ticker)>/it.yup.ui.UIGauge$Ticker.<init>/0	<it.yup.ui.UIGauge$Ticker: void <init>(it.yup.ui.UIGauge)>
<it.yup.transport.SocketChannel$Runnable1: void <init>(it.yup.transport.SocketChannel,it.yup.transport.SocketChannel$Runnable1)>/it.yup.transport.SocketChannel$Runnable1.<init>/0	<it.yup.transport.SocketChannel$Runnable1: void <init>(it.yup.transport.SocketChannel)>
<it.yup.transport.SocketChannel$TimerTask1: void <init>(it.yup.transport.SocketChannel,it.yup.transport.SocketChannel$TimerTask1)>/it.yup.transport.SocketChannel$TimerTask1.<init>/0	<it.yup.transport.SocketChannel$TimerTask1: void <init>(it.yup.transport.SocketChannel)>
<lampiro.screens.ContactInfoScreen: void addToPanel(it.yup.ui.UIItem)>/lampiro.screens.ContactInfoScreen.setColor/0	<lampiro.screens.ContactInfoScreen: void setColor(it.yup.ui.UIItem)>
<lampiro.screens.ContactInfoScreen$1: void <init>(lampiro.screens.ContactInfoScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.util.MetaVector$MultiVectorEnumeration: void checkNext()>/it.yup.util.MetaVector$MultiVectorEnumeration.checkNext/0	<it.yup.util.MetaVector$MultiVectorEnumeration: void checkNext()>
<it.yup.xmpp.IqManager: void handleAnswer(it.yup.xml.Element,boolean)>/it.yup.xmpp.IqManager.purge/0	<it.yup.xmpp.IqManager: void purge()>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setItemsColor/0	<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.invalidateItems/0	<it.yup.ui.UIAccordion: void invalidateItems(int)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.invalidateItems/0	<it.yup.ui.UIAccordion: void invalidateItems(int)>
<it.yup.ui.UIAccordion: void updateItemsColor()>/it.yup.ui.UIAccordion.setItemsColor/0	<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void <init>(it.yup.xmpp.FTReceiver$OpenListener,it.yup.xmpp.FTReceiver$OpenListener$PacketListener1)>/it.yup.xmpp.FTReceiver$OpenListener$PacketListener1.<init>/0	<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void <init>(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void <init>(it.yup.xmpp.FTReceiver$OpenListener,it.yup.xmpp.FTReceiver$OpenListener$PacketListener2)>/it.yup.xmpp.FTReceiver$OpenListener$PacketListener2.<init>/0	<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void <init>(it.yup.xmpp.FTReceiver$OpenListener)>
<it.yup.util.RMSIndex: it.yup.util.RMSIndex$Item get_item(java.util.Vector,byte[],boolean)>/it.yup.util.RMSIndex.get_offset/0	<it.yup.util.RMSIndex: int get_offset(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex$Item: void <init>(it.yup.util.RMSIndex)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.deleteSplittedRecords/0	<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.physicalWrite/0	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/it.yup.util.RMSIndex.physicalWrite/0	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/it.yup.util.RMSIndex.physicalWrite/1	<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>
<it.yup.util.RMSIndex: void sorted_insert(java.util.Vector,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.get_offset/0	<it.yup.util.RMSIndex: int get_offset(java.util.Vector,byte[],boolean)>
<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.loadChunk/0	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.loadChunk/1	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.saveChunk/0	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>/it.yup.util.RMSIndex.saveChunk/1	<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>
<it.yup.util.RMSIndex$DefaultUTF8Comparator: void <init>(it.yup.util.RMSIndex,it.yup.util.RMSIndex$DefaultUTF8Comparator)>/it.yup.util.RMSIndex$DefaultUTF8Comparator.<init>/0	<it.yup.util.RMSIndex$DefaultUTF8Comparator: void <init>(it.yup.util.RMSIndex)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element.<init>/0	<it.yup.xmlstream.Element: void <init>()>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>/java.io.IOException.<init>/0	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: int[] untag(java.io.InputStream)>/java.io.IOException.<init>/1	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: int unlen(java.io.InputStream)>/java.io.IOException.<init>/0	<java.io.IOException: void <init>()>
<it.yup.xml.BProcessor: int unlen(java.io.InputStream)>/java.io.IOException.<init>/1	<java.io.IOException: void <init>()>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.lang.StringBuilder.<init>/4	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void askTopic()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.SocketStream: void restart()>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.xmlstream.SocketStream: void restart()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.FTScreen: void fillScreen()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Config: void loadFromStorage()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AddContactScreen: void getGateways()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void populateRosterCombo()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlSerializer: void writeEscaped(java.lang.String,int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void nextImpl()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void placeWizard()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void exception(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void nextImpl()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.DataFormScreen: void createControls()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.screens.DataFormScreen: void createControls()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlSerializer: void writeEscaped(java.lang.String,int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void fillForm()>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.transport.SocketChannel$UTFReader: int getByte()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.LampiroMidlet: void destroyApp(boolean)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen$UIGroup.getGroup/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.lock/0	<it.yup.ui.UICanvas: void lock()>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.unlock/0	<it.yup.ui.UICanvas: void unlock()>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIUtils: it.yup.ui.UIHLayout easyCenterLayout(it.yup.ui.UIItem,int)>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<it.yup.xmpp.MUC: void <init>(java.lang.String,java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient$XmppListener.commandExecuted/0	<it.yup.screens.RosterScreen: void commandExecuted(java.lang.Object)>
<it.yup.xmpp.SimpleDataFormExecutor: void display_internal()>/it.yup.xmpp.XMPPClient$XmppListener.handleDataForm/0	<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>
<it.yup.xmpp.SimpleDataFormExecutor: void display_internal()>/it.yup.xmpp.XMPPClient$XmppListener.handleDataForm/1	<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.FTSender$FTSEventHandler.sessionInitated/0	<lampiro.screens.SendMMScreen$UploadHandler: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIHLayout.getItem/0	<it.yup.ui.UILayout: it.yup.ui.UIItem getItem(int)>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.MUCScreen: boolean keyPressed(int)>/it.yup.ui.UIPanel.getSelectedIndex/0	<it.yup.ui.UIPanel: int getSelectedIndex()>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element clone()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.Element: it.yup.xmlstream.Element clone()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<it.yup.util.MetaVector: void addElement(java.lang.Object)>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UITextField: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIPanel: void removeItemAt(int)>/java.util.Vector.removeElementAt/0	<it.yup.util.MetaVector: void removeElementAt(int)>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/java.util.Vector.insertElementAt/0	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIPanel: void removeAllItems()>/java.util.Vector.removeAllElements/0	<it.yup.util.MetaVector: void removeAllElements()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.Contact.getPresence/1	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.setWidth/0	<it.yup.ui.UIItem: void setWidth(int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient$XmppListener.commandExecuted/0	<it.yup.screens.RosterScreen: void commandExecuted(java.lang.Object)>
<it.yup.xmpp.CommandExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient$XmppListener.commandExecuted/1	<it.yup.screens.RosterScreen: void commandExecuted(java.lang.Object)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient$XmppListener.handleDataForm/0	<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient$XmppListener.handleDataForm/1	<it.yup.screens.RosterScreen: java.lang.Object handleDataForm(it.yup.xmpp.packets.DataForm,byte,it.yup.xmpp.DataFormListener,int)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xmpp.XMPPClient$XmppListener.showCommand/0	<it.yup.screens.RosterScreen: void showCommand(java.lang.Object)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UITextField: void setDirty(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UITextField: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.DataFormListener.execute/0	<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.GroupsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<it.yup.ui.UIScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.DataFormScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.TaskListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setBg_color/2	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFg_color/2	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.insertItemAt/1	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.removeItem/0	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UIPanel.insertItemAt/2	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.KeyScreen: void checkKeys()>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.xmpp.Roster$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient$XmppListener.rosterRetrieved/0	<it.yup.screens.RosterScreen: void rosterRetrieved()>
<it.yup.xmlstream.SocketStream: void run()>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UICombobox: void setDirty(boolean)>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void <init>(java.lang.String,it.yup.ui.UIAccordion)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.util.ResourceManager: void <init>(java.lang.String,java.lang.String)>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.RosterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/6	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.ui.UICanvas.setQwerty/0	<it.yup.ui.UICanvas: void setQwerty(boolean)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RosterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.ui.UICanvas: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/it.yup.xmlstream.Element._parse/0	<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>
<it.yup.xmlstream.Element: void _parse(org.xmlpull.v1.XmlPullParser)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<lampiro.screens.ChatScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ChatScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/it.yup.ui.UIHLayout.getHeight/1	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.xmlstream.SocketStream: void restart()>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.SocketStream: void restart()>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xmlstream.SocketStream: void restart()>/java.lang.StringBuffer.append/2	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIMenu.removeAll/0	<it.yup.ui.UIMenu: void removeAll()>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIButton.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIButton.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIPanel.getSelectedIndex/0	<it.yup.ui.UIPanel: int getSelectedIndex()>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.util.RMSIndex.load/0	<it.yup.util.RMSIndex: byte[] load(byte[])>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.Config: void loadFromStorage()>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen$1.start/0	<java.lang.Thread: void start()>
<it.yup.screens.RegisterScreen: void login()>/it.yup.screens.RegisterScreen$1.start/0	<java.lang.Thread: void start()>
<lampiro.screens.DataFormScreen: void fillForm()>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<lampiro.screens.DataFormScreen: void fillForm()>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<lampiro.screens.InnerMMScreen: void startCapture()>/lampiro.screens.InnerMMScreen$1.start/0	<java.lang.Thread: void start()>
<it.yup.util.RMSIndex: void join(it.yup.util.RMSIndex$Item,it.yup.util.RMSIndex$Item)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.util.Date.<init>/0	<java.util.Date: void <init>(long)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/java.lang.String.<init>/0	<java.lang.String: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xml.Element.<init>/1	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.Element.<init>/0	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.Element.<init>/1	<it.yup.xml.Element: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIPanel.<init>/0	<it.yup.ui.UIPanel: void <init>(boolean,boolean)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIGauge.<init>/0	<it.yup.ui.UIGauge: void <init>(java.lang.String,boolean,int,int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<it.yup.xmpp.Config: void loadFromStorage()>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.xmpp.Config: void loadFromStorage()>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/it.yup.xmpp.packets.DataForm$Field.<init>/0	<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.<init>/0	<it.yup.xmpp.packets.Message: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.screens.DataResultScreen: void showCurrent()>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<it.yup.xmlstream.KXmlSerializer: void check(boolean)>/java.lang.IllegalStateException.<init>/0	<java.lang.IllegalStateException: void <init>(java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>/org.xmlpull.v1.XmlPullParserException.<init>/0	<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>
<it.yup.xmlstream.KXmlParser: java.lang.String get(int)>/java.lang.String.<init>/0	<java.lang.String: void <init>(char[],int,int)>
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/it.yup.xmlstream.SocketStream.<init>/0	<it.yup.xmlstream.SocketStream: void <init>()>
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/it.yup.transport.SocketChannel.<init>/0	<it.yup.transport.SocketChannel: void <init>(java.lang.String,it.yup.transport.TransportListener)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.lang.String.<init>/0	<java.lang.String: void <init>(byte[])>
<it.yup.screens.RosterScreen: void chatWithSelected(boolean)>/it.yup.screens.ChatScreen.<init>/0	<it.yup.screens.ChatScreen: void <init>(it.yup.xmpp.Contact)>
<it.yup.screens.RosterScreen: void chatWithSelected(boolean)>/it.yup.screens.SimpleComposerScreen.<init>/0	<it.yup.screens.SimpleComposerScreen: void <init>(javax.microedition.lcdui.Displayable,it.yup.xmpp.Contact)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UITextField.<init>/2	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIMenu.<init>/1	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UILabel.<init>/2	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/java.util.Date.<init>/0	<java.util.Date: void <init>()>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.<init>/0	<it.yup.ui.UIEmoLabel: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UITextField.<init>/1	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RegisterScreen: void login()>/lampiro.screens.RegisterScreen$1.<init>/0	<lampiro.screens.RegisterScreen$1: void <init>(lampiro.screens.RegisterScreen)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>(int)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.<init>/0	<it.yup.ui.UIAccordion: void <init>()>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/lampiro.screens.RosterScreen$IQResultListener2.<init>/0	<lampiro.screens.RosterScreen$IQResultListener2: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$IQResultListener2)>
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xml.KXmlParser: void exception(java.lang.String)>/org.xmlpull.v1.XmlPullParserException.<init>/0	<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>
<it.yup.xml.KXmlParser: java.lang.String get(int)>/java.lang.String.<init>/0	<java.lang.String: void <init>(char[],int,int)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image)>
<it.yup.screens.RegisterScreen: void login()>/it.yup.screens.RegisterScreen$1.<init>/0	<it.yup.screens.RegisterScreen$1: void <init>(it.yup.screens.RegisterScreen)>
<it.yup.ui.UICanvas: java.util.TimerTask initLongPress(it.yup.ui.UIScreen)>/it.yup.ui.UICanvas$1.<init>/0	<it.yup.ui.UICanvas$1: void <init>(it.yup.ui.UICanvas,it.yup.ui.UIScreen)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.ChoiceGroup.<init>/0	<javax.microedition.lcdui.ChoiceGroup: void <init>(java.lang.String,int,java.lang.String[],javax.microedition.lcdui.Image[])>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String,int)>
<it.yup.screens.DataFormScreen: void createControls()>/it.yup.screens.DataFormScreen$ListChoiceHandler.<init>/0	<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.Command.<init>/0	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.TextField.<init>/0	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.Spacer.<init>/0	<javax.microedition.lcdui.Spacer: void <init>(int,int)>
<it.yup.xml.KXmlSerializer: void check(boolean)>/java.lang.IllegalStateException.<init>/0	<java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.jcraft.jzlib.Deflate: void <init>()>/com.jcraft.jzlib.Tree.<init>/0	<com.jcraft.jzlib.Tree: void <init>()>
<com.jcraft.jzlib.Deflate: void <init>()>/com.jcraft.jzlib.Tree.<init>/1	<com.jcraft.jzlib.Tree: void <init>()>
<com.jcraft.jzlib.Deflate: void <init>()>/com.jcraft.jzlib.Tree.<init>/2	<com.jcraft.jzlib.Tree: void <init>()>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.Contact.<init>/0	<it.yup.xmpp.Contact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.<init>/0	<it.yup.xmpp.packets.Presence: void <init>()>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UICheckbox.<init>/0	<it.yup.ui.UICheckbox: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UITextField.<init>/0	<it.yup.ui.UITextField: void <init>(java.lang.String,java.lang.String,int,int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.<init>/1	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.util.RMSIndex$KeyEnumeration: void next_item()>/java.util.NoSuchElementException.<init>/0	<java.util.NoSuchElementException: void <init>()>
<lampiro.screens.InnerMMScreen: void startCapture()>/lampiro.screens.InnerMMScreen$1.<init>/0	<lampiro.screens.InnerMMScreen$1: void <init>(lampiro.screens.InnerMMScreen)>
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/lampiro.screens.SendMMScreen.<init>/0	<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.KXmlParser.<init>/0	<it.yup.xml.KXmlParser: void <init>()>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/java.io.InputStreamReader.<init>/0	<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIVLayout.<init>/0	<it.yup.ui.UIVLayout: void <init>(int,int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UISeparator.<init>/0	<it.yup.ui.UISeparator: void <init>(int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.lang.Integer.<init>/0	<java.lang.Integer: void <init>(int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.<init>/0	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.ByteArrayOutputStream.<init>/1	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.<init>/1	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/java.io.DataOutputStream.<init>/0	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/it.yup.util.RMSIndex$Item.<init>/0	<it.yup.util.RMSIndex$Item: void <init>(it.yup.util.RMSIndex)>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.ByteArrayOutputStream.<init>/0	<java.io.ByteArrayOutputStream: void <init>()>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.<init>/0	<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/java.io.ByteArrayInputStream.<init>/0	<java.io.ByteArrayInputStream: void <init>(byte[])>
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/java.io.DataInputStream.<init>/0	<java.io.DataInputStream: void <init>(java.io.InputStream)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>(int)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Vector.<init>/1	<java.util.Vector: void <init>()>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/it.yup.xmlstream.SASLAuthenticator.<init>/0	<it.yup.xmlstream.SASLAuthenticator: void <init>()>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/it.yup.xmlstream.BasicXmlStream$ResourceBinding.<init>/0	<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void <init>(it.yup.xmlstream.BasicXmlStream)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/it.yup.xmlstream.BasicXmlStream$SessionOpener.<init>/0	<it.yup.xmlstream.BasicXmlStream$SessionOpener: void <init>(it.yup.xmlstream.BasicXmlStream)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.<init>/0	<java.lang.StringBuffer: void <init>()>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jcraft.jzlib.Deflate: int deflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/java.util.Hashtable.put/1	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.MUC: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.SubscribeScreen: boolean addSubscription(it.yup.xmpp.Contact,int)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>/it.yup.xmlstream.BasicXmlStream.send/0	<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/it.yup.xmpp.Roster.purge/0	<it.yup.xmpp.Roster: void purge()>
<it.yup.xmpp.XMPPClient: it.yup.xmlstream.BasicXmlStream createStream(boolean,boolean)>/it.yup.xmlstream.BasicXmlStream.addInitializer/0	<it.yup.xmlstream.BasicXmlStream: void addInitializer(it.yup.xmlstream.Initializer,int)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmlstream.BasicXmlStream.initialize/0	<it.yup.xmlstream.SocketStream: void initialize(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.transport.BaseChannel.isOpen/0	<it.yup.transport.SocketChannel: boolean isOpen()>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.transport.BaseChannel.open/0	<it.yup.transport.SocketChannel: void open()>
<it.yup.xmpp.XMPPClient: void closeStream()>/it.yup.transport.BaseChannel.isOpen/0	<it.yup.transport.SocketChannel: boolean isOpen()>
<it.yup.xmpp.XMPPClient: void closeStream()>/it.yup.transport.BaseChannel.close/0	<it.yup.transport.SocketChannel: void close()>
<it.yup.xmpp.XMPPClient: void gotStreamEvent(java.lang.String,java.lang.Object)>/it.yup.xmlstream.BasicXmlStream.removeInitializer/0	<it.yup.xmlstream.BasicXmlStream: void removeInitializer(it.yup.xmlstream.Initializer)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Roster.readFromStorage/0	<it.yup.xmpp.Roster: void readFromStorage()>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Roster.retrieveRoster/0	<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.Task.getFrom/0	<it.yup.xmpp.CommandExecutor: java.lang.String getFrom()>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>/it.yup.xmpp.Task.getStatus/0	<it.yup.xmpp.CommandExecutor: byte getStatus()>
<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<it.yup.xmpp.Contact: void addMessageToHistory(java.lang.String,it.yup.xmpp.packets.Message)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: java.lang.String getFullJid()>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/5	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getShow/0	<it.yup.xmpp.packets.Presence: java.lang.String getShow()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getShow/1	<it.yup.xmpp.packets.Presence: java.lang.String getShow()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getPriority/0	<it.yup.xmpp.packets.Presence: int getPriority()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getPriority/1	<it.yup.xmpp.packets.Presence: int getPriority()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getShow/2	<it.yup.xmpp.packets.Presence: java.lang.String getShow()>
<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence(java.lang.String)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelColor/0	<it.yup.ui.UIAccordion: void setLabelColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelGradientColor/0	<it.yup.ui.UIAccordion: void setLabelGradientColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelGradientSelectedColor/0	<it.yup.ui.UIAccordion: void setLabelGradientSelectedColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelSelectedColor/0	<it.yup.ui.UIAccordion: void setLabelSelectedColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelColor/1	<it.yup.ui.UIAccordion: void setLabelColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelGradientColor/1	<it.yup.ui.UIAccordion: void setLabelGradientColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelGradientSelectedColor/1	<it.yup.ui.UIAccordion: void setLabelGradientSelectedColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIAccordion.setLabelSelectedColor/1	<it.yup.ui.UIAccordion: void setLabelSelectedColor(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UIHLayout.setBg_color/0	<it.yup.ui.UILayout: void setBg_color(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UILabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UILabel.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.setDirty/1	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.setDirty/2	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UILayout: void setBg_color(int)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.showNotify/0	<lampiro.screens.ShowMMScreen: void showNotify()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.showNotify/0	<lampiro.screens.RegisterScreen: void showNotify()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIScreen.showNotify/0	<lampiro.screens.ChatScreen: void showNotify()>
<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>/java.util.Vector.removeElementAt/0	<java.util.Vector: void removeElementAt(int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/java.util.Vector.copyInto/0	<java.util.Vector: void copyInto(java.lang.Object[])>
<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.xmlstream.BasicXmlStream: void send(it.yup.xml.Element,int)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.Config: void resetStorage(boolean)>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<it.yup.xmpp.Config: void saveToStorage()>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<it.yup.xmpp.Config: void saveToStorage()>/it.yup.util.RMSIndex.store/0	<it.yup.util.RMSIndex: void store(byte[],byte[])>
<it.yup.xmpp.Config: void saveToStorage()>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.Config: void saveCapabilities(java.lang.String,java.lang.String,it.yup.xml.Element)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.Config: it.yup.xml.Element getCapabilities(java.lang.String,java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void addInitializer(it.yup.xmlstream.Initializer,int)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.xmlstream.BasicXmlStream: void removeInitializer(it.yup.xmlstream.Initializer)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<it.yup.xmpp.IqManager: void addRegistration(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmlstream.SocketStream: void connectionLost(it.yup.transport.BaseChannel)>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/3	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/4	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/5	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/3	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.screens.RegisterScreen: void <init>()>/it.yup.xmpp.Config.getProperty/4	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.put/1	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.put/2	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.put/3	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.put/4	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.ui.UIEmoLabel: void initialize()>/java.util.Hashtable.put/5	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.Roster: void saveToStorage()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.askRepaint/1	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.AlbumScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.SplashScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.DataResultScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.ChatScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.RegisterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.DataFormScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<it.yup.ui.UICombobox$UIComboScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.FTScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.CommandListScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.askRepaint/2	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.xmlstream.SocketStream: void tryToSend()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<it.yup.xmlstream.BasicXmlStream: void processFeatures(it.yup.xml.Element[])>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<it.yup.xmlstream.BasicXmlStream: void processFeatures(it.yup.xml.Element[])>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIPanel.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIPanel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIPanel.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void setupScreen()>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIVLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIGauge.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIGauge.setValue/0	<it.yup.ui.UIGauge: void setValue(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIGauge.getHeight/0	<it.yup.ui.UIGauge: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIGauge.getHeight/1	<it.yup.ui.UIGauge: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UILabel.getHeight/1	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIVLayout.setHeight/0	<it.yup.ui.UIVLayout: void setHeight(int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.FTScreen: void fillScreen()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.xmpp.Config: void loadFromStorage()>/java.io.DataInputStream.close/0	<java.io.DataInputStream: void close()>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.DebugScreen: void setupLogging()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xmpp.packets.Message.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmpp.SimpleDataFormExecutor: it.yup.xmpp.packets.Stanza buildReply(it.yup.xml.Element)>/it.yup.xmpp.packets.Iq.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.addElement/3	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.addElement/4	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/java.util.Vector.addElement/5	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UITextField.setText/1	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ShowMMScreen: void init()>/it.yup.ui.UILabel.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/lampiro.screens.ChatScreen.getLabelHeader/0	<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setStatus/0	<it.yup.ui.UIItem: void setStatus(java.lang.Object)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setFg_color/1	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UIEmoLabel.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIButton.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIButton.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RegisterScreen: void placeWizard()>/it.yup.ui.UITextField.setWrappable/1	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.setMaxHeight/0	<it.yup.ui.UIPanel: void setMaxHeight(int)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.setOneOpen/0	<it.yup.ui.UIAccordion: void setOneOpen(boolean)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.setModal/0	<it.yup.ui.UIPanel: void setModal(boolean)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.addSpareItem/0	<it.yup.ui.UIAccordion: void addSpareItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.addSpareItem/1	<it.yup.ui.UIAccordion: void addSpareItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.addSpareItem/2	<it.yup.ui.UIAccordion: void addSpareItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/3	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/4	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/5	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Vector.addElement/6	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.addItem/0	<it.yup.ui.UIAccordion: void addItem(it.yup.ui.UIItem,java.util.Vector)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void openContactMenu()>/java.util.Hashtable.put/1	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: java.lang.String getActionJid()>/it.yup.ui.UIAccordion.getOpenedLabel/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem getOpenedLabel()>
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UITextField.setAutoUnexpand/0	<it.yup.ui.UITextField: void setAutoUnexpand(boolean)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UITextField.setExpandable/0	<it.yup.ui.UITextField: void setExpandable(boolean)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.util.Vector.addElement/3	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/java.util.Vector.addElement/4	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UITextField.expand/0	<it.yup.ui.UITextField: void expand()>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.ChoiceGroup.setSelectedFlags/0	<javax.microedition.lcdui.ChoiceGroup: void setSelectedFlags(boolean[])>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.StringItem.setDefaultCommand/0	<javax.microedition.lcdui.StringItem: void setDefaultCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.StringItem.setItemCommandListener/0	<javax.microedition.lcdui.StringItem: void setItemCommandListener(javax.microedition.lcdui.ItemCommandListener)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.StringItem.setLayout/0	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.TextField.setLayout/0	<javax.microedition.lcdui.TextField: void setLayout(int)>
<it.yup.screens.DataFormScreen: void createControls()>/javax.microedition.lcdui.Spacer.setLayout/0	<javax.microedition.lcdui.Spacer: void setLayout(int)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UICheckbox.setChecked/1	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UICombobox.append/0	<it.yup.ui.UICombobox: void append(java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UICombobox.setSelectedFlags/0	<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UITextField.setMinLines/0	<it.yup.ui.UITextField: void setMinLines(int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.setGroup/1	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.insert/2	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIHLayout.insert/3	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UILabel.computeTextLines/0	<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>
<it.yup.ui.UITextField: void computeRealHeight()>/it.yup.ui.UILabel.getTextLines/0	<it.yup.ui.UILabel: java.util.Vector getTextLines()>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<it.yup.ui.UICombobox$UIComboScreen: void updateFilter()>/it.yup.ui.UILabel.getText/2	<it.yup.ui.UILabel: java.lang.String getText()>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.KXmlParser.setFeature/0	<it.yup.xml.KXmlParser: void setFeature(java.lang.String,boolean)>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.KXmlParser.setInput/0	<it.yup.xml.KXmlParser: void setInput(java.io.Reader)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIVLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIVLayout.insert/0	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UISeparator.setFg_color/0	<it.yup.ui.UIItem: void setFg_color(int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIVLayout.insert/1	<it.yup.ui.UIVLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.writeShort/0	<java.io.DataOutputStream: void writeShort(int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.writeInt/0	<java.io.DataOutputStream: void writeInt(int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.write/0	<java.io.DataOutputStream: void write(byte[],int,int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.write/1	<java.io.DataOutputStream: void write(int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.writeShort/1	<java.io.DataOutputStream: void writeShort(int)>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.write/2	<java.io.DataOutputStream: void write(byte[])>
<it.yup.util.RMSIndex: int physicalWrite(int,byte[],byte[],int,int,byte,it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.write/3	<java.io.DataOutputStream: void write(byte[],int,int)>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/java.io.DataOutputStream.writeShort/0	<java.io.DataOutputStream: void writeShort(int)>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/java.io.DataOutputStream.write/0	<java.io.DataOutputStream: void write(byte[])>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/java.io.DataOutputStream.writeInt/0	<java.io.DataOutputStream: void writeInt(int)>
<it.yup.util.RMSIndex: int saveChunk(int,java.util.Vector)>/java.io.DataOutputStream.writeShort/1	<java.io.DataOutputStream: void writeShort(int)>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/java.io.DataInputStream.readByte/0	<java.io.DataInputStream: byte readByte()>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/java.io.DataInputStream.readFully/0	<java.io.DataInputStream: void readFully(byte[])>
<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataInputStream.read/0	<java.io.DataInputStream: int read(byte[])>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataInputStream.read/1	<java.io.DataInputStream: int read(byte[])>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataInputStream.read/2	<java.io.DataInputStream: int read(byte[],int,int)>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataInputStream.read/3	<java.io.DataInputStream: int read(byte[])>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.write/0	<java.io.DataOutputStream: void write(byte[])>
<it.yup.util.RMSIndex: byte[] physicalRead(it.yup.util.RMSIndex$Item)>/java.io.DataOutputStream.write/1	<java.io.DataOutputStream: void write(byte[],int,int)>
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/java.io.DataInputStream.readByte/0	<java.io.DataInputStream: byte readByte()>
<it.yup.util.RMSIndex: void deleteSplittedRecords(int)>/java.io.DataInputStream.read/0	<java.io.DataInputStream: int read(byte[],int,int)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmlstream.BasicXmlStream: void <init>()>/java.util.Vector.addElement/2	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/0	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/1	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/2	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/3	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/4	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/5	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/6	<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<it.yup.xml.Element: java.lang.String writeEscaped(java.lang.String,int)>/java.lang.StringBuffer.append/7	<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<lampiro.LampiroMidlet: void destroyApp(boolean)>/it.yup.xmpp.XMPPClient.stopClient/0	<it.yup.xmpp.XMPPClient: void stopClient()>
<com.jcraft.jzlib.Inflate: int inflateInit(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Inflate.inflateEnd/0	<com.jcraft.jzlib.Inflate: int inflateEnd(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.Inflate: int inflateInit(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Inflate.inflateReset/0	<com.jcraft.jzlib.Inflate: int inflateReset(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.Inflate: int inflateSync(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.Inflate.inflateReset/0	<com.jcraft.jzlib.Inflate: int inflateReset(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.Deflate: int deflateInit(com.jcraft.jzlib.ZStream,int,int)>/com.jcraft.jzlib.Deflate.deflateInit2/0	<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.putShortMSB/0	<com.jcraft.jzlib.Deflate: void putShortMSB(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.putShortMSB/1	<com.jcraft.jzlib.Deflate: void putShortMSB(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.putShortMSB/2	<com.jcraft.jzlib.Deflate: void putShortMSB(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.deflate_stored/0	<com.jcraft.jzlib.Deflate: int deflate_stored(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.deflate_fast/0	<com.jcraft.jzlib.Deflate: int deflate_fast(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.deflate_slow/0	<com.jcraft.jzlib.Deflate: int deflate_slow(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate._tr_align/0	<com.jcraft.jzlib.Deflate: void _tr_align()>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate._tr_stored_block/0	<com.jcraft.jzlib.Deflate: void _tr_stored_block(int,int,boolean)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.putShortMSB/3	<com.jcraft.jzlib.Deflate: void putShortMSB(int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Deflate.putShortMSB/4	<com.jcraft.jzlib.Deflate: void putShortMSB(int)>
<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: void openStream()>/it.yup.xmpp.Config.getProperty/3	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: void stream_authenticated()>/it.yup.xmpp.Config.getProperty/2	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/java.util.Vector.copyInto/0	<it.yup.util.MetaVector: void copyInto(java.lang.Object[])>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.screens.TaskListScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Task.display/0	<it.yup.xmpp.SimpleDataFormExecutor: void display(javax.microedition.lcdui.Display,javax.microedition.lcdui.Displayable)>
<it.yup.xml.Element: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.clone/0	<it.yup.xml.Element: it.yup.xml.Element clone()>
<it.yup.ui.UIAccordion: void move(int,int)>/java.util.Vector.removeElement/1	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void move(int,int)>/java.util.Vector.insertElementAt/1	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.removeElement/2	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.insertElementAt/2	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.removeElement/3	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void swap(int,int)>/java.util.Vector.insertElementAt/3	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<lampiro.screens.TaskListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Task.getLabel/0	<it.yup.xmpp.SimpleDataFormExecutor: java.lang.String getLabel()>
<it.yup.ui.UITextPanel: void setText(java.lang.String)>/java.util.Vector.removeAllElements/0	<it.yup.util.MetaVector: void removeAllElements()>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.AlbumScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.FTScreen: void <init>()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void updateFT()>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UIMenu.indexOf/0	<it.yup.ui.UIMenu: int indexOf(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void askTopic()>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.MUCScreen: void sendInvite(java.lang.String)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getUIContact/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIContact getUIContact(it.yup.xmpp.Contact)>
<lampiro.screens.ChatScreen: boolean isPrintable(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<lampiro.screens.FTScreen: void fillScreen()>/lampiro.screens.RosterScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<it.yup.xmpp.Config: void loadFromStorage()>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.xmpp.XMPPClient.getRoster/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.ChatScreen$ForwardScreen: void closeMe()>/it.yup.ui.UICanvas.close/0	<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>
<lampiro.screens.ChatScreen$ForwardScreen: void closeMe()>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIItem.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xmpp.XMPPClient.updateTask/0	<it.yup.xmpp.XMPPClient: void updateTask(it.yup.xmpp.Task)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen: void ftNotification(boolean,java.lang.String,java.lang.String)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UIMenu.setSelectedIndex/0	<it.yup.ui.UIMenu: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void firstLoginIntro()>/it.yup.ui.UIMenu.replace/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void closeWaitingScreen()>/lampiro.screens.RosterScreen$WaitScreen.stopWaiting/0	<lampiro.screens.CommandListScreen: void stopWaiting()>
<lampiro.screens.InnerMMScreen: void closeScreen()>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.InnerMMScreen: void closeScreen()>/it.yup.ui.UICanvas.show/0	<it.yup.ui.UICanvas: void show(it.yup.ui.UIScreen)>
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/lampiro.screens.RosterScreen.setFreezed/0	<it.yup.ui.UIScreen: void setFreezed(boolean)>
<lampiro.screens.InnerMMScreen: void handleMMFile(byte[],java.lang.String,int)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<lampiro.screens.KeyScreen: boolean isValid(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.tests.XMLTestMidlet: void testEnDecode()>/it.yup.xml.Element.toXml/0	<it.yup.xml.Element: byte[] toXml()>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UICanvas.getScreenList/0	<it.yup.ui.UICanvas: java.util.Vector getScreenList()>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.ZStream.flush_pending/0	<com.jcraft.jzlib.ZStream: void flush_pending()>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.ZStream.flush_pending/1	<com.jcraft.jzlib.ZStream: void flush_pending()>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.ZStream.flush_pending/2	<com.jcraft.jzlib.ZStream: void flush_pending()>
<com.jcraft.jzlib.Deflate: int deflateParams(com.jcraft.jzlib.ZStream,int,int)>/com.jcraft.jzlib.ZStream.deflate/0	<com.jcraft.jzlib.ZStream: int deflate(int)>
<com.jcraft.jzlib.Deflate$Config: void <init>(int,int,int,int,int)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.MUCScreen.<init>/0	<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.ChatScreen.<init>/0	<lampiro.screens.ChatScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/it.yup.xmpp.Config.getInstance/0	<it.yup.xmpp.Config: it.yup.xmpp.Config getInstance()>
<lampiro.screens.MUCScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.MUCScreen: boolean updateConversation()>/lampiro.screens.MUCScreen.updateResConversation/0	<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>
<it.yup.xmpp.FTSender: boolean supportFT(java.lang.String)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.screens.AddContactScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Roster.subscribeContact/0	<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>
<it.yup.ui.UICombobox: void append(java.lang.String)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox: void append(it.yup.ui.UILabel)>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox: void removeAt(int)>/it.yup.ui.UIPanel.removeItemAt/0	<it.yup.ui.UIPanel: void removeItemAt(int)>
<it.yup.ui.UICombobox: void removeAll()>/it.yup.ui.UIPanel.removeAllItems/0	<it.yup.ui.UIPanel: void removeAllItems()>
<it.yup.ui.UICombobox: int[] getSelectedIndeces()>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Roster.subscribeContact/0	<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Roster.unsubscribeContact/0	<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>
<it.yup.ui.UICombobox: java.lang.String[] getSelectedStrings()>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: void setSelectedFlags(boolean[])>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>/it.yup.ui.UIPanel.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: boolean isSelected(int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: boolean isSelected(int)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.xmpp.Group: it.yup.xml.Element store()>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>/java.util.Vector.removeAllElements/1	<java.util.Vector: void removeAllElements()>
<it.yup.ui.UIPanel: void setSelectedIndex(int)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIPanel: void setSelectedIndex(int)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleError(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIItem: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/2	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/2	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String,int)>/it.yup.xmpp.packets.Presence.setPriority/0	<it.yup.xmpp.packets.Presence: void setPriority(int)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>/it.yup.xmpp.packets.Presence.getPriority/0	<it.yup.xmpp.packets.Presence: int getPriority()>
<lampiro.screens.SimpleComposerScreen: void <init>(it.yup.xmpp.Contact,java.lang.String)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UIItem: boolean isFocusable()>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIMenu: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UILayout: void setDirty(boolean)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UILayout: void setDirty(boolean)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<it.yup.ui.UILayout: void setDirty(boolean)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIScreen: void setDirty(boolean)>
<it.yup.ui.UILayout: boolean isDirty()>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UILayout: boolean isDirty()>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UILayout: boolean isDirty()>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UILayout: boolean isFocusable()>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UIItem: boolean isFocusable()>
<it.yup.ui.UILayout: boolean isFocusable()>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UILayout: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIItem.getSelectedItem/0	<it.yup.ui.UIItem: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UILayout: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIItem.getSelectedItem/0	<it.yup.ui.UILayout: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UILayout: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIItem.getSelectedItem/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.isSelected/0	<it.yup.ui.UIItem: boolean isSelected()>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UILayout: void setBg_color(int)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UILayout: void setBg_color(int)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UILayout: void setBg_color(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UIItem: boolean keyPressed(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UIRadioButtons$UIRadioButton: boolean keyPressed(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UILayout: boolean keyPressed(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UIScreen: boolean keyPressed(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.xmpp.Contact: int getAvailability(java.lang.String)>/it.yup.xmpp.packets.Presence.getShow/0	<it.yup.xmpp.packets.Presence: java.lang.String getShow()>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xmpp.packets.DataForm.getResultElement/0	<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.screens.DeleteContactAlert: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.Roster.unsubscribeContact/0	<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void reqFT(java.lang.String,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.ui.UICanvas: void pointerDragged(int,int)>/java.util.TimerTask.cancel/0	<java.util.TimerTask: boolean cancel()>
<it.yup.ui.UICanvas: void pointerReleased(int,int)>/java.util.TimerTask.cancel/0	<java.util.TimerTask: boolean cancel()>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/1	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileAcceptance(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.SendMMScreen$UploadHandler: void fileSent(it.yup.xmpp.Contact,java.lang.String,boolean,it.yup.xmpp.FTSender)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.SendMMScreen$UploadHandler: void sessionInitated(it.yup.xmpp.Contact,java.lang.String,it.yup.xmpp.FTSender)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener3: void handleError(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.ChatScreen$MUCUpdateListener: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleError(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener4: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTSender$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.ui.UIScreen: boolean askRepaint()>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.reorganizeContact/0	<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.reorganizeContact/1	<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.reorganizeContact/2	<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UILabel.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UILabel.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UILabel.setBg_color/2	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/lampiro.screens.RosterScreen$UIGroup.reorganizeContact/0	<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.setAutoClose/0	<it.yup.ui.UIMenu: void setAutoClose(boolean)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/3	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/4	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/5	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/6	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/7	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/8	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/9	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/10	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/11	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.append/12	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIMenu.setSelectedItem/1	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.MUCScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/it.yup.ui.UICombobox.getHeight/0	<it.yup.ui.UICombobox: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.RosterScreen$UIGroup: void orderGroups()>/it.yup.ui.UIAccordion.getItemLabels/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>
<lampiro.screens.RosterScreen$UIGroup: void orderGroups()>/it.yup.ui.UIAccordion.swap/0	<it.yup.ui.UIAccordion: void swap(int,int)>
<lampiro.screens.MUCScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/lampiro.screens.ChatScreen.getPrintableHeight/0	<lampiro.screens.ChatScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>
<lampiro.screens.RosterScreen$UIGroup: void orderGroups()>/lampiro.screens.RosterScreen$UIGroup.orderGroups/0	<lampiro.screens.RosterScreen$UIGroup: void orderGroups()>
<it.yup.ui.UICanvas: void setupdefaultKeyCode()>/it.yup.ui.UICanvas.isMotorola/0	<it.yup.ui.UICanvas: boolean isMotorola()>
<com.jcraft.jzlib.Inflate: int inflateInit(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.<init>/0	<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>
<it.yup.util.RMSIndex: java.util.Vector access$1(it.yup.util.RMSIndex,int)>/it.yup.util.RMSIndex.loadChunk/0	<it.yup.util.RMSIndex: java.util.Vector loadChunk(int)>
<it.yup.ui.UICanvas: void keyRepeated(int)>/it.yup.ui.UIUtils.easyMenu/0	<it.yup.ui.UIUtils: it.yup.ui.UIMenu easyMenu(java.lang.String,int,int,int,it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/it.yup.xmlstream.BasicXmlStream.addOnetimeEventListener/0	<it.yup.xmlstream.BasicXmlStream: it.yup.xmlstream.EventQueryRegistration addOnetimeEventListener(it.yup.xmlstream.EventQuery,java.lang.Object)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.xmpp.XMPPClient.getTraffic/0	<it.yup.xmpp.XMPPClient: int[] getTraffic()>
<lampiro.screens.RosterScreen: void updateHeader()>/lampiro.screens.RosterScreen$UIGroup.getGroup/0	<lampiro.screens.RosterScreen$UIGroup: lampiro.screens.RosterScreen$UIGroup getGroup(java.lang.String,it.yup.ui.UIAccordion,boolean)>
<lampiro.screens.RosterScreen: void updateHeader()>/lampiro.screens.RosterScreen$UIGroup.access$0/0	<lampiro.screens.RosterScreen$UIGroup: java.util.Hashtable access$0()>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.util.Utils.is_email/0	<it.yup.util.Utils: boolean is_email(java.lang.String)>
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<it.yup.xmlstream.KXmlParser: void push(int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<it.yup.xml.KXmlParser: void push(int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen.access$4/0	<lampiro.screens.RosterScreen: it.yup.util.ResourceManager access$4()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.RosterScreen$UIGroup: void removeContact(it.yup.xmpp.Contact)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<lampiro.screens.AlbumScreen: int getCount(int)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.removeAllElements/0	<it.yup.xml.Element: void removeAllElements()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addElementAndContent/0	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addElementAndContent/1	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addElementAndContent/2	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addElementAndContent/3	<it.yup.xml.Element: it.yup.xml.Element addElementAndContent(java.lang.String,java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.removeAllElements/1	<it.yup.xml.Element: void removeAllElements()>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addText/1	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.AlbumScreen: void addAlbum(byte[],java.lang.String,java.lang.String,int)>/it.yup.xml.Element.addText/2	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/org.xmlpull.v1.XmlPullParser.require/0	<it.yup.xml.KXmlParser: void require(int,java.lang.String,java.lang.String)>
<it.yup.xml.KXmlProcessor: it.yup.xml.Element parseDocument(org.xmlpull.v1.XmlPullParser)>/org.xmlpull.v1.XmlPullParser.nextToken/0	<it.yup.xml.KXmlParser: int nextToken()>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UILayout.setSelectedIndex/0	<it.yup.ui.UILayout: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UILayout.setSelectedIndex/0	<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addText/1	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addText/2	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.packets.DataForm: it.yup.xml.Element getResultElement()>/it.yup.xml.Element.addText/3	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItem/0	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/java.util.Hashtable.remove/1	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/3	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/4	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addElement/5	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/3	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/5	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItem/1	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItem/2	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<it.yup.xmpp.packets.Presence: java.lang.String getShow()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.Presence: int getPriority()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.Presence: java.lang.String getResource()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIButton: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UICombobox: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setDirty/1	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UICombobox: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/2	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.addText/1	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.screens.RosterScreen: void handleTask(it.yup.xmpp.Task,boolean)>/it.yup.xmpp.Task.display/0	<it.yup.xmpp.CommandExecutor: void display(javax.microedition.lcdui.Display,javax.microedition.lcdui.Displayable)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UILayout: void setDirty(boolean)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UICombobox: void setDirty(boolean)>
<it.yup.ui.UILayout: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIItem.getSelectedItem/0	<it.yup.ui.UICombobox: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UILayout: boolean contains(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.contains/0	<it.yup.ui.UILayout: boolean contains(it.yup.ui.UIItem)>
<it.yup.ui.UILayout: boolean contains(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.contains/0	<it.yup.ui.UIMenu: boolean contains(it.yup.ui.UIItem)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UICombobox: boolean keyPressed(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: it.yup.xml.Element getCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: it.yup.xml.Element getCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void display_internal()>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: boolean supportsMUC(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: boolean supportsMUC(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: void handleError(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.addElement/4	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UIHLayout.getItem/0	<it.yup.ui.UILayout: it.yup.ui.UIItem getItem(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void fileError(it.yup.xmpp.Contact,java.lang.String,it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIItem: void setDirty(boolean)>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/0	<it.yup.ui.UIItem: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.getSubmenu/1	<it.yup.ui.UIItem: it.yup.ui.UIMenu getSubmenu()>
<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/1	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setBg_color/3	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFg_color/3	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setBg_color/4	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFg_color/4	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setBg_color/5	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.setFg_color/5	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.SendMMScreen: void <init>(byte[],java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>/it.yup.ui.UITextField.setText/1	<it.yup.ui.UITextField: void setText(java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/3	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/5	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/3	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.AddContactScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AddContactScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/7	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.ContactInfoScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Presence.getStatus/1	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void start(it.yup.xmlstream.BasicXmlStream)>/it.yup.xml.Element.addText/1	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmlstream.AccountRegistration: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$RegisterHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Message: java.lang.String getBody()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.Message: java.lang.String getErrorText()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void loadAlbum()>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIButton.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.SubscribeScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Contact: void updateExistingPresence(it.yup.xmpp.packets.Presence)>/it.yup.xmpp.packets.Presence.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIMenu.setDirty/1	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UIItem: boolean isFocusable()>
<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>/it.yup.ui.UIItem.isFocusable/1	<it.yup.ui.UIItem: boolean isFocusable()>
<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>/it.yup.ui.UIItem.isFocusable/1	<it.yup.ui.UILayout: boolean isFocusable()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIMenu.setSubmenu/0	<it.yup.ui.UIMenu: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.AddContactScreen: void registerContact(java.lang.String,java.lang.String,java.lang.String)>/it.yup.xmpp.Roster.subscribeContact/0	<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIMenu.remove/1	<it.yup.ui.UIMenu: boolean remove(it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIMenu.insert/0	<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>
<lampiro.screens.DataResultScreen: void showCurrent()>/it.yup.ui.UIMenu.insert/1	<it.yup.ui.UIMenu: void insert(int,it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<lampiro.screens.ChatScreen: java.lang.String getPrintableStatus()>/it.yup.xmpp.packets.Presence.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.getSelectedItem/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.setOpenedState/0	<it.yup.ui.UIMenu: void setOpenedState(boolean)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.clear/0	<it.yup.ui.UIMenu: void clear()>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/1	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/2	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/3	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/4	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/5	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/6	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/7	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/8	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/9	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/10	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/11	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/12	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/13	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/14	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/15	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/16	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/17	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.append/18	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIItem.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen: void toggleMenus()>/it.yup.ui.UIMenu.setSelectedItem/0	<it.yup.ui.UIMenu: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.xmpp.XMPPClient$PresenceHandler: void handleSubscribe(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/java.util.Vector.removeElement/0	<java.util.Vector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void close(it.yup.ui.UIItem)>/java.util.Vector.removeElement/0	<it.yup.util.MetaVector: boolean removeElement(java.lang.Object)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/java.util.Vector.insertElementAt/0	<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<it.yup.ui.UIAccordion: void open(it.yup.ui.UIItem)>/java.util.Vector.insertElementAt/0	<it.yup.util.MetaVector: void insertElementAt(java.lang.Object,int)>
<lampiro.LampiroMidlet: void destroyApp(boolean)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/lampiro.screens.RosterScreen$UIGroup.reorganizeContact/0	<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.RosterScreen: void chatWithContact(it.yup.xmpp.Contact,java.lang.String)>/it.yup.ui.UICanvas.open/0	<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>
<com.jcraft.jzlib.Inflate: int inflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<com.jcraft.jzlib.Inflate: int inflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>/com.jcraft.jzlib.Adler32.adler32/1	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<com.jcraft.jzlib.Deflate: int deflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<com.jcraft.jzlib.Deflate: int deflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<lampiro.screens.RosterScreen$UIGroup: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UIAccordion.removePanelItem/0	<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UIAccordion.getPanelSize/0	<it.yup.ui.UIAccordion: int getPanelSize(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: void removeContact(it.yup.xmpp.Contact)>/it.yup.ui.UIAccordion.removeItem/0	<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/it.yup.xmpp.Roster.loadGateways/0	<it.yup.xmpp.Roster: void loadGateways()>
<it.yup.screens.RegisterScreen$ItemCommandListener1: void <init>(it.yup.screens.RegisterScreen,it.yup.screens.RegisterScreen$ItemCommandListener1)>/it.yup.screens.RegisterScreen$ItemCommandListener1.<init>/0	<it.yup.screens.RegisterScreen$ItemCommandListener1: void <init>(it.yup.screens.RegisterScreen)>
<it.yup.screens.RegisterScreen$ItemStateListener1: void <init>(it.yup.screens.RegisterScreen,it.yup.screens.RegisterScreen$ItemStateListener1)>/it.yup.screens.RegisterScreen$ItemStateListener1.<init>/0	<it.yup.screens.RegisterScreen$ItemStateListener1: void <init>(it.yup.screens.RegisterScreen)>
<lampiro.screens.MUCScreen: void getPrintableHeight(javax.microedition.lcdui.Graphics,int)>/it.yup.ui.UICombobox.<init>/0	<it.yup.ui.UICombobox: void <init>(java.lang.String,boolean)>
<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>/it.yup.ui.UIItem.drawPixel/0	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>/it.yup.ui.UIItem.drawPixel/1	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>/it.yup.ui.UIItem.drawPixel/2	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>/it.yup.ui.UIItem.drawPixel/3	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/lampiro.screens.ChatScreen.wrapMessage/0	<lampiro.screens.ChatScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>
<it.yup.xmlstream.BasicXmlStream: boolean areMatching(it.yup.xml.Element,it.yup.xmlstream.EventQuery)>/it.yup.xmlstream.BasicXmlStream.areMatching/0	<it.yup.xmlstream.BasicXmlStream: boolean areMatching(it.yup.xml.Element,it.yup.xmlstream.EventQuery)>
<it.yup.ui.UICanvas: void keyPressed(int)>/it.yup.ui.UICanvas.keyRepeated/0	<it.yup.ui.UICanvas: void keyRepeated(int)>
<it.yup.ui.UICanvas: void keyPressed(int)>/it.yup.ui.UICanvas.getGameAction/0	<it.yup.ui.UICanvas: int getGameAction(int)>
<it.yup.ui.UICanvas: void keyPressed(int)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<it.yup.ui.UICanvas: void keyRepeated(int)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.keyPressed/1	<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.askRepaint/0	<it.yup.ui.UIItem: boolean askRepaint()>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.keyPressed/2	<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.askRepaint/1	<it.yup.ui.UIItem: boolean askRepaint()>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen: void updateHeader()>/lampiro.screens.RosterScreen.getTitle/0	<it.yup.ui.UIScreen: java.lang.String getTitle()>
<lampiro.screens.RosterScreen: void updateHeader()>/lampiro.screens.RosterScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.screens.RegisterScreen.insert/0	<javax.microedition.lcdui.Form: void insert(int,javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.screens.RegisterScreen.addCommand/0	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.screens.RegisterScreen.delete/0	<javax.microedition.lcdui.Form: void delete(int)>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.screens.RegisterScreen.removeCommand/0	<javax.microedition.lcdui.Form: void removeCommand(javax.microedition.lcdui.Command)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen$FileReceiveScreen.setMenu/0	<it.yup.ui.UIScreen: void setMenu(it.yup.ui.UIMenu)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen$FileReceiveScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen$FileReceiveScreen.setTitle/0	<it.yup.ui.UIScreen: void setTitle(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen$FileReceiveScreen.append/0	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/lampiro.screens.RosterScreen$FileReceiveScreen.append/1	<it.yup.ui.UIScreen: int append(it.yup.ui.UIItem)>
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/it.yup.screens.DataFormScreen.append/0	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<it.yup.ui.UIAccordion: void invalidateItems(int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.xmpp.FTSender: boolean supportFT(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.SimpleDataFormExecutor: boolean execute(int)>/it.yup.xmpp.packets.Stanza.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.xmpp.packets.Presence.getShow/0	<it.yup.xmpp.packets.Presence: java.lang.String getShow()>
<it.yup.screens.StatusScreen: void <init>()>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<it.yup.xmpp.XMPPClient$MessageHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.packets.Presence.getShow/0	<it.yup.xmpp.packets.Presence: java.lang.String getShow()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.xmpp.packets.Presence.getPriority/0	<it.yup.xmpp.packets.Presence: int getPriority()>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIItem.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.StatusScreen: void <init>()>/it.yup.ui.UIItem.setSubmenu/0	<it.yup.ui.UIMenu: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIPanel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setDirty/0	<it.yup.ui.UICombobox: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setSelected/0	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setSelected/1	<it.yup.ui.UICombobox: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: boolean keyPressed(int)>/it.yup.ui.UILabel.setDirty/1	<it.yup.ui.UICombobox: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UIRadioButtons: void setSelectedIndex(int)>/it.yup.ui.UIItem.setSelected/2	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UIPanel: boolean isFocusable()>
<it.yup.ui.UILayout: void setSelected(boolean)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UILayout: void setDirty(boolean)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UILayout: boolean isDirty()>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UILayout: boolean isFocusable()>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UIPanel: boolean isFocusable()>
<it.yup.ui.UILayout: it.yup.ui.UIItem getSelectedItem()>/it.yup.ui.UIItem.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UIPanel: boolean keyPressed(int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Contact: void askCapabilities(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIMenu: void setDirty(boolean)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.DataForm$Field: void <init>(it.yup.xmpp.packets.DataForm,it.yup.xml.Element)>/it.yup.xml.Element.getText/2	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Config: byte[] getData(byte[])>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<it.yup.xmpp.Config: byte[] getData(byte[])>/it.yup.util.RMSIndex.load/0	<it.yup.util.RMSIndex: byte[] load(byte[])>
<it.yup.xmpp.Config: byte[] getData(byte[])>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.Config: void setData(byte[],byte[])>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<it.yup.xmpp.Config: void setData(byte[],byte[])>/it.yup.util.RMSIndex.store/0	<it.yup.util.RMSIndex: void store(byte[],byte[])>
<it.yup.xmpp.Config: void setData(byte[],byte[])>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIButton: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIItem: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIPanel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UICombobox: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIMenu: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: void updateChildren()>/it.yup.ui.UIItem.setSelected/1	<it.yup.ui.UIPanel: void setSelected(boolean)>
<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>/it.yup.ui.UIItem.isFocusable/0	<it.yup.ui.UIPanel: boolean isFocusable()>
<it.yup.ui.UILayout: int traverseFocusable(int,boolean)>/it.yup.ui.UIItem.isFocusable/1	<it.yup.ui.UIPanel: boolean isFocusable()>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.MUCScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.removeItem/0	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/java.util.Vector.removeAllElements/0	<java.util.Vector: void removeAllElements()>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.removeItem/1	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.addItem/0	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.addItem/1	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/java.util.Vector.addElement/1	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.addItem/2	<it.yup.ui.UIPanel: void addItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.setSelected/1	<it.yup.ui.UILayout: void setSelected(boolean)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIButton.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIButton.setSelected/1	<it.yup.ui.UIItem: void setSelected(boolean)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.insert/3	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.insert/4	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIHLayout.setSelectedItem/1	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.ui.UIPanel.setFirstVisible/0	<it.yup.ui.UIPanel: void setFirstVisible(int)>
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: void buildSocketConnection()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<it.yup.xmpp.XMPPClient: java.lang.String getCapVer()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<lampiro.screens.ContactInfoScreen: void setColor(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UILayout: void setBg_color(int)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/it.yup.xmpp.Contact.getMessageHistory/0	<it.yup.xmpp.Contact: java.util.Vector getMessageHistory(java.lang.String)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/it.yup.xmpp.Contact.resetMessageHistory/0	<it.yup.xmpp.Contact: void resetMessageHistory(java.lang.String)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/it.yup.ui.UIPanel.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.keyPressed/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.getWidth/0	<it.yup.ui.UIItem: int getWidth()>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIMenu.setWidth/0	<it.yup.ui.UIMenu: void setWidth(int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UIScreen.addPopup/0	<it.yup.ui.UIScreen: void addPopup(it.yup.ui.UIMenu)>
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/it.yup.xmpp.packets.Iq.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIEmoLabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIEmoLabel.getSubmenu/0	<it.yup.ui.UIItem: it.yup.ui.UIMenu getSubmenu()>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIEmoLabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIEmoLabel.getTextLines/0	<it.yup.ui.UILabel: java.util.Vector getTextLines()>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIPanel.insertItemAt/0	<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIPanel.removeItem/0	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UIEmoLabel.setTextLines/0	<it.yup.ui.UILabel: void setTextLines(java.util.Vector)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setGradientColor/0	<it.yup.ui.UIItem: void setGradientColor(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setGradientColor/1	<it.yup.ui.UIItem: void setGradientColor(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelectedColor/1	<it.yup.ui.UIItem: void setSelectedColor(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setGradientSelectedColor/0	<it.yup.ui.UIItem: void setGradientSelectedColor(int)>
<it.yup.ui.UIAccordion: void setItemsColor(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setGradientSelectedColor/1	<it.yup.ui.UIItem: void setGradientSelectedColor(int)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/lampiro.screens.ChatScreen.checkUrls/0	<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/lampiro.screens.ChatScreen.updateLabel/0	<lampiro.screens.ChatScreen: void updateLabel(lampiro.screens.ChatScreen$ConversationEntry)>
<it.yup.ui.UICanvas: void keyPressed(int)>/it.yup.ui.UICanvas.change/0	<it.yup.ui.UICanvas: void change(int)>
<lampiro.screens.RosterScreen: void updateHeader()>/lampiro.screens.RosterScreen.getAccordion/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.screens.RegisterScreen.indexOf/0	<it.yup.screens.RegisterScreen: int indexOf(javax.microedition.lcdui.Item)>
<it.yup.screens.RegisterScreen: void checkLogin()>/it.yup.screens.RegisterScreen.indexOf/1	<it.yup.screens.RegisterScreen: int indexOf(javax.microedition.lcdui.Item)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/0	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/1	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/2	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/3	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/4	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/5	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/6	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/7	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/8	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<it.yup.xmpp.Config: void setDefaults()>/it.yup.xmpp.Config.setDefault/9	<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void <init>(lampiro.screens.RosterScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.AddContactScreen$IQResultListener1: void <init>(lampiro.screens.AddContactScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.AddContactScreen$IQResultListener2: void <init>(lampiro.screens.AddContactScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xmpp.FTSender$IQResultListener1: void <init>(it.yup.xmpp.FTSender)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xmpp.FTSender$PacketListener1: void <init>(it.yup.xmpp.FTSender)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.Roster$IQResultListener1: void <init>(it.yup.xmpp.Roster,boolean)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xmpp.Roster$IQResultListener3: void <init>(it.yup.xmpp.Roster,boolean,java.lang.String)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.push/0	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.read/1	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.push/1	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.push/2	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.get/0	<it.yup.xmlstream.KXmlParser: java.lang.String get(int)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.push/3	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.error/1	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/it.yup.xmlstream.KXmlParser.push/4	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.readName/0	<it.yup.xmlstream.KXmlParser: java.lang.String readName()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.skip/0	<it.yup.xmlstream.KXmlParser: void skip()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/1	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/2	<it.yup.xmlstream.KXmlParser: void read(char)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/3	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.skip/1	<it.yup.xmlstream.KXmlParser: void skip()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/4	<it.yup.xmlstream.KXmlParser: void read(char)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/5	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.readName/1	<it.yup.xmlstream.KXmlParser: java.lang.String readName()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.error/1	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.ensureCapacity/0	<it.yup.xmlstream.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.skip/2	<it.yup.xmlstream.KXmlParser: void skip()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.peek/1	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.error/2	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/6	<it.yup.xmlstream.KXmlParser: void read(char)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.skip/3	<it.yup.xmlstream.KXmlParser: void skip()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.peek/2	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.error/3	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/7	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.pushText/0	<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.get/0	<it.yup.xmlstream.KXmlParser: java.lang.String get(int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.read/8	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.ensureCapacity/1	<it.yup.xmlstream.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/it.yup.xmlstream.KXmlParser.adjustNsp/0	<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.read/1	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.readName/0	<it.yup.xmlstream.KXmlParser: java.lang.String readName()>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.skip/0	<it.yup.xmlstream.KXmlParser: void skip()>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.read/2	<it.yup.xmlstream.KXmlParser: void read(char)>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/it.yup.xmlstream.KXmlParser.error/1	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.pushEntity/0	<it.yup.xmlstream.KXmlParser: void pushEntity()>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.push/0	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.read/1	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.push/1	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void pushText(int,boolean)>/it.yup.xmlstream.KXmlParser.peek/1	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/1	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/1	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/2	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/3	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/4	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.push/0	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/5	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.push/1	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/2	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/3	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/6	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/7	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/8	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.parseStartTag/0	<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/1	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/2	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/3	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/9	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/10	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/4	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/4	<it.yup.xmlstream.KXmlParser: void read(char)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.parseDoctype/0	<it.yup.xmlstream.KXmlParser: void parseDoctype(boolean)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/5	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/5	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.push/2	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/11	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.peek/12	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.error/6	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/6	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/it.yup.xmlstream.KXmlParser.read/7	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmpp.XMPPClient$MessageHandler: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.XMPPClient$PresenceHandler: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.XMPPClient$DiscoHandler: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.XMPPClient$DataFormHandler: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.XMPPClient$PacketListener1: void <init>(it.yup.xmpp.XMPPClient)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.XMPPClient$TimerTask1: void <init>(it.yup.xmpp.XMPPClient)>/java.util.TimerTask.<init>/0	<java.util.TimerTask: void <init>()>
<it.yup.screens.RosterScreen$AdHocCommandsHandler: void <init>(it.yup.screens.RosterScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.screens.MessageComposerScreen$ItemCommandListener1: void <init>(it.yup.screens.MessageComposerScreen)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.MessageComposerScreen$ItemStateListener1: void <init>(it.yup.screens.MessageComposerScreen)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen$RegisterHandler: void <init>(lampiro.screens.RosterScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<lampiro.screens.RosterScreen$AdHocCommandsHandler: void <init>(lampiro.screens.RosterScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.push/0	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.read/1	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.push/1	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.push/2	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.get/0	<it.yup.xml.KXmlParser: java.lang.String get(int)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.push/3	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.error/1	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void pushEntity()>/it.yup.xml.KXmlParser.push/4	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.readName/0	<it.yup.xml.KXmlParser: java.lang.String readName()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.skip/0	<it.yup.xml.KXmlParser: void skip()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/1	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/2	<it.yup.xml.KXmlParser: void read(char)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/3	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.skip/1	<it.yup.xml.KXmlParser: void skip()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/4	<it.yup.xml.KXmlParser: void read(char)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/5	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.readName/1	<it.yup.xml.KXmlParser: java.lang.String readName()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.error/1	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.ensureCapacity/0	<it.yup.xml.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.skip/2	<it.yup.xml.KXmlParser: void skip()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.peek/1	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.error/2	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/6	<it.yup.xml.KXmlParser: void read(char)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.skip/3	<it.yup.xml.KXmlParser: void skip()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.peek/2	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.error/3	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/7	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.pushText/0	<it.yup.xml.KXmlParser: void pushText(int,boolean)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.get/0	<it.yup.xml.KXmlParser: java.lang.String get(int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.read/8	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.ensureCapacity/1	<it.yup.xml.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/it.yup.xml.KXmlParser.adjustNsp/0	<it.yup.xml.KXmlParser: boolean adjustNsp()>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.read/1	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.readName/0	<it.yup.xml.KXmlParser: java.lang.String readName()>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.skip/0	<it.yup.xml.KXmlParser: void skip()>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.read/2	<it.yup.xml.KXmlParser: void read(char)>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseEndTag()>/it.yup.xml.KXmlParser.error/1	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.pushEntity/0	<it.yup.xml.KXmlParser: void pushEntity()>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.push/0	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.read/1	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.push/1	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void pushText(int,boolean)>/it.yup.xml.KXmlParser.peek/1	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/1	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/1	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/2	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/3	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/4	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.push/0	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/5	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.push/1	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/2	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/3	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/6	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/7	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/8	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.parseStartTag/0	<it.yup.xml.KXmlParser: void parseStartTag(boolean)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/1	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/2	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/3	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/9	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/10	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/4	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/4	<it.yup.xml.KXmlParser: void read(char)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.parseDoctype/0	<it.yup.xml.KXmlParser: void parseDoctype(boolean)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/5	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/5	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.push/2	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/11	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.peek/12	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.error/6	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/6	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/it.yup.xml.KXmlParser.read/7	<it.yup.xml.KXmlParser: int read()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIScreen.<init>/0	<it.yup.ui.UIScreen: void <init>()>
<it.yup.xmlstream.SASLAuthenticator$PacketListener1: void <init>(it.yup.xmlstream.SASLAuthenticator)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.SASLAuthenticator$PacketListener2: void <init>(it.yup.xmlstream.SASLAuthenticator)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmlstream.SASLAuthenticator$PacketListener3: void <init>(it.yup.xmlstream.SASLAuthenticator)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen$Thread1: void <init>(lampiro.screens.RosterScreen,java.lang.String,int)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.ui.UIGauge$Ticker: void <init>(it.yup.ui.UIGauge)>/java.util.TimerTask.<init>/0	<java.util.TimerTask: void <init>()>
<it.yup.transport.SocketChannel$Runnable1: void <init>(it.yup.transport.SocketChannel)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.transport.SocketChannel$TimerTask1: void <init>(it.yup.transport.SocketChannel)>/java.util.TimerTask.<init>/0	<java.util.TimerTask: void <init>()>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener1: void <init>(it.yup.xmpp.FTReceiver$OpenListener)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.FTReceiver$OpenListener$PacketListener2: void <init>(it.yup.xmpp.FTReceiver$OpenListener)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.util.RMSIndex$DefaultUTF8Comparator: void <init>(it.yup.util.RMSIndex)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/java.util.Hashtable.<init>/0	<java.util.Hashtable: void <init>()>
<it.yup.xmpp.Roster: void <init>(it.yup.xmpp.XMPPClient)>/java.util.Hashtable.<init>/1	<java.util.Hashtable: void <init>(int)>
<lampiro.screens.ChatScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void updateHeader()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void updateHeader()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen: void updateHeader()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void pushEntity()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseStartTag(boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseEndTag()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void pushEntity()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void parseStartTag(boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void parseEndTag()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.Utils.getBytesUtf8/0	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.Utils.getBytesUtf8/1	<it.yup.util.Utils: byte[] getBytesUtf8(java.lang.String)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xml.BProcessor.parse/1	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIHLayout.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIHLayout.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIHLayout.isGroup/0	<it.yup.ui.UILayout: boolean isGroup()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIHLayout.drawSegmentedBorder/0	<it.yup.ui.UILayout: void drawSegmentedBorder(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.getHeight/1	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.getHeight/2	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.isGroup/0	<it.yup.ui.UILayout: boolean isGroup()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.drawSegmentedBorder/0	<it.yup.ui.UILayout: void drawSegmentedBorder(javax.microedition.lcdui.Graphics,int,int)>
<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>/lampiro.screens.MessageComposerScreen.menuAction/0	<lampiro.screens.GrpMessageComposerScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.MUCScreen: void <init>(it.yup.xmpp.Contact)>/it.yup.ui.UILabel.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIPanel: void insertItemAt(it.yup.ui.UIItem,int)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIItem: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UILayout: boolean contains(it.yup.ui.UIItem)>/it.yup.ui.UIIContainer.contains/0	<it.yup.ui.UIPanel: boolean contains(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.packets.Presence.getStatus/0	<it.yup.xmpp.packets.Presence: java.lang.String getStatus()>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.ui.UILabel.getImg/0	<it.yup.ui.UILabel: javax.microedition.lcdui.Image getImg()>
<lampiro.screens.ChatScreen: void showNotify()>/it.yup.ui.UILabel.setImg/0	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<lampiro.screens.ChatScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.setImg/0	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.TaskListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.GroupsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.DataFormScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<it.yup.ui.UIScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.TaskListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.GroupsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.DataFormScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<it.yup.ui.UIScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.SubscribeScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.ChatScreen$ForwardScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.AddContactScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.MessageComposerScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.OptionsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.TaskListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.GroupsScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.DataFormScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.DebugScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.GatewayRegisterScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.MUCScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<it.yup.tests.UITestMidlet$TestScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIItem: boolean askRepaint()>/it.yup.ui.UIScreen.askRepaint/0	<lampiro.screens.RosterScreen: boolean askRepaint()>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/2	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void sendReply(java.lang.String,it.yup.xml.Element)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.CommandExecutor: void init(java.lang.String[],java.lang.String)>/it.yup.xml.Element.setAttribute/1	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void createControls()>/it.yup.ui.UIItem.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.xmlstream.BasicXmlStream: boolean areMatching(it.yup.xml.Element,it.yup.xmlstream.EventQuery)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream: boolean areMatching(it.yup.xml.Element,it.yup.xmlstream.EventQuery)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<lampiro.screens.RegisterScreen$1: void <init>(lampiro.screens.RegisterScreen)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<lampiro.screens.RosterScreen$IQResultListener2: void <init>(lampiro.screens.RosterScreen,lampiro.screens.RosterScreen$IQResultListener2)>/lampiro.screens.RosterScreen$IQResultListener2.<init>/0	<lampiro.screens.RosterScreen$IQResultListener2: void <init>(lampiro.screens.RosterScreen)>
<it.yup.screens.RegisterScreen$1: void <init>(it.yup.screens.RegisterScreen)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.ui.UICanvas$1: void <init>(it.yup.ui.UICanvas,it.yup.ui.UIScreen)>/java.util.TimerTask.<init>/0	<java.util.TimerTask: void <init>()>
<com.jcraft.jzlib.Tree: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.InnerMMScreen$1: void <init>(lampiro.screens.InnerMMScreen)>/java.lang.Thread.<init>/0	<java.lang.Thread: void <init>()>
<it.yup.xmlstream.SASLAuthenticator: void <init>()>/it.yup.xmlstream.Initializer.<init>/0	<it.yup.xmlstream.Initializer: void <init>(java.lang.String,boolean)>
<it.yup.ui.UICanvas: void keyRepeated(int)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/it.yup.xmlstream.EventQuery.<init>/0	<it.yup.xmlstream.EventQuery: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/it.yup.xmpp.Roster$IQResultListener2.<init>/0	<it.yup.xmpp.Roster$IQResultListener2: void <init>(it.yup.xmpp.Roster,it.yup.xmpp.Roster$IQResultListener2)>
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Iq.<init>/0	<it.yup.xmpp.packets.Iq: void <init>(java.lang.String,java.lang.String)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/java.lang.Boolean.<init>/0	<java.lang.Boolean: void <init>(boolean)>
<it.yup.xmlstream.KXmlParser: int parseLegacy(boolean)>/java.lang.Boolean.<init>/1	<java.lang.Boolean: void <init>(boolean)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/lampiro.screens.ChatScreen$UICutLabel.<init>/0	<lampiro.screens.ChatScreen$UICutLabel: void <init>(lampiro.screens.ChatScreen,java.lang.String,java.lang.String)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/java.lang.Boolean.<init>/0	<java.lang.Boolean: void <init>(boolean)>
<it.yup.xml.KXmlParser: int parseLegacy(boolean)>/java.lang.Boolean.<init>/1	<java.lang.Boolean: void <init>(boolean)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIMenu.<init>/0	<it.yup.ui.UIMenu: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UILabel.<init>/1	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIHLayout.<init>/0	<it.yup.ui.UIHLayout: void <init>(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIButton.<init>/0	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIButton.<init>/1	<it.yup.ui.UIButton: void <init>(java.lang.String)>
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/javax.microedition.lcdui.StringItem.<init>/0	<javax.microedition.lcdui.StringItem: void <init>(java.lang.String,java.lang.String,int)>
<it.yup.xmpp.IqManager: void purge()>/java.util.Vector.<init>/0	<java.util.Vector: void <init>()>
<com.jcraft.jzlib.ZStream: void flush_pending()>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.Roster: void purge()>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UILabel.setBg_color/2	<it.yup.ui.UIItem: void setBg_color(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UILabel.setFg_color/4	<it.yup.ui.UIItem: void setFg_color(int)>
<lampiro.screens.RosterScreen: void updateScreen()>/it.yup.ui.UILabel.setFont/0	<it.yup.ui.UILabel: void setFont(javax.microedition.lcdui.Font)>
<lampiro.screens.RegisterScreen: void showNotify()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIAccordion.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.RosterScreen: boolean keyPressed(int)>/it.yup.ui.UIAccordion.setSelectedIndex/1	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.ShowMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/1	<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/2	<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/3	<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.menuAction/4	<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void <init>(it.yup.screens.DataFormScreen,javax.microedition.lcdui.StringItem,it.yup.xmpp.packets.DataForm$Field)>/javax.microedition.lcdui.StringItem.setText/0	<javax.microedition.lcdui.StringItem: void setText(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.StringItem.setText/0	<javax.microedition.lcdui.StringItem: void setText(java.lang.String)>
<it.yup.screens.DataFormScreen$ListChoiceHandler: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/javax.microedition.lcdui.StringItem.setText/1	<javax.microedition.lcdui.StringItem: void setText(java.lang.String)>
<lampiro.screens.TaskListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.CommandListScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.AddContactScreen: void getGateways()>/it.yup.xmpp.Roster.getContactByJid/0	<it.yup.xmpp.Roster: it.yup.xmpp.Contact getContactByJid(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void addGatewayGroup(it.yup.xmpp.Contact,it.yup.xml.Element)>/it.yup.xml.Element.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void fillForm()>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.DataFormScreen: void fillForm()>/it.yup.ui.UICombobox.getSelectedFlags/0	<it.yup.ui.UICombobox: boolean[] getSelectedFlags()>
<lampiro.screens.DataFormScreen: void fillForm()>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<com.jcraft.jzlib.Inflate: int inflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.proc/0	<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.Inflate: int inflate(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.reset/0	<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>
<com.jcraft.jzlib.Inflate: int inflateEnd(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfBlocks.free/0	<com.jcraft.jzlib.InfBlocks: void free(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.Inflate: int inflateSetDictionary(com.jcraft.jzlib.ZStream,byte[],int)>/com.jcraft.jzlib.InfBlocks.set_dictionary/0	<com.jcraft.jzlib.InfBlocks: void set_dictionary(byte[],int,int)>
<lampiro.screens.ChatScreen: boolean updateResConversation(java.lang.String)>/lampiro.screens.ChatScreen.wrapMessage/0	<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.ui.UILabel.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.ui.UILabel.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.ui.UIAccordion.getSubPanelElements/0	<it.yup.ui.UIAccordion: java.util.Enumeration getSubPanelElements(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.ui.UILabel.setImg/0	<it.yup.ui.UILabel: void setImg(javax.microedition.lcdui.Image)>
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/it.yup.xmpp.packets.Iq.addElement/0	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/lampiro.screens.ChatScreen$UICutLabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/lampiro.screens.ChatScreen$UICutLabel.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/lampiro.screens.ChatScreen$UICutLabel.setTextLines/0	<it.yup.ui.UILabel: void setTextLines(java.util.Vector)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIHLayout.setGroup/0	<it.yup.ui.UILayout: void setGroup(boolean)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIButton.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIButton.setAnchorPoint/1	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIHLayout.insert/0	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIHLayout.insert/1	<it.yup.ui.UIHLayout: void insert(it.yup.ui.UIItem,int,int,int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UILabel.setWrappable/0	<it.yup.ui.UILabel: void setWrappable(boolean,int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UILabel.setFocusable/0	<it.yup.ui.UIItem: void setFocusable(boolean)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UILabel.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIHLayout.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/javax.microedition.lcdui.StringItem.setDefaultCommand/0	<javax.microedition.lcdui.StringItem: void setDefaultCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/javax.microedition.lcdui.StringItem.addCommand/0	<javax.microedition.lcdui.StringItem: void addCommand(javax.microedition.lcdui.Command)>
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/javax.microedition.lcdui.StringItem.setItemCommandListener/0	<javax.microedition.lcdui.StringItem: void setItemCommandListener(javax.microedition.lcdui.ItemCommandListener)>
<it.yup.screens.DataFormScreen: void setShowAction(javax.microedition.lcdui.Command)>/javax.microedition.lcdui.StringItem.setLayout/0	<javax.microedition.lcdui.StringItem: void setLayout(int)>
<it.yup.xmpp.IqManager: void purge()>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.RMSIndex.open/0	<it.yup.util.RMSIndex: boolean open()>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.RMSIndex.load/0	<it.yup.util.RMSIndex: byte[] load(byte[])>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.RMSIndex.load/1	<it.yup.util.RMSIndex: byte[] load(byte[])>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xmpp.XMPPClient.showAlert/0	<it.yup.xmpp.XMPPClient: void showAlert(javax.microedition.lcdui.AlertType,java.lang.String,java.lang.String,java.lang.Object)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.RMSIndex.close/0	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.RMSIndex.close/1	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.util.RMSIndex.close/2	<it.yup.util.RMSIndex: boolean close()>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xmpp.Roster.updateRosterItem/0	<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>
<it.yup.xmpp.Roster: void readFromStorage()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.MUCScreen: java.lang.String getLabelHeader(lampiro.screens.ChatScreen$ConversationEntry)>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$6/0	<lampiro.screens.RosterScreen: boolean access$6(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$6/1	<lampiro.screens.RosterScreen: boolean access$6(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$7/0	<lampiro.screens.RosterScreen: java.util.Hashtable access$7()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$8/0	<lampiro.screens.RosterScreen: it.yup.ui.UIMenu access$8(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$6/2	<lampiro.screens.RosterScreen: boolean access$6(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$9/0	<lampiro.screens.RosterScreen: boolean access$9(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.getInstance/1	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$10/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion access$10(lampiro.screens.RosterScreen)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.getInstance/2	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen.access$11/0	<lampiro.screens.RosterScreen: boolean access$11(lampiro.screens.RosterScreen,boolean)>
<com.jcraft.jzlib.Deflate: int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int)>/com.jcraft.jzlib.Deflate.deflateReset/0	<com.jcraft.jzlib.Deflate: int deflateReset(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.Deflate: void putShortMSB(int)>/com.jcraft.jzlib.Deflate.put_byte/0	<com.jcraft.jzlib.Deflate: void put_byte(byte)>
<com.jcraft.jzlib.Deflate: void putShortMSB(int)>/com.jcraft.jzlib.Deflate.put_byte/1	<com.jcraft.jzlib.Deflate: void put_byte(byte)>
<com.jcraft.jzlib.Deflate: int deflate_stored(int)>/com.jcraft.jzlib.Deflate.fill_window/0	<com.jcraft.jzlib.Deflate: void fill_window()>
<com.jcraft.jzlib.Deflate: int deflate_stored(int)>/com.jcraft.jzlib.Deflate.flush_block_only/0	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_stored(int)>/com.jcraft.jzlib.Deflate.flush_block_only/1	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_stored(int)>/com.jcraft.jzlib.Deflate.flush_block_only/2	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_fast(int)>/com.jcraft.jzlib.Deflate.fill_window/0	<com.jcraft.jzlib.Deflate: void fill_window()>
<com.jcraft.jzlib.Deflate: int deflate_fast(int)>/com.jcraft.jzlib.Deflate.longest_match/0	<com.jcraft.jzlib.Deflate: int longest_match(int)>
<com.jcraft.jzlib.Deflate: int deflate_fast(int)>/com.jcraft.jzlib.Deflate._tr_tally/0	<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>
<com.jcraft.jzlib.Deflate: int deflate_fast(int)>/com.jcraft.jzlib.Deflate._tr_tally/1	<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>
<com.jcraft.jzlib.Deflate: int deflate_fast(int)>/com.jcraft.jzlib.Deflate.flush_block_only/0	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_fast(int)>/com.jcraft.jzlib.Deflate.flush_block_only/1	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate.fill_window/0	<com.jcraft.jzlib.Deflate: void fill_window()>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate.longest_match/0	<com.jcraft.jzlib.Deflate: int longest_match(int)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate._tr_tally/0	<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate.flush_block_only/0	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate._tr_tally/1	<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate.flush_block_only/1	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate._tr_tally/2	<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>
<com.jcraft.jzlib.Deflate: int deflate_slow(int)>/com.jcraft.jzlib.Deflate.flush_block_only/2	<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>
<com.jcraft.jzlib.Deflate: void _tr_align()>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void _tr_align()>/com.jcraft.jzlib.Deflate.send_code/0	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void _tr_align()>/com.jcraft.jzlib.Deflate.bi_flush/0	<com.jcraft.jzlib.Deflate: void bi_flush()>
<com.jcraft.jzlib.Deflate: void _tr_align()>/com.jcraft.jzlib.Deflate.send_bits/1	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void _tr_align()>/com.jcraft.jzlib.Deflate.send_code/1	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void _tr_align()>/com.jcraft.jzlib.Deflate.bi_flush/1	<com.jcraft.jzlib.Deflate: void bi_flush()>
<com.jcraft.jzlib.Deflate: void _tr_stored_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void _tr_stored_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.copy_block/0	<com.jcraft.jzlib.Deflate: void copy_block(int,int,boolean)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.setSelectedItem/0	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIHLayout.setSelectedItem/1	<it.yup.ui.UILayout: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItem/0	<it.yup.ui.UIPanel: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.removeItemAt/0	<it.yup.ui.UIPanel: void removeItemAt(int)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIPanel.getSelectedItem/1	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.setText/0	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICheckbox.setChecked/0	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICheckbox.setChecked/1	<it.yup.ui.UICheckbox: void setChecked(boolean)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIGauge.cancel/0	<it.yup.ui.UIGauge: void cancel()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.setText/1	<it.yup.ui.UITextField: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.getSelectedIndex/1	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/2	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UICombobox.setSelectedIndex/0	<it.yup.ui.UICombobox: void setSelectedIndex(int)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UITextField.getText/3	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.Config.saveToStorage/0	<it.yup.xmpp.Config: void saveToStorage()>
<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<lampiro.screens.RosterScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void saveGroups()>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<it.yup.xmpp.packets.DataForm$Field: java.lang.String[] getOption(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.DataForm$Field: java.lang.String[] getOption(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem keyPressed(int,int)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<it.yup.xmpp.CommandExecutor: void sendPacket(it.yup.xmpp.packets.Iq)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<it.yup.xmpp.Roster: void updateGateways(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/it.yup.ui.UICanvas.getCurrentScreen/0	<it.yup.ui.UICanvas: it.yup.ui.UIScreen getCurrentScreen()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/0	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/1	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/2	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/3	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/4	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/5	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/6	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/7	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.util.ResourceManager.getString/8	<it.yup.util.ResourceManager: java.lang.String getString(int)>
<com.jcraft.jzlib.ZStream: void flush_pending()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jcraft.jzlib.ZStream: void flush_pending()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.BProcessor.parse/0	<it.yup.xml.BProcessor: it.yup.xml.Element parse(byte[])>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.getText/0	<it.yup.ui.UILabel: java.lang.String getText()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/java.util.Hashtable.remove/1	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/com.jcraft.jzlib.InfBlocks.reset/0	<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addElement/2	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/7	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/8	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/4	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/6	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getChildByName/3	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.GroupsScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.Roster: void subscribeContact(it.yup.xmpp.Contact,boolean)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.getXmppListener/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.GatewayRegisterScreen: void <init>(it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Contact: void updatePresence(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.CommandExecutor: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setBg_color/0	<it.yup.ui.UIAccordion: void setBg_color(int)>
<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UICanvas: void open(it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>/it.yup.ui.UIMenu.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UICanvas: boolean close(it.yup.ui.UIScreen)>/it.yup.ui.UIMenu.remove/0	<it.yup.ui.UIMenu: it.yup.ui.UIItem remove(int)>
<lampiro.screens.AddContactScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.SendMMScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.setAttribute/6	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addElement/4	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/8	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.packets.Message: java.lang.String getErrorText()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Contact: void compileMessage(java.lang.String,it.yup.xmpp.packets.Message,java.lang.String)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.packets.DataForm: void parseForm(it.yup.xml.Element)>/it.yup.xml.Element.getText/2	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UICanvas: boolean handlePointEvent(int,int,it.yup.ui.UIScreen,boolean)>/it.yup.ui.UIMenu.getItemList/0	<it.yup.ui.UIMenu: java.util.Vector getItemList()>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIAccordion: it.yup.ui.UIVLayout wrapItem(it.yup.ui.UIItem)>/it.yup.ui.UIItem.getHeight/1	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICanvas: void keyPressed(int)>/it.yup.ui.UIMenu.isOpenedState/0	<it.yup.ui.UIMenu: boolean isOpenedState()>
<it.yup.ui.UICanvas: void keyPressed(int)>/it.yup.ui.UIMenu.getSelectedIndex/0	<it.yup.ui.UIMenu: int getSelectedIndex()>
<it.yup.ui.UICanvas: void keyRepeated(int)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.getPanelSize/0	<it.yup.ui.UIAccordion: int getPanelSize(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.removePanelItem/0	<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/0	<it.yup.xmpp.Contact: boolean isVisible()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/1	<it.yup.xmpp.Contact: boolean isVisible()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.getPanelSize/1	<it.yup.ui.UIAccordion: int getPanelSize(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.getPanelItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem getPanelItem(it.yup.ui.UIItem,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.compareTo/0	<it.yup.xmpp.Contact: int compareTo(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.insertPanelItem/0	<it.yup.ui.UIAccordion: void insertPanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.unread_msg/0	<it.yup.xmpp.Contact: boolean unread_msg()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.openLabel/0	<it.yup.ui.UIAccordion: void openLabel(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.setSelectedItem/0	<it.yup.ui.UIPanel: void setSelectedItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.xmpp.Contact.isVisible/2	<it.yup.xmpp.Contact: boolean isVisible()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.removePanelItem/1	<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.getPanelSize/2	<it.yup.ui.UIAccordion: int getPanelSize(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/it.yup.ui.UIAccordion.removeItem/0	<it.yup.ui.UIAccordion: int removeItem(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIGroup.checkRemoval/0	<lampiro.screens.RosterScreen$UIGroup: boolean checkRemoval(lampiro.screens.RosterScreen$UIContact)>
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.ChatScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/it.yup.xmpp.XMPPClient.getInstance/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient getInstance()>
<lampiro.screens.ChatScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/it.yup.xmpp.Contact.userhost/0	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.ChatScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/it.yup.xmpp.Contact.userhost/1	<it.yup.xmpp.Contact: java.lang.String userhost(java.lang.String)>
<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>/it.yup.util.Utils.find_urls/0	<it.yup.util.Utils: java.util.Vector find_urls(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.screens.DataResultScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.DataFormListener.execute/0	<it.yup.xmpp.CommandExecutor: boolean execute(int)>
<it.yup.screens.DataResultScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.DataFormListener.execute/1	<it.yup.xmpp.CommandExecutor: boolean execute(int)>
<it.yup.ui.UIRadioButtons: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIGauge: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<it.yup.ui.UIGauge: boolean keyPressed(int)>
<lampiro.screens.RosterScreen: void packetReceived(it.yup.xml.Element)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmlstream.BasicXmlStream$ResourceBinding: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.screens.DataFormScreen: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.xmpp.DataFormListener.execute/0	<it.yup.xmpp.CommandExecutor: boolean execute(int)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/1	<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UIScreen: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIPanel: void setScreen(it.yup.ui.UIScreen)>
<lampiro.screens.AddContactScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIGauge: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.ChatScreen: void checkSize(it.yup.ui.UIEmoLabel)>/java.util.Vector.setSize/0	<java.util.Vector: void setSize(int)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void <init>(it.yup.xmpp.Contact,it.yup.xmpp.FTReceiver$OpenListener)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<lampiro.screens.DataFormScreen: void addDesc()>/it.yup.ui.UIItem.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xml.Element.getChildrenByName/1	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xmpp.Config.getData/0	<it.yup.xmpp.Config: byte[] getData(byte[])>
<it.yup.xmpp.Roster: void loadGateways()>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xmpp.Config.setData/0	<it.yup.xmpp.Config: void setData(byte[],byte[])>
<it.yup.screens.RegisterScreen$ItemCommandListener1: void <init>(it.yup.screens.RegisterScreen)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<it.yup.screens.RegisterScreen$ItemStateListener1: void <init>(it.yup.screens.RegisterScreen)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIContact.<init>/0	<lampiro.screens.RosterScreen$UIContact: void <init>(lampiro.screens.RosterScreen,it.yup.xmpp.Contact)>
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/com.jcraft.jzlib.InfCodes.<init>/0	<com.jcraft.jzlib.InfCodes: void <init>()>
<com.jcraft.jzlib.InfBlocks: void <init>(com.jcraft.jzlib.ZStream,java.lang.Object,int)>/com.jcraft.jzlib.InfTree.<init>/0	<com.jcraft.jzlib.InfTree: void <init>()>
<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>/lampiro.screens.ChatScreen.getMenu/0	<it.yup.ui.UIScreen: it.yup.ui.UIMenu getMenu()>
<it.yup.xmpp.Config: void setDefault(short,java.lang.String)>/it.yup.xmpp.Config.setProperty/0	<it.yup.xmpp.Config: void setProperty(short,java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/it.yup.xmlstream.KXmlParser.getNamespace/0	<it.yup.xmlstream.KXmlParser: java.lang.String getNamespace(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/it.yup.xmlstream.KXmlParser.getNamespace/1	<it.yup.xmlstream.KXmlParser: java.lang.String getNamespace(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/it.yup.xml.KXmlParser.getNamespace/0	<it.yup.xml.KXmlParser: java.lang.String getNamespace(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/it.yup.xml.KXmlParser.getNamespace/1	<it.yup.xml.KXmlParser: java.lang.String getNamespace(java.lang.String)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/it.yup.xmpp.Config.getProperty/0	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<lampiro.screens.RegisterScreen: void setStatusLabel()>/it.yup.xmpp.Config.getProperty/1	<it.yup.xmpp.Config: java.lang.String getProperty(short,java.lang.String)>
<it.yup.ui.UIScreen: void handleMenuKey(it.yup.ui.UIMenu,int)>/it.yup.ui.UIScreen.menuAction/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RegisterScreen: void placeItems()>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void placeItems()>/it.yup.ui.UIGauge.setOffset/0	<it.yup.ui.UIGauge: void setOffset(int)>
<lampiro.screens.RegisterScreen: void placeItems()>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void placeItems()>/it.yup.ui.UICheckbox.isChecked/1	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void placeItems()>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/it.yup.ui.UIAccordion.getSelectedIndex/0	<it.yup.ui.UIPanel: int getSelectedIndex()>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/it.yup.ui.UIAccordion.clearPanel/0	<it.yup.ui.UIAccordion: void clearPanel(it.yup.ui.UILabel)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/it.yup.ui.UIAccordion.openLabel/0	<it.yup.ui.UIAccordion: void openLabel(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>/it.yup.ui.UIAccordion.setSelectedIndex/0	<it.yup.ui.UIPanel: void setSelectedIndex(int)>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/0	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/0	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/1	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/1	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/2	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/2	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/0	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/3	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/4	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/3	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/5	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/1	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/4	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/2	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/6	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutWidth/7	<it.yup.ui.UIItem: int getLayoutWidth()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/5	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIHLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/3	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/0	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/0	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/1	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/1	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/2	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/0	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/2	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/0	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/3	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/4	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/3	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/5	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/1	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/1	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/4	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/2	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/2	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/6	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getLayoutHeight/7	<it.yup.ui.UIItem: int getLayoutHeight()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getType/5	<it.yup.ui.UIItem: int getType()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UIItem: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UIPanel: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UILayout: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.isDirty/3	<it.yup.ui.UIMenu: boolean isDirty()>
<it.yup.ui.UIVLayout: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint0/3	<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIContact.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmlstream.KXmlParser: int read()>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>/it.yup.xmlstream.KXmlParser.exception/0	<it.yup.xmlstream.KXmlParser: void exception(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String readName()>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: java.lang.String readName()>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: java.lang.String readName()>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: java.lang.String readName()>/it.yup.xmlstream.KXmlParser.push/0	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: java.lang.String readName()>/it.yup.xmlstream.KXmlParser.peek/1	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: java.lang.String readName()>/it.yup.xmlstream.KXmlParser.get/0	<it.yup.xmlstream.KXmlParser: java.lang.String get(int)>
<it.yup.xmlstream.KXmlParser: void skip()>/it.yup.xmlstream.KXmlParser.peek/0	<it.yup.xmlstream.KXmlParser: int peek(int)>
<it.yup.xmlstream.KXmlParser: void skip()>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void read(char)>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void read(char)>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/it.yup.xmlstream.KXmlParser.ensureCapacity/0	<it.yup.xmlstream.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/it.yup.xmlstream.KXmlParser.error/1	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/it.yup.xmlstream.KXmlParser.error/2	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseDoctype(boolean)>/it.yup.xmlstream.KXmlParser.read/0	<it.yup.xmlstream.KXmlParser: int read()>
<it.yup.xmlstream.KXmlParser: void parseDoctype(boolean)>/it.yup.xmlstream.KXmlParser.error/0	<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void parseDoctype(boolean)>/it.yup.xmlstream.KXmlParser.push/0	<it.yup.xmlstream.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: int read()>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void error(java.lang.String)>/it.yup.xml.KXmlParser.exception/0	<it.yup.xml.KXmlParser: void exception(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String readName()>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: java.lang.String readName()>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: java.lang.String readName()>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: java.lang.String readName()>/it.yup.xml.KXmlParser.push/0	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xml.KXmlParser: java.lang.String readName()>/it.yup.xml.KXmlParser.peek/1	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: java.lang.String readName()>/it.yup.xml.KXmlParser.get/0	<it.yup.xml.KXmlParser: java.lang.String get(int)>
<it.yup.xml.KXmlParser: void skip()>/it.yup.xml.KXmlParser.peek/0	<it.yup.xml.KXmlParser: int peek(int)>
<it.yup.xml.KXmlParser: void skip()>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void read(char)>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void read(char)>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/it.yup.xml.KXmlParser.ensureCapacity/0	<it.yup.xml.KXmlParser: java.lang.String[] ensureCapacity(java.lang.String[],int)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/it.yup.xml.KXmlParser.error/1	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/it.yup.xml.KXmlParser.error/2	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseDoctype(boolean)>/it.yup.xml.KXmlParser.read/0	<it.yup.xml.KXmlParser: int read()>
<it.yup.xml.KXmlParser: void parseDoctype(boolean)>/it.yup.xml.KXmlParser.error/0	<it.yup.xml.KXmlParser: void error(java.lang.String)>
<it.yup.xml.KXmlParser: void parseDoctype(boolean)>/it.yup.xml.KXmlParser.push/0	<it.yup.xml.KXmlParser: void push(int)>
<it.yup.xmlstream.KXmlParser: void error(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: void read(char)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void error(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: void read(char)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.StringBuilder.<init>/3	<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfTree.inflate_trees_fixed/0	<com.jcraft.jzlib.InfTree: int inflate_trees_fixed(int[],int[],int[][],int[][],com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfBlocks: void set_dictionary(byte[],int,int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/it.yup.xmpp.Contact.resource/0	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/it.yup.xmpp.Contact.resource/1	<it.yup.xmpp.Contact: java.lang.String resource(java.lang.String)>
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/it.yup.xmpp.Contact.user/0	<it.yup.xmpp.Contact: java.lang.String user(java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void createMUC(it.yup.xmpp.IQResultListener)>/it.yup.xmpp.packets.Presence.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void addGatewayGroup(it.yup.xmpp.Contact,it.yup.xml.Element)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.xmpp.Config.resetStorage/0	<it.yup.xmpp.Config: void resetStorage(boolean)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UICheckbox.isChecked/1	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.xmpp.Config.resetStorage/1	<it.yup.xmpp.Config: void resetStorage(boolean)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UICheckbox.isChecked/2	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UILabel.setAnchorPoint/0	<it.yup.ui.UILabel: void setAnchorPoint(int)>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UIGauge.cancel/0	<it.yup.ui.UIGauge: void cancel()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UIGauge.start/0	<it.yup.ui.UIGauge: void start()>
<lampiro.screens.RegisterScreen: void login()>/it.yup.ui.UITextField.setWrappable/0	<it.yup.ui.UITextField: void setWrappable(boolean)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.getText/0	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.getText/1	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICombobox.getSelectedIndex/0	<it.yup.ui.UICombobox: int getSelectedIndex()>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.getText/2	<it.yup.ui.UITextField: java.lang.String getText()>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICheckbox.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.setSubmenu/1	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.setSubmenu/2	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UIButton.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICheckbox.setSubmenu/1	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.setSubmenu/3	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UITextField.setSubmenu/4	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICombobox.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICheckbox.setSubmenu/2	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICheckbox.setSubmenu/3	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UICheckbox.isChecked/0	<it.yup.ui.UICheckbox: boolean isChecked()>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UIButton.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RegisterScreen: void checkLogin()>/it.yup.ui.UIButton.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.xmpp.Contact.getAvailability/0	<it.yup.xmpp.Contact: int getAvailability()>
<com.jcraft.jzlib.Inflate: int inflateReset(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfBlocks.reset/0	<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>
<lampiro.screens.RosterScreen$IQResultListener2: void <init>(lampiro.screens.RosterScreen)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<it.yup.xmpp.Roster$IQResultListener2: void <init>(it.yup.xmpp.Roster,it.yup.xmpp.Roster$IQResultListener2)>/it.yup.xmpp.Roster$IQResultListener2.<init>/0	<it.yup.xmpp.Roster$IQResultListener2: void <init>(it.yup.xmpp.Roster)>
<com.jcraft.jzlib.StaticTree: void <clinit>()>/com.jcraft.jzlib.StaticTree.<init>/0	<com.jcraft.jzlib.StaticTree: void <init>(short[],int[],int,int,int)>
<com.jcraft.jzlib.StaticTree: void <clinit>()>/com.jcraft.jzlib.StaticTree.<init>/1	<com.jcraft.jzlib.StaticTree: void <init>(short[],int[],int,int,int)>
<com.jcraft.jzlib.StaticTree: void <clinit>()>/com.jcraft.jzlib.StaticTree.<init>/2	<com.jcraft.jzlib.StaticTree: void <init>(short[],int[],int,int,int)>
<lampiro.screens.ChatScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/lampiro.screens.ChatScreen$ConversationEntry.<init>/0	<lampiro.screens.ChatScreen$ConversationEntry: void <init>(java.lang.String,byte)>
<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>/it.yup.ui.UILabel.<init>/0	<it.yup.ui.UILabel: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xmlstream.KXmlParser: boolean adjustNsp()>/java.lang.RuntimeException.<init>/1	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.RuntimeException.<init>/0	<java.lang.RuntimeException: void <init>(java.lang.String)>
<it.yup.xml.KXmlParser: boolean adjustNsp()>/java.lang.RuntimeException.<init>/1	<java.lang.RuntimeException: void <init>(java.lang.String)>
<com.jcraft.jzlib.Deflate: void fill_window()>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.Deflate: boolean _tr_tally(int,int)>/com.jcraft.jzlib.Tree.d_code/0	<com.jcraft.jzlib.Tree: int d_code(int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/0	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/1	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/2	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/3	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/4	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/5	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/6	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/7	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/8	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/9	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/10	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/11	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/12	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/13	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/14	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/15	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/16	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/17	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/18	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/19	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/20	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: void free(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfBlocks.reset/0	<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIAccordion.openLabel/0	<it.yup.ui.UIAccordion: void openLabel(it.yup.ui.UIItem)>
<it.yup.ui.UIMenu: it.yup.ui.UIItem replace(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UIPanel: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UITextField: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/0	<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UICombobox$UIComboScreen: boolean keyPressed(int)>/it.yup.ui.UIScreen.itemAction/2	<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>
<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>/it.yup.ui.UILabel.getTextWidth/0	<it.yup.ui.UIEmoLabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/1	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/java.util.Hashtable.remove/0	<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/2	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/3	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/4	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.getXmppListener/5	<it.yup.xmpp.XMPPClient: it.yup.xmpp.XMPPClient$XmppListener getXmppListener()>
<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIGroup getSelectedUIGroup()>/it.yup.ui.UIAccordion.getSelectedItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.ui.UIAccordion.getSelectedItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen$UIContact getSelectedUIContact()>/it.yup.ui.UIAccordion.getSelectedItem/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem getSelectedItem()>
<it.yup.xmpp.packets.DataForm$Field: java.lang.String[] getOption(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen: void updateHeader()>/it.yup.ui.UIAccordion.getPanelSize/0	<it.yup.ui.UIAccordion: int getPanelSize(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen$UIGroup: boolean reorganizeContact(it.yup.xmpp.Contact,int)>/lampiro.screens.RosterScreen$UIContact.updateContactData/0	<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getChildren/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildren()>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfCodes.init/0	<com.jcraft.jzlib.InfCodes: void init(int,int,int[],int,int[],int,com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfTree.inflate_trees_bits/0	<com.jcraft.jzlib.InfTree: int inflate_trees_bits(int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfTree.inflate_trees_dynamic/0	<com.jcraft.jzlib.InfTree: int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfCodes.init/1	<com.jcraft.jzlib.InfCodes: void init(int,int,int[],int,int[],int,com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfCodes.proc/0	<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfBlocks: int proc(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfCodes.free/0	<com.jcraft.jzlib.InfCodes: void free(com.jcraft.jzlib.ZStream)>
<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>/com.jcraft.jzlib.InfCodes.free/0	<com.jcraft.jzlib.InfCodes: void free(com.jcraft.jzlib.ZStream)>
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.jcraft.jzlib.Deflate: int deflateReset(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.Deflate.tr_init/0	<com.jcraft.jzlib.Deflate: void tr_init()>
<com.jcraft.jzlib.Deflate: int deflateReset(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.Deflate.lm_init/0	<com.jcraft.jzlib.Deflate: void lm_init()>
<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>/com.jcraft.jzlib.Deflate._tr_flush_block/0	<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>
<com.jcraft.jzlib.Deflate: void send_bits(int,int)>/com.jcraft.jzlib.Deflate.put_short/0	<com.jcraft.jzlib.Deflate: void put_short(int)>
<com.jcraft.jzlib.Deflate: void send_code(int,short[])>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void bi_flush()>/com.jcraft.jzlib.Deflate.put_short/0	<com.jcraft.jzlib.Deflate: void put_short(int)>
<com.jcraft.jzlib.Deflate: void bi_flush()>/com.jcraft.jzlib.Deflate.put_byte/0	<com.jcraft.jzlib.Deflate: void put_byte(byte)>
<com.jcraft.jzlib.Deflate: void copy_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.bi_windup/0	<com.jcraft.jzlib.Deflate: void bi_windup()>
<com.jcraft.jzlib.Deflate: void copy_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.put_short/0	<com.jcraft.jzlib.Deflate: void put_short(int)>
<com.jcraft.jzlib.Deflate: void copy_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.put_short/1	<com.jcraft.jzlib.Deflate: void put_short(int)>
<com.jcraft.jzlib.Deflate: void copy_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.put_byte/0	<com.jcraft.jzlib.Deflate: void put_byte(byte[],int,int)>
<lampiro.screens.AlbumScreen: void deleteAlbum(java.lang.String)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addElement/3	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.ContactInfoScreen$1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getText/2	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xml.Element.getText/3	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen$IQResultListener1: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/5	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>/it.yup.xmpp.XMPPClient$XmppListener.removeContact/0	<it.yup.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.xmpp.Contact: boolean supportsMUC(it.yup.xmpp.packets.Presence)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.XMPPClient$DiscoHandler: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/3	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<com.jcraft.jzlib.Deflate: void fill_window()>/com.jcraft.jzlib.ZStream.read_buf/0	<com.jcraft.jzlib.ZStream: int read_buf(byte[],int,int)>
<com.jcraft.jzlib.Deflate: void flush_block_only(boolean)>/com.jcraft.jzlib.ZStream.flush_pending/0	<com.jcraft.jzlib.ZStream: void flush_pending()>
<lampiro.screens.MUCScreen: lampiro.screens.ChatScreen$ConversationEntry wrapMessage(java.lang.String[])>/lampiro.screens.ChatScreen$ConversationEntry.<init>/0	<lampiro.screens.ChatScreen$ConversationEntry: void <init>(java.lang.String,byte)>
<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/lampiro.screens.RosterScreen.getInstance/0	<lampiro.screens.RosterScreen: lampiro.screens.RosterScreen getInstance()>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UISeparator: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UIPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UIGauge: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIItem: void paint0(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.paint/0	<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UILayout: boolean keyPressed(int)>/it.yup.ui.UIItem.keyPressed/0	<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.setPresence/0	<it.yup.xmpp.XMPPClient: void setPresence(int,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getRoster/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Roster getRoster()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UIButton.setSelected/0	<it.yup.ui.UIItem: void setSelected(boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Hashtable.put/0	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.setText/0	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.ui.UILabel.setText/1	<it.yup.ui.UILabel: void setText(java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.getMyContact/0	<it.yup.xmpp.XMPPClient: it.yup.xmpp.Contact getMyContact()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/0	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendPacket/1	<it.yup.xmpp.XMPPClient: void sendPacket(it.yup.xml.Element)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.XMPPClient.sendIQ/1	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setScreen/0	<it.yup.ui.UILayout: void setScreen(it.yup.ui.UIScreen)>
<it.yup.ui.UIScreen: void insert(int,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setDirty/0	<it.yup.ui.UILayout: void setDirty(boolean)>
<lampiro.screens.RosterScreen$UIGroup: void loadGroups()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<com.jcraft.jzlib.InfBlocks: void reset(com.jcraft.jzlib.ZStream,long[])>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean checkRemoval(lampiro.screens.RosterScreen$UIContact)>/it.yup.ui.UIAccordion.getSubpanel/0	<it.yup.ui.UIAccordion: java.util.Vector getSubpanel(it.yup.ui.UIItem)>
<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion access$10(lampiro.screens.RosterScreen)>/lampiro.screens.RosterScreen.getAccordion/0	<lampiro.screens.RosterScreen: it.yup.ui.UIAccordion getAccordion()>
<lampiro.screens.RosterScreen: boolean access$11(lampiro.screens.RosterScreen,boolean)>/lampiro.screens.RosterScreen.filterContacts/0	<lampiro.screens.RosterScreen: boolean filterContacts(boolean)>
<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/lampiro.screens.ChatScreen.updateConversation/0	<lampiro.screens.MUCScreen: boolean updateConversation()>
<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.FTReceiver$OpenListener.answerFT/0	<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>
<lampiro.screens.RosterScreen$FileReceiveScreen: void itemAction(it.yup.ui.UIItem)>/it.yup.xmpp.FTReceiver$OpenListener.answerFT/1	<it.yup.xmpp.FTReceiver$OpenListener: void answerFT(boolean)>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.AlbumScreen: void loadFiles()>/it.yup.xml.Element.getText/2	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.ChatScreen: void checkUrls(java.lang.String)>/it.yup.ui.UIMenu.append/0	<it.yup.ui.UIMenu: int append(it.yup.ui.UIItem)>
<com.jcraft.jzlib.Deflate: int deflateReset(com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.setDirty/0	<it.yup.ui.UIPanel: void setDirty(boolean)>
<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIScreen.paint/0	<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>
<com.jcraft.jzlib.InfCodes: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.jcraft.jzlib.InfTree: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Roster.retrieveRoster/0	<it.yup.xmpp.Roster: void retrieveRoster(boolean,boolean)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/java.util.Vector.addElement/0	<java.util.Vector: void addElement(java.lang.Object)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getChildrenByName/0	<it.yup.xml.Element: it.yup.xml.Element[] getChildrenByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/2	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/3	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/4	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/5	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/it.yup.ui.UILabel.getTextWidth/0	<it.yup.ui.UIEmoLabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.ui.UILabel: java.util.Vector splitLongStrings(java.lang.String,int,javax.microedition.lcdui.Font)>/it.yup.ui.UILabel.getTextWidth/1	<it.yup.ui.UIEmoLabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.xmpp.FTReceiver$OpenListener: void acceptSession()>/it.yup.xml.Element.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.ui.UIAccordion: void removePanelItem(it.yup.ui.UIItem,it.yup.ui.UIItem)>/it.yup.ui.UIItem.setSelected/0	<it.yup.ui.UILayout: void setSelected(boolean)>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient$XmppListener.updateContact/0	<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient$XmppListener.removeContact/0	<it.yup.screens.RosterScreen: void removeContact(it.yup.xmpp.Contact)>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient$XmppListener.updateContact/1	<it.yup.screens.RosterScreen: void updateContact(it.yup.xmpp.Contact,int)>
<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/lampiro.screens.ChatScreen.updateConversation/0	<lampiro.screens.ChatScreen: boolean updateConversation()>
<it.yup.xmpp.Roster$IQResultListener2: void <init>(it.yup.xmpp.Roster)>/it.yup.xmpp.IQResultListener.<init>/0	<it.yup.xmpp.IQResultListener: void <init>()>
<com.jcraft.jzlib.StaticTree: void <init>(short[],int[],int,int,int)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.jcraft.jzlib.Deflate: void put_byte(byte[],int,int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICanvas.getInstance/0	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICanvas.getInstance/1	<it.yup.ui.UICanvas: it.yup.ui.UICanvas getInstance()>
<com.jcraft.jzlib.ZStream: int read_buf(byte[],int,int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<it.yup.ui.UIEmoLabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>/it.yup.ui.UIEmoLabel.getTextWidth/0	<it.yup.ui.UIEmoLabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfCodes.inflate_fast/0	<com.jcraft.jzlib.InfCodes: int inflate_fast(int,int,int[],int,int[],int,com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/5	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.setAttribute/6	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addElement/4	<it.yup.xml.Element: it.yup.xml.Element addElement(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void queryCmd(java.lang.String)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$MUCStateHandler: void handleResult(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void removeAllContacts()>/it.yup.ui.UIAccordion.removeAllItems/0	<it.yup.ui.UIAccordion: void removeAllItems()>
<lampiro.screens.RosterScreen: void removeAllContacts()>/it.yup.ui.UIAccordion.removeAllItems/1	<it.yup.ui.UIAccordion: void removeAllItems()>
<lampiro.screens.RosterScreen: void rosterXsubscription(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/4	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void openContactMenu()>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/java.util.Hashtable.clear/0	<java.util.Hashtable: void clear()>
<lampiro.screens.RosterScreen: void getIMGateways(java.lang.String)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.ChatScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/lampiro.screens.RosterScreen.reorganizeContact/0	<lampiro.screens.RosterScreen: boolean reorganizeContact(it.yup.xmpp.Contact,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/0	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/1	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/2	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/3	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/4	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/5	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/6	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/7	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/8	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/9	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/10	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/11	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/12	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/13	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<com.jcraft.jzlib.InfCodes: int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.InfBlocks.inflate_flush/14	<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>
<it.yup.ui.UIEmoLabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>/it.yup.ui.UIEmoLabel.findEmoTuple/0	<it.yup.ui.UIEmoLabel: java.lang.Object[] findEmoTuple(java.lang.String)>
<com.jcraft.jzlib.InfTree: int inflate_trees_bits(int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfTree.initWorkArea/0	<com.jcraft.jzlib.InfTree: void initWorkArea(int)>
<com.jcraft.jzlib.InfTree: int inflate_trees_bits(int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfTree.huft_build/0	<com.jcraft.jzlib.InfTree: int huft_build(int[],int,int,int,int[],int[],int[],int[],int[],int[],int[])>
<com.jcraft.jzlib.InfTree: int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfTree.initWorkArea/0	<com.jcraft.jzlib.InfTree: void initWorkArea(int)>
<com.jcraft.jzlib.InfTree: int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfTree.huft_build/0	<com.jcraft.jzlib.InfTree: int huft_build(int[],int,int,int,int[],int[],int[],int[],int[],int[],int[])>
<com.jcraft.jzlib.InfTree: int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfTree.initWorkArea/1	<com.jcraft.jzlib.InfTree: void initWorkArea(int)>
<com.jcraft.jzlib.InfTree: int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream)>/com.jcraft.jzlib.InfTree.huft_build/1	<com.jcraft.jzlib.InfTree: int huft_build(int[],int,int,int,int[],int[],int[],int[],int[],int[],int[])>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.medColor/0	<it.yup.ui.UIUtils: int medColor(int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.medColor/1	<it.yup.ui.UIUtils: int medColor(int,int)>
<it.yup.ui.UIGauge: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIUtils.colorize/0	<it.yup.ui.UIUtils: int colorize(int,int)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/0	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/1	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/2	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICombobox$UIComboScreen.access$0/3	<it.yup.ui.UICombobox$UIComboScreen: it.yup.ui.UIPanel access$0(it.yup.ui.UICombobox$UIComboScreen)>
<com.jcraft.jzlib.Deflate: void tr_init()>/com.jcraft.jzlib.Deflate.init_block/0	<com.jcraft.jzlib.Deflate: void init_block()>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.set_data_type/0	<com.jcraft.jzlib.Deflate: void set_data_type()>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.build_bl_tree/0	<com.jcraft.jzlib.Deflate: int build_bl_tree()>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate._tr_stored_block/0	<com.jcraft.jzlib.Deflate: void _tr_stored_block(int,int,boolean)>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.compress_block/0	<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.send_bits/1	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.send_all_trees/0	<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.compress_block/1	<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.init_block/0	<com.jcraft.jzlib.Deflate: void init_block()>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Deflate.bi_windup/0	<com.jcraft.jzlib.Deflate: void bi_windup()>
<com.jcraft.jzlib.Deflate: void put_short(int)>/com.jcraft.jzlib.Deflate.put_byte/0	<com.jcraft.jzlib.Deflate: void put_byte(byte)>
<com.jcraft.jzlib.Deflate: void put_short(int)>/com.jcraft.jzlib.Deflate.put_byte/1	<com.jcraft.jzlib.Deflate: void put_byte(byte)>
<com.jcraft.jzlib.Deflate: void bi_windup()>/com.jcraft.jzlib.Deflate.put_short/0	<com.jcraft.jzlib.Deflate: void put_short(int)>
<com.jcraft.jzlib.Deflate: void bi_windup()>/com.jcraft.jzlib.Deflate.put_byte/0	<com.jcraft.jzlib.Deflate: void put_byte(byte)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/lampiro.screens.DataFormScreen.getGraphics/0	<it.yup.ui.UIScreen: javax.microedition.lcdui.Graphics getGraphics()>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/lampiro.screens.DataFormScreen.askRepaint/0	<it.yup.ui.UIScreen: boolean askRepaint()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Roster.unsubscribeContact/0	<it.yup.xmpp.Roster: void unsubscribeContact(it.yup.xmpp.Contact)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.getPresence/0	<it.yup.xmpp.Contact: it.yup.xmpp.packets.Presence getPresence()>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.Contact.getPrintableName/0	<it.yup.xmpp.Contact: java.lang.String getPrintableName()>
<it.yup.xmpp.Roster: void readFromStorage()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Tree.build_tree/0	<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>
<com.jcraft.jzlib.Deflate: void _tr_flush_block(int,int,boolean)>/com.jcraft.jzlib.Tree.build_tree/1	<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getSelectedItem/0	<it.yup.ui.UIPanel: it.yup.ui.UIItem getSelectedItem()>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIVLayout.getHeight/0	<it.yup.ui.UIVLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIHLayout.getHeight/0	<it.yup.ui.UIHLayout: int getHeight(javax.microedition.lcdui.Graphics)>
<com.jcraft.jzlib.ZStream: int read_buf(byte[],int,int)>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIScreen.paint/0	<it.yup.ui.UIMenu: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getHeight/0	<it.yup.ui.UIButton: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getTextLines/0	<it.yup.ui.UILabel: java.util.Vector getTextLines()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.computeTextLines/0	<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getHeight/1	<it.yup.ui.UIButton: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.paint/0	<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.paint/1	<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getBg_color/2	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getSelectedColor/0	<it.yup.ui.UIItem: int getSelectedColor()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.setBg_color/0	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.setSelectedColor/0	<it.yup.ui.UIItem: void setSelectedColor(int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getSelectedColor/1	<it.yup.ui.UIItem: int getSelectedColor()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getBg_color/3	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.setBg_color/1	<it.yup.ui.UIItem: void setBg_color(int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.setSelectedColor/1	<it.yup.ui.UIItem: void setSelectedColor(int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getHeight/2	<it.yup.ui.UIButton: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getBg_color/4	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.getBg_color/5	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.drawBorder/0	<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.drawPixel/0	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.drawPixel/1	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIButton.drawPixel/2	<it.yup.ui.UIItem: void drawPixel(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UISeparator: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UISeparator.getFg_color/0	<it.yup.ui.UIItem: int getFg_color()>
<it.yup.ui.UISeparator: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UISeparator.getFg_color/1	<it.yup.ui.UIItem: int getFg_color()>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.computeTextLines/0	<it.yup.ui.UILabel: void computeTextLines(javax.microedition.lcdui.Font,int)>
<it.yup.ui.UIPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.computeRealHeight/0	<it.yup.ui.UIPanel: int computeRealHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UIPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.drawScrollBar/0	<it.yup.ui.UIPanel: void drawScrollBar(javax.microedition.lcdui.Graphics,int,int,int)>
<it.yup.ui.UIGauge: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIGauge.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIGauge: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIGauge.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIGauge: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIGauge.drawInput/0	<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICombobox.drawInput/0	<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItemLabels/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItemLabels/1	<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItemLabels/2	<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>
<lampiro.screens.RosterScreen$UIGroup: boolean keyPressed(int)>/it.yup.ui.UIAccordion.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Adler32.adler32/0	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<com.jcraft.jzlib.InfBlocks: int inflate_flush(com.jcraft.jzlib.ZStream,int)>/com.jcraft.jzlib.Adler32.adler32/1	<com.jcraft.jzlib.Adler32: long adler32(long,byte[],int,int)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.getHeight/0	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.paint/0	<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UIButton: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.paint/0	<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.paintLine/0	<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.paintLine/1	<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.paintLine/2	<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>
<it.yup.ui.UIPanel: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.paintIthItem/0	<it.yup.ui.UIPanel: void paintIthItem(javax.microedition.lcdui.Graphics,int,it.yup.ui.UIItem,int,int)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.getHeight/1	<it.yup.ui.UILabel: int getHeight(javax.microedition.lcdui.Graphics)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UILabel.paint/1	<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>(java.lang.String)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.ui.UILabel: void paint(javax.microedition.lcdui.Graphics,int,int)>/java.lang.String.<init>/0	<java.lang.String: void <init>(java.lang.String)>
<it.yup.xmpp.packets.DataForm: void parseItem(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getChildByName/0	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getChildByName/1	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getChildByName/2	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UICanvas.getClipHeight/0	<it.yup.ui.UICanvas: int getClipHeight()>
<com.jcraft.jzlib.InfCodes: int inflate_fast(int,int,int[],int,int[],int,com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfCodes: int inflate_fast(int,int,int[],int,int[],int,com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfCodes: int inflate_fast(int,int,int[],int,int[],int,com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream)>/java.lang.System.arraycopy/2	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfTree: void initWorkArea(int)>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfTree: int huft_build(int[],int,int,int,int[],int[],int[],int[],int[],int[],int[])>/java.lang.System.arraycopy/0	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.jcraft.jzlib.InfTree: int huft_build(int[],int,int,int,int[],int[],int[],int[],int[],int[],int[])>/java.lang.System.arraycopy/1	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<lampiro.screens.RosterScreen$IQResultListener2: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<it.yup.xmpp.FTSender: void sessionInitiate()>/it.yup.xml.Element.addText/0	<it.yup.xml.Element: void addText(java.lang.String)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.XMPPClient.getPresenceIcon/0	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.XMPPClient.getPresenceIcon/1	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen$UIContact: boolean updateContactData()>/it.yup.xmpp.XMPPClient.getPresenceIcon/2	<it.yup.xmpp.XMPPClient: javax.microedition.lcdui.Image getPresenceIcon(it.yup.xmpp.Contact,java.lang.String,int)>
<lampiro.screens.RosterScreen$RegisterDataFormExecutor: boolean execute(int)>/it.yup.xmpp.XMPPClient.sendIQ/0	<it.yup.xmpp.XMPPClient: void sendIQ(it.yup.xmpp.packets.Iq,it.yup.xmpp.IQResultListener)>
<lampiro.screens.RosterScreen$AdHocCommandsHandler: void handleResult(it.yup.xml.Element)>/it.yup.xmpp.XMPPClient.handleClientCommands/0	<it.yup.xmpp.XMPPClient: void handleClientCommands(it.yup.xml.Element,boolean)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/0	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getAttribute/1	<it.yup.xml.Element: java.lang.String getAttribute(java.lang.String)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getChildByName/5	<it.yup.xml.Element: it.yup.xml.Element getChildByName(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen$UIGroup: void moveGroups(it.yup.ui.UIAccordion,int,int)>/it.yup.ui.UIAccordion.getItemLabels/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>
<lampiro.screens.RosterScreen$UIGroup: void moveGroups(it.yup.ui.UIAccordion,int,int)>/it.yup.ui.UIAccordion.move/0	<it.yup.ui.UIAccordion: void move(int,int)>
<lampiro.screens.RosterScreen$UIGroup: void swapGroups(it.yup.ui.UIAccordion,int,int)>/it.yup.ui.UIAccordion.getItemLabels/0	<it.yup.ui.UIAccordion: it.yup.ui.UIItem[] getItemLabels()>
<lampiro.screens.RosterScreen$UIGroup: void swapGroups(it.yup.ui.UIAccordion,int,int)>/it.yup.ui.UIAccordion.swap/0	<it.yup.ui.UIAccordion: void swap(int,int)>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getItems/1	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getItems/2	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UICombobox: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIPanel.getItems/3	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Tree.d_code/0	<com.jcraft.jzlib.Tree: int d_code(int)>
<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>/com.jcraft.jzlib.Tree.gen_codes/0	<com.jcraft.jzlib.Tree: void gen_codes(short[],int,short[])>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.setAttribute/0	<it.yup.xml.Element: void setAttribute(java.lang.String,java.lang.String)>
<lampiro.screens.RosterScreen: void menuAction(it.yup.ui.UIMenu,it.yup.ui.UIItem)>/it.yup.xmpp.packets.Presence.addElement/0	<it.yup.xml.Element: void addElement(it.yup.xml.Element)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIPanel: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getHeight/0	<it.yup.ui.UIAccordion: int getHeight(javax.microedition.lcdui.Graphics)>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.getSubmenu/0	<it.yup.ui.UIItem: it.yup.ui.UIMenu getSubmenu()>
<lampiro.screens.DataFormScreen: void paint(javax.microedition.lcdui.Graphics,int,int)>/it.yup.ui.UIItem.setSubmenu/0	<it.yup.ui.UIItem: void setSubmenu(it.yup.ui.UIMenu)>
<com.jcraft.jzlib.Deflate: int build_bl_tree()>/com.jcraft.jzlib.Deflate.scan_tree/0	<com.jcraft.jzlib.Deflate: void scan_tree(short[],int)>
<com.jcraft.jzlib.Deflate: int build_bl_tree()>/com.jcraft.jzlib.Deflate.scan_tree/1	<com.jcraft.jzlib.Deflate: void scan_tree(short[],int)>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Deflate.send_code/0	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Deflate.send_code/1	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Deflate.send_code/2	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Deflate.send_bits/1	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void compress_block(short[],short[])>/com.jcraft.jzlib.Deflate.send_code/3	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>/com.jcraft.jzlib.Deflate.send_bits/1	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>/com.jcraft.jzlib.Deflate.send_bits/2	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>/com.jcraft.jzlib.Deflate.send_bits/3	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>/com.jcraft.jzlib.Deflate.send_tree/0	<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>
<com.jcraft.jzlib.Deflate: void send_all_trees(int,int,int)>/com.jcraft.jzlib.Deflate.send_tree/1	<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>
<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>/com.jcraft.jzlib.Tree.gen_bitlen/0	<com.jcraft.jzlib.Tree: void gen_bitlen(com.jcraft.jzlib.Deflate)>
<com.jcraft.jzlib.Deflate: int build_bl_tree()>/com.jcraft.jzlib.Tree.build_tree/0	<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>
<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>/com.jcraft.jzlib.Deflate.pqdownheap/0	<com.jcraft.jzlib.Deflate: void pqdownheap(short[],int)>
<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>/com.jcraft.jzlib.Deflate.pqdownheap/1	<com.jcraft.jzlib.Deflate: void pqdownheap(short[],int)>
<com.jcraft.jzlib.Tree: void build_tree(com.jcraft.jzlib.Deflate)>/com.jcraft.jzlib.Deflate.pqdownheap/2	<com.jcraft.jzlib.Deflate: void pqdownheap(short[],int)>
<it.yup.ui.UIEmoLabel: java.lang.Object[] findEmoTuple(java.lang.String)>/java.lang.Integer.<init>/0	<java.lang.Integer: void <init>(int)>
<it.yup.ui.UIPanel: int computeRealHeight(javax.microedition.lcdui.Graphics)>/it.yup.ui.UIPanel.getItems/0	<it.yup.ui.UIPanel: java.util.Vector getItems()>
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/it.yup.ui.UIItem.isSelected/0	<it.yup.ui.UIItem: boolean isSelected()>
<it.yup.ui.UIItem: void drawInput(javax.microedition.lcdui.Graphics,int,int,int,int)>/it.yup.ui.UIItem.drawBorder/0	<it.yup.ui.UIItem: void drawBorder(javax.microedition.lcdui.Graphics,int[],int[],int[][])>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getTextWidth/0	<it.yup.ui.UILabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getTextWidth/1	<it.yup.ui.UILabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getTextWidth/2	<it.yup.ui.UILabel: int getTextWidth(java.lang.String,javax.microedition.lcdui.Font)>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getGradientColor/0	<it.yup.ui.UIItem: int getGradientColor()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getGradientColor/1	<it.yup.ui.UIItem: int getGradientColor()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getSelectedColor/0	<it.yup.ui.UIItem: int getSelectedColor()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getGradientSelectedColor/0	<it.yup.ui.UIItem: int getGradientSelectedColor()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.getGradientSelectedColor/1	<it.yup.ui.UIItem: int getGradientSelectedColor()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.paintTextLine/0	<it.yup.ui.UILabel: void paintTextLine(javax.microedition.lcdui.Graphics,java.lang.String,int,int)>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.paintTextLine/1	<it.yup.ui.UILabel: void paintTextLine(javax.microedition.lcdui.Graphics,java.lang.String,int,int)>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.paintTextLine/2	<it.yup.ui.UILabel: void paintTextLine(javax.microedition.lcdui.Graphics,java.lang.String,int,int)>
<it.yup.ui.UIPanel: void paintIthItem(javax.microedition.lcdui.Graphics,int,it.yup.ui.UIItem,int,int)>/it.yup.ui.UIPanel.getBg_color/0	<it.yup.ui.UIItem: int getBg_color()>
<it.yup.ui.UIPanel: void paintIthItem(javax.microedition.lcdui.Graphics,int,it.yup.ui.UIItem,int,int)>/it.yup.ui.UIPanel.getBg_color/1	<it.yup.ui.UIItem: int getBg_color()>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<lampiro.screens.RosterScreen$IQResultListener1: void getBasePath(it.yup.xml.Element)>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Roster: void updateRosterItem(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.ui.UILabel: void paintLine(javax.microedition.lcdui.Graphics,int,int,javax.microedition.lcdui.Image,java.lang.String)>/it.yup.ui.UILabel.divideAP/0	<it.yup.ui.UILabel: int[] divideAP()>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getText/1	<it.yup.xml.Element: java.lang.String getText()>
<it.yup.xmpp.Roster: void loadGateways()>/it.yup.xml.Element.getText/2	<it.yup.xml.Element: java.lang.String getText()>
<com.jcraft.jzlib.Tree: void gen_codes(short[],int,short[])>/com.jcraft.jzlib.Tree.bi_reverse/0	<com.jcraft.jzlib.Tree: int bi_reverse(int,int)>
<it.yup.xmpp.FTReceiver: void packetReceived(it.yup.xml.Element)>/it.yup.xml.Element.getText/0	<it.yup.xml.Element: java.lang.String getText()>
<com.jcraft.jzlib.Deflate: void pqdownheap(short[],int)>/com.jcraft.jzlib.Deflate.smaller/0	<com.jcraft.jzlib.Deflate: boolean smaller(short[],int,int,byte[])>
<com.jcraft.jzlib.Deflate: void pqdownheap(short[],int)>/com.jcraft.jzlib.Deflate.smaller/1	<com.jcraft.jzlib.Deflate: boolean smaller(short[],int,int,byte[])>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_code/0	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_code/1	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_code/2	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_bits/0	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_code/3	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_bits/1	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_code/4	<com.jcraft.jzlib.Deflate: void send_code(int,short[])>
<com.jcraft.jzlib.Deflate: void send_tree(short[],int)>/com.jcraft.jzlib.Deflate.send_bits/2	<com.jcraft.jzlib.Deflate: void send_bits(int,int)>

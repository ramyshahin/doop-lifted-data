\\"                                                                                                                                \\"
<<\\"usage: \\">>	@Cleaner
<<\\"                                                                                                                                \\">>
<<\\" \\">>
null
\\"LatchImpl\\"
\\"<fileSummaryLN>\\"
\\"</fileSummaryLN>\\"
LatchImpl	@Latches
UTF-8	@Cleaner
waitTarget.active but not owner	@(Latches) /\ (Latches)
<fileSummaryLN>	@(Cleaner) /\ (Cleaner)
</fileSummaryLN>	@(Cleaner) /\ (Cleaner)
-h requires an argument	@Cleaner
-h is a required argument	@Cleaner
Txnl access to UP db not allowed	@(Cleaner) /\ (Cleaner)
<<\\"Cursor.count: \\">>	@Logging_Finest
delete
<<\\"Cursor.delete: \\">>	@Logging_Finest
key
data
put
<<\\"Cursor.put: \\">>	@Logging_Finest
File 0x	@Cleaner
key
<<\\"  File    Size (KB)  % Used\n--------  ---------  ------\\">>	@Cleaner
data
putNoOverwrite
<<\\"Cursor.putNoOverwrite: \\">>	@Logging_Finest
\\"je.disable.java.adler32\\"
key
data
putNoDupData
<<\\"Cursor.putNoDupData: \\">>	@Logging_Finest
\\"<in>\\"
\\"</in>\\"
\\"Split:\\"
\\"Delete:\\"
data
putCurrent
<<\\"Cursor.putCurrent: \\">>	@Logging_Finest
<<\\"Cursor.getCurrent: \\">>	@Logging_Finest
<<\\"Cursor.getFirst: \\">>	@Logging_Finest
<<\\"Cursor.getLast: \\">>	@Logging_Finest
<<\\"Cursor.getNext: \\">>	@Logging_Finest
<<\\"Cursor.getNextDup: \\">>	@Logging_Finest
\n
<<\\"Cursor.getNextNoDup: \\">>	@Logging_Finest
<<\\"\\">>
<<\\"Cursor.getPrev: \\">>	@Logging_Finest
MapTreeRoot	@Latches
<<\\"Cursor.getPrevDup: \\">>	@Logging_Finest
\\\"/>
Can\'t set \'je.env.isNoLocking\' and \'je.env.isTransactional\';	@Transactions
<<\\"Enviroment creation isn\'t allowed,  but there is no pre-existing  environment in \\">>
<<\\"Cursor.getPrevNoDup: \\">>	@Logging_Finest
key
data
TriggerLatch	@Latches
<<\\"Cursor.getSearchKey: \\">>	@Logging_Finest
key
data
<<\\"Cursor.getSearchKeyRange: \\">>	@Logging_Finest
<<\\"Cursor.getSearchBoth: \\">>	@Logging_Finest
Evictor	@Evictor
Checkpointer	@Checkpointer_Daemon
INCompressor	@INCompressor
<<\\"Cursor.getSearchBothRange: \\">>	@Logging_Finest
Cleaner	@Cleaner
\\\">
</INDupDeleteEntry>
Attempt to use a Environment that has been closed.
<<\\"Close of environment \\">>	@Logging_Fine
close
<<\\"\nException shutting down daemon threads: \\">>
\n
<<\\"Env \\">>	@Logging_Fine
<<\\"\nException clearing file manager: \\">>
\n
<<\\"\nException clearing file manager: \\">>
\n
put passed a null DatabaseEntry arg
put passed a null DatabaseEntry arg
unknown PutMode
<<\\"Logged item entrySize= \\">>
<<\\"Problem: \\">>	@Statistics /\ CheckLeaks
<<\\"Problem: \\">>	@Transactions /\ CheckLeaks /\ Statistics
Some latches held at env close.	@CheckLeaks /\ Latches
Lock, transaction, or latch left behind at environment close
NULL_LSN without KnownDeleted
File Flip	@Logging_FileHandler /\ Logging_Base
manual	@Evictor
<<\\"fetchTarget of \\">>
null lsn
beginTransaction called,  but Environment was not opened with transactional cpabilities	@Transactions
<<\\"-Warning: Out of sync. Should be \\">>	@Memory_Budget
<<\\"Read non-valid log entry type: \\">>
Channel closed, may be due to thread interrupt
This statement would have triggered an Exception: $stack45 = result#4.<com.sleepycat.je.dbi.CursorImpl$KeyChangeStatus: com.sleepycat.je.OperationStatus status>
<<\\"Node \\">>
<lastFullLsn>
</lastFullLsn>
\\\"/>
<knownDeleted val=\\\"
true
false
\\\"/>
idkey is null
OPEN
CLOSED
INVALID
DatabaseConfig.setReadOnly() must be set to false when creating a Database
<<\\"IN \\">>
<<\\"IN \\">>
<<\\"Found non-deletable IN \\">>
unknown GetMode
<<\\"You can\'t open a Database with a duplicatesAllowed configuration of \\">>
<<\\"You can\'t open a Database with a transactional configuration of \\">>	@Transactions
<<\\"Invalid value of searchType: \\">>
Can\'t close Database:
<<\\"Database.close: \\">>	@Logging_Finest
There are open cursors against the database.\n
They will be closed.\n
key
Can\'t call Database.openSequence:
openSequence
Database.openSequence	@Logging_Finest
Can\'t open a cursor
Only one may be specified: ReadCommitted or ReadUncommitted
Database.openCursor	@Logging_Finest
key
Can\'t call Database.delete:
delete
Database.delete	@Logging_Finest
key
data
Can\'t call Database.get:
Database.get	@Logging_Finest
key
data
Can\'t call Database.getSearchBoth:
Database.getSearchBoth	@Logging_Finest
key
data
Can\'t call Database.put
put
Database.put	@Logging_Finest
<<\\"A transaction was not supplied when opening this cursor: \\">>
key
data
key
data
Can\'t call Database.putNoOverWrite
putNoOverwrite
Database.putNoOverwrite	@Logging_Finest
key
key
data
data
Can\'t call Database.putNoDupData
putNoDupData
Database.putNoDupData	@Logging_Finest
remaining=
<isRoot val=\\\"
\\\"/>
<level val=\\\"
Can\'t call Database.join
cursors
At least one cursor is required.
\\\"/>
<entries numEntries=\\\"
All cursors must use the same transaction.	@Transactions
\\\" length=\\\"
All cursors must use the same environment.	@Transactions
\\\" baseFileNumber=\\\"
\\\">
All cursors must use the same transaction.	@Transactions
\\\">
</ref>
</entries>
<in>
</in>
Can\'t call Database.truncate	@TruncateOp
truncate	@TruncateOp
Database.truncate: txnId=	@Logging_Finest /\ TruncateOp
null	@Latches /\ TruncateOp
<<\\"Obsolete lsns contains valid lsn \\">>	@Verifier
<<\\"Tree contains obsolete lsn \\">>	@Verifier
Lsn mismatch	@Verifier
couldn\'t find database - truncate	@TruncateOp
truncate	@DeleteOp /\ TruncateOp
ABORT
CASCADE
NULLIFY
Can\'t call Database.preload
preload	@DeleteOp
ForeignKeyDeleteAction.
Can\'t call Database.preload
preload	@DeleteOp
READ
WRITE
RANGE_READ
RANGE_WRITE
RANGE_INSERT
NONE
Can\'t call Database.preload
<<\\"\\">>
RESTART
preload	@DeleteOp
<<\\"\\">>
Can\'t call Database.stat	@Statistics
stat	@DeleteOp /\ Statistics
<<\\"\\">>
Can\'t call Database.verify	@Statistics /\ Verifier
<<\\"\\">>
verify	@DeleteOp /\ Verifier /\ Statistics
<idkey>
<<\\"\\">>
</idkey>
\\\"/>
\\\"/>
<<\\"Database is Read Only: \\">>
<level val=\\\"
\\\"/>
\\\"/>
<entries nEntries=\\\"
\\\">
<entry id=\\\"
<lsn/>
<<\\" name=\\">>	@Logging_Finest /\ Logging_Base
<key/>
<target/>
\\\"/>
</entry>
</entries>
<knownDeleted val=\\\"
\\\"/>
<pendingDeleted val=\\\"
<<\\"Attempt to \\">>	@DeleteOp
\\\"/>
IN
Split:	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" parent=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" child=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newSibling=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" parentLsn = \\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
\\"<ln>\\"
\\"</ln>\\"
<<\\" childLsn = \\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newSiblingLsn = \\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" splitIdx=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" idKeyIdx=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" childIdx=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
Delete:	@(Logging_Finest) /\ (Logging_Finest /\ Logging_Base)
<<\\" index=\\">>	@(Logging_Finest) /\ (Logging_Finest /\ Logging_Base)
\\"<din>\\"
\\"</din>\\"
<<\\"\\">>
<<\\"Error Key \\">>
UNKNOWN
<<\\"Error Data \\">>
UNKNOWN
<ln>
</ln>
<<\\"maxBytes parameter to Database.preload() was specified as \\">>	@Memory_Budget
<database id=\\\"
<data>
\\\"
</data>
<<\\" btc=\\\"\\">>
\\\">
<ckptStart>
</ckptStart>
<root>
</root>
<firstActive>
</firstActive>
</CkptEnd>
<din>
</din>
<dupkey>
<<\\"\\">>
</dupkey>
<dupCountLN/>
DIN
\\\"
<<\\" dupc=\\\"\\">>
\\\"
fsyncLatch	@FSync /\ Latches
/>
<data>
</data>
\\\" gTxnId=\\\"
null
\\\" bqual=\\\"
null
\\\"/>
Btree
Duplicate
couldn\'t instantiate class comparator
<database>
\\\"/>
<btcf name=\\\"
Unexpected interrupt while waiting for fsync	@FSync
\\\"/>
<dupcf name=\\\"
\\\"/>
</database>
<<\\"\\">>
<<\\"Exception while trying to load \\">>
<<\\"Exception while trying to load \\">>
<
Usage: EnvironmentParams <samplePropertyFile>
####################################################\n# Example Berkeley DB, Java Edition property file\n# Each parameter is set to its default value\n####################################################\n\n
<<\\" exists = \\\"\\">>
\\\">
\\\"/>
\\"Delete\\"
\\"Mod:\\"
Cleaner.addToQueue should never be called.	@Cleaner
#
<<\\"CleanerRun \\">>	@Cleaner
Cleaner	@Cleaner /\ Logging_Severe
doClean	@Cleaner /\ Logging_Severe
<<\\"\\">>	@Cleaner /\ Logging_Severe
<<\\"CleanerRun \\">>	@Cleaner
<<\\"CleanerRun \\">>	@Cleaner
.bad
Nested transactions are not supported yet.	@Transactions
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanLN:	@Cleaner /\ Logging_Cleaner
<<\\"XA Transaction \\">>	@Transactions
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanIN:	@Cleaner /\ Logging_Cleaner
CleanIN:	@Cleaner /\ Logging_Cleaner
CleanIN:	@Cleaner /\ Logging_Cleaner
Delete	@Logging_Finer /\ Latches
txnId=
\\"sun.arch.data.model\\"
\\"je.forceJVMArch\\"
1.4 based 64 bit JVM not supported	@Memory_Budget
putNoDupData() called, but database is not configured for duplicate data.
\\\"/>	@(Cleaner) /\ (Cleaner)
Mac OS X
Can\'t replace a duplicate with different data.	@Latches
Mod:	@Logging_Finer /\ Latches
<<\\"Cannot read backward over cleaned file from \\">>
<<\\"A per-thread transaction was created in \\">>
<<\\"Environment invalid because of previous exception: \\">>
<<\\"FileReader read invalid log entry type: \\">>
<<\\"Pass 1: \\">>
.
<<\\"Pass 2: \\">>
.
<<\\"End: \\">>
\\"    Cache Size      Btree Size  Description\n--------------  --------------  -----------\\"
<<\\"processing file \\">>
<<\\".jdb  \\">>
<<\\"Already name mapped for dbId: \\">>
<<\\"Already saw dupSort entry for dbId: \\">>
<<\\"Problem in fillReadBuffer, readBufferFileNum = \\">>	@Latches
db
DATA=END
No value after -records	@(Memory_Budget) /\ (Memory_Budget)
idKey=
lsn=
No value after -key	@(Memory_Budget) /\ (Memory_Budget)
No value after -data	@(Memory_Budget) /\ (Memory_Budget)
r
rw
No value after -nodemax	@(Memory_Budget) /\ (Memory_Budget)
No value after -density	@(Memory_Budget) /\ (Memory_Budget)
No value after -overhead	@(Memory_Budget) /\ (Memory_Budget)
No value after -measure	@(Memory_Budget) /\ (Memory_Budget)
<<\\"Unknown arg: \\">>	@(Memory_Budget) /\ (Memory_Budget)
Already closed
-records not specified	@(Memory_Budget) /\ (Memory_Budget)
-key not specified	@(Memory_Budget) /\ (Memory_Budget)
key
<<\\"JoinCursor.getNext(key): \\">>	@Logging_Finest
key
data
<<\\"JoinCursor.getNext(key,data): \\">>	@Logging_Finest
<<\\"usage:\njava \\">>	@Memory_Budget
Secondary corrupt
Sequences not supported in databases configured for duplicates
Minimum sequence value must be less than the maximum
Inputs: records=	@Memory_Budget
Initial sequence value is out of range
The cache size is larger than the sequence range
<<\\"    Cache Size      Btree Size  Description\n--------------  --------------  -----------\\">>	@Memory_Budget
Minimum, internal nodes only	@Memory_Budget
Maximum, internal nodes only	@Memory_Budget
ExclusiveCreate=true and the sequence record already exists.
Minimum, internal nodes and leaf nodes	@Memory_Budget
Maximum, internal nodes and leaf nodes	@Memory_Budget
Sequence record removed during openSequence.
\nTo get leaf node sizing specify -data	@Memory_Budget
\\\"/>
<<\\"\nBtree levels: \\">>	@Memory_Budget
AllowCreate=false and the sequence record does not exist.
<<\\"Directory is not empty: \\">>	@Memory_Budget
<<\\"Shutting down \\">>
<<\\"\nMeasuring with cache size: \\">>	@Memory_Budget
Stats for internal and leaf nodes (after insert)	@Memory_Budget /\ Statistics
Sequence delta must be greater than zero
Exiting
Continuing
Sequence delta is larger than the range
<<\\"\nPreloading with cache size: \\">>	@Memory_Budget
Stats for internal nodes only (after preload)	@Memory_Budget /\ Statistics
<<\\"During close: \\">>	@Memory_Budget
<<\\"Sequence overflow \\">>
<<\\"During close: \\">>	@Memory_Budget
foo	@Memory_Budget
Sequence.get value=	@Logging_Finest /\ Logging_Base
*** Key doesn\'t fit value=	@Memory_Budget
Random key already exists -- retrying	@Memory_Budget
<<\\"*** \\">>	@Memory_Budget
The sequence record has been deleted while it is open.
<<\\"*** Ran out of cache memory at record \\">>	@Memory_Budget /\ Statistics
.	@Memory_Budget
CacheSize=	@Memory_Budget /\ Statistics
*** All records did not fit in the cache ***	@Memory_Budget /\ Statistics
\\\" isProvisional=\\\"true
\\\" prev=\\\"0x
\\\">
</entry>
<<\\"failed adding in \\">>	@Memory_Budget
.	@(Memory_Budget) /\ (Memory_Budget)
Log statistics:
type
total
provisional
total
min
max
avg
entries
<<\\"\\">>
count
count
bytes
bytes
bytes
bytes
as % of log
key/data
<<\\"\\">>
<<\\"\\">>
<<\\"\\">>
<<\\"\\">>
<<\\"\\">>
(
<<\\"\nTotal bytes in portion of log read: \\">>
<<\\"Total number of entries: \\">>
size=
db=
<<\\" \\">>
TxnAbort
\nPer checkpoint interval info:
lnTxn
ln
mapLNTxn
mapLN
end-end
end-start
start-end
maxLNReplay
ckptEnd
BIN cursorSet is inconsistent.	@Verifier
Cursor Not Initialized.
Cursor has been closed.
<<\\"Unknown cursor status: \\">>
CURSOR_NOT_INITIALIZED
CURSOR_INITIALIZED
CURSOR_CLOSED
UNKNOWN (
\\\"
\\\"
\\\"
>\n
<<\\"\\">>
<<\\"\\">>
\n</Cursor>
<<\\" bin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" ln=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" lnIdx=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" oldLnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" newLnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
\\\">
>
<<\\"null buffer given to checksum validation, probably  result of 0\'s in log file. \\">>	@Checksum
<<\\"environmentImpl is null for target db \\">>
<<\\"Location \\">>	@Checksum
<<\\"Location \\">>	@Checksum
Btree
<<\\"prepare() has already been called for Transaction \\">>	@Transactions
Duplicate
<<\\"Transaction \\">>	@Transactions
\n
The following DatabaseConfig parameters for the\ncached Database do not match the parameters for the\nrequested Database:\n
<<\\" Transactional\n\\">>	@Transactions
<<\\"Transaction \\">>	@(Transactions) /\ (Transactions)
<<\\" Read-Only\n\\">>
<<\\" Sorted Duplicates\n\\">>
<<\\" Btree Comparator\n\\">>
<<\\" Duplicate Comparator\n\\">>
<<\\"Commit of transaction \\">>	@(Transactions) /\ (Transactions /\ Logging_Severe)
Txn	@(Transactions) /\ (Transactions /\ Logging_Severe)
commit	@(Transactions) /\ (Transactions /\ Logging_Severe)
<<\\"Failed while attempting to commit transaction \\">>	@(Transactions) /\ (Transactions)
<<\\"Failed while attempting to commit transaction \\">>	@(Transactions) /\ (Transactions)
<<\\"Abort:id = \\">>	@Transactions /\ Logging_Fine
<<\\"Transaction \\">>	@Transactions
Txn undo for node=	@Transactions
foreignKeyDeleteAction
A checksum error was found in the log.
<<\\"Corruption begins at LSN:\n   \\">>
<<\\"Last known good record before corruption is at LSN:\n   \\">>
<<\\"Next known good record after corruption is at LSN:\n   \\">>
The SecondaryConfig argument is null.
The following SecondaryConfig parameters for the\ncached Database do not match the parameters for the\nrequested Database:\n
<<\\" SecondaryKeyCreator\n\\">>
<<\\" SecondaryMultiKeyCreator\n\\">>
<<\\" ForeignKeyDelete\n\\">>
<<\\" ForeignKeyDeleteAction\n\\">>
<<\\" ForeignKeyNullifier\n\\">>
<<\\" ForeignMultiKeyNullifier\n\\">>
<<\\" ImmutableSecondaryKey\n\\">>
<<\\"Error in \\">>	@Cleaner
,-	@Cleaner
,	@Cleaner
-	@Cleaner
<<\\"Couldn\'t find lock for Node \\">>	@Transactions
\\"<dupCountLN>\\"
\\"</dupCountLN>\\"
\\"usage: java <utility> [options...]\\"
<<\\"Can\'t find \\">>	@Transactions
\\"com.sleepycat.je.util.\\"
<<\\"Can\'t find \\">>	@Transactions
Missing utility name
com.sleepycat.je.util.
usage: java <utility> [options...]
<dupCountLN>
</dupCountLN>
Cannot write file summary in a read-only environment	@Cleaner
.jdb	@Cleaner
\\\"/>
<<\\"Transaction \\">>	@Transactions
<<\\"Transaction \\">>	@Transactions
Non-blocking lock was denied.
<txn id=\\\"	@(Transactions) /\ (Transactions)
\\\">	@(Transactions) /\ (Transactions)
</txn>	@(Transactions) /\ (Transactions)
Recovery Info
<<\\" lastUsed=\\">>
<<\\" nextAvail=\\">>
<<\\" ckptStart=\\">>
<<\\" firstActive=\\">>
<<\\" ckptEnd=\\">>
<<\\" useRoot=\\">>
>
SUCCESS
KEYEXIST
KEYEMPTY
NOTFOUND
OperationStatus.
DEFAULT
READ_UNCOMMITTED
READ_COMMITTED
RMW
<<\\"\\">>
LockMode.
<TreeLocation bin=\\\"
null
\\\" index=\\\"
\\\" lnKey=\\\"
\\\" childLsn=\\\"
\\\">
\\"<bin>\\"
\\"</bin>\\"
<summary totalCount=\\\"	@Cleaner
\\\" totalSize=\\\"	@Cleaner
\\\" totalINCount=\\\"	@Cleaner
\\\" totalINSize=\\\"	@Cleaner
\\\" totalLNCount=\\\"	@Cleaner
\\\" totalLNSize=\\\"	@Cleaner
\\\" obsoleteINCount=\\\"	@Cleaner
<key v=\\\"
<null>
\\\" obsoleteLNCount=\\\"	@Cleaner
<null>
\\\"/>	@Cleaner
<<\\"\\">>
\\\"/>
key=
<<\\"txnId = \\">>	@(Transactions /\ Statistics) /\ (Transactions /\ Statistics)
_jeUtilization	@Transactions /\ Cleaner
_jeUtilization	@Transactions /\ Cleaner
----- Event Dump -----
Cleaner duplicate key sequence file=0x	@Cleaner /\ Logging_Base /\ Logging_Severe
nodeId=
\n
\n	@(Statistics) /\ (Statistics)
numBottomInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
numInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
numDuplicateInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
numDuplicateBottomInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
TxnPrepare
<<\\"lsn \\">>	@Cleaner /\ Latches
copy.remaining=
\\\">
>
<<\\"Wrong filenum in header for file \\">>
0000000000000000
0x
<<\\"Dup Offset \\">>
BIN must be latched before evicting LNs	@Evictor /\ Latches
<<\\"Expected log version 3 or earlier but found \\">>
<FileHeader num=\\\"0x
NULL_LSN without KnownDeleted
\\\" lastEntryInPrevFileOffset=\\\"0x
\\\" logVersion=\\\"0x
\\\"/>
<bin>
</bin>
BIN
\\".jdb\\"
\\".cif\\"
\\".del\\"
\\".bad\\"
\\".lck\\"
.del
.jdb
\\\">
.jdb
</ref>
.del
<lsn/>
<key/>
<target/>
<knownDeleted val=\\\"
\\\"/>
<pendingDeleted val=\\\"
\\\"/>
\\\"/>
<<\\"Environment home \\">>
<<\\"usage: \\">>	@Statistics /\ Verifier
<<\\"usage: \\">>	@(Statistics /\ Verifier) /\ (Statistics /\ Verifier)
DbState.
<<\\"usage: \\">>	@(Statistics /\ Verifier) /\ (Statistics /\ Verifier)
-h requires an argument	@Statistics /\ Verifier
<<\\"Exit status = \\">>	@Statistics /\ Verifier
<<\\"Exit status = \\">>	@Statistics /\ Verifier
<<\\"Exit status = \\">>	@Statistics /\ Verifier
.jdb
-s requires an argument	@Statistics /\ Verifier
-v requires a positive argument	@Statistics /\ Verifier
-v requires an argument	@Statistics /\ Verifier
-h is a required argument	@Statistics /\ Verifier
-s is a required argument	@Statistics /\ Verifier
<<\\"DbStat.stats of \\">>	@(Statistics /\ Verifier) /\ (Logging_Info /\ Verifier /\ Statistics)
-h requires an argument	@Statistics /\ Verifier
-s requires an argument	@Statistics /\ Verifier
-v requires a positive argument	@Statistics /\ Verifier
-v requires an argument	@Statistics /\ Verifier
.jdb
<<\\"DbStat.stats of \\">>	@(Statistics /\ Verifier) /\ (Logging_Info /\ Verifier /\ Statistics)
-h is a required argument	@Statistics /\ Verifier
-s is a required argument	@Statistics /\ Verifier
<<\\"usage: \\">>
<<\\"\\">>
.
<<\\"DbVerify.verify of \\">>	@Logging_Info /\ Verifier /\ Statistics
<<\\"Couldn\'t rename \\">>
Checking obsolete offsets ...	@Statistics /\ Verifier
<<\\"DbVerify.verify of \\">>	@Logging_Info /\ Verifier /\ Statistics
<<\\"Couldn\'t delete \\">>
<<\\"DbVerify.verify of \\">>	@Logging_Info /\ Verifier /\ Statistics
\\"DupRootRecover:\\"
\\"LNRedo:\\"
\\"LNUndo\\"
\\"INRecover:\\"
\\"RootRecover:\\"
\\"INDelReplay:\\"
\\"INDupDelReplay:\\"
\\"RootDelete:\\"
-f requires an argument
-h requires an argument
-d requires an argument
-s requires an argument
-h is a required argument
Recovery underway, found end of log	@Logging_Config
Must supply a database name if -l not supplied.
<<\\"Recovery checkpoint search, \\">>	@Logging_Config
Recovery w/no files.	@Logging_Config
<<\\"There are \\">>	@Transactions /\ Logging_Info
<<\\"Couldn\'t open file \\">>
true
false
recovery
\\"_jeIdMap\\"
\\"_jeNameMap\\"
\\"_jeUtilization\\"
RecoveryManager	@Logging_Severe
recover	@Logging_Severe
Couldn\'t recover	@Logging_Severe
<<\\"Couldn\'t open file \\">>
<<\\"Couldn\'t recover: \\">>
_jeIdMap
_jeNameMap
_jeUtilization
<<\\"Recovery finished: \\">>
<<\\"Recovery finished: \\">>
_jeIdMap
_jeNameMap
<<\\"DbDump.dump of \\">>	@Logging_Info
_jeIdMap
_jeNameMap
DATA=END
<<\\"DbDump.dump of \\">>	@Logging_Info
VERSION=3
format=print
lastUsed=
format=bytevalue
type=btree
dupsort=
1
0
HEADER=END
Channel closed, may be due to thread interrupt
SUCCESS
FILLED_CACHE
<<\\"IOException caught: \\">>
EXCEEDED_TIME
<<\\"File \\">>
PreloadStatus.
<<HASH:-870535562>>
<DbPrintLog>
<<\\"can\'t find database \\">>
</DbPrintLog>
FileManager would overwrite non-empty file 0x
generated for testing
File closed, may be due to thread interrupt
generated for testing	@DiskFullErro
.
<<\\"Attempted to \\">>
<<\\"Can\'t \\">>
rename	@RenameOp
remove	@DeleteOp
<<\\"Usage: \\">>
<<\\" -h  <envHomeDir>\\">>
<<\\" -e  <end file number, in hex>\\">>
<<\\" -k  <binary|text> (format for dumping the key)\\">>
<<\\" -s  <start file number, in hex>\\">>
<<\\" -tx <targetted txn ids, comma separated>\\">>
<<\\" -ty <targetted entry types, comma separated>\\">>
<<\\" -S  show Summary of log entries\\">>
<<\\" -q  if specified, concise version is printed\\">>
<<\\"     Default is verbose version.)\\">>
All arguments are optional
NEW
WAIT_NEW
PROMOTION
WAIT_PROMOTION
EXISTING
DENIED
WAIT_RESTART
NONE_NEEDED
truncate	@TruncateOp
readMapIns
je.lck	@(Environment_Locking) /\ (Environment_Locking)
rw	@(Environment_Locking) /\ (Environment_Locking)
<<\\"A je.lckfile exists in \\">>	@(Environment_Locking) /\ (Environment_Locking)
shared	@(Environment_Locking) /\ (Environment_Locking)
single writer	@(Environment_Locking) /\ (Environment_Locking)
readNonMapIns
<<\\"The Environment directory \\">>
<<\\"Database \\">>	@TruncateOp
<<\\"Can\'t truncate database \\">>	@TruncateOp
Write after RunRecoveryException
Randomly generated for testing
<<\\"Found unfinished prepare record: id: \\">>	@Transactions /\ Logging_Info
undoLNs
redoLns
<<\\" lsnFromLog:\\">>	@Logging_Severe
RecoveryManager	@Logging_Severe
replaceOrInsert	@Logging_Severe
lsnFromLog=
All nodes should have been loaded	@Cleaner
Trace list:
_jeIdMap
_jeNameMap
UTF-8
lsnFromLog=
RootRecover:	@Logging_Recovery
RootRecover:	@Logging_Recovery
UTF-8
DupRootRecover:	@Logging_Recovery
DupRootRecover:	@Logging_Recovery
<offsets size=\\\"
\\\">
0x
</offsets>
<offsets size=\\\"0\\\"/>
<dbtree lastId = \\\"
\\\">
<idDb>
</idDb><nameDb>
</nameDb>
</dbtree>
<dbTree lastDbId =\\\"
\\\">
</dbtree>
INRecover:	@Logging_Recovery
<<\\"locker \\">>
<<\\"locker \\">>
Bad value for timeout:
<<\\" Owners:\\">>
<<\\" (none)\\">>
INRecover:	@Logging_Recovery
<<\\" Waiters:\\">>
<<\\" (none)\\">>
INRecover:	@Logging_Recovery
Bad value for timeout:
<<\\"No transaction found for \\">>	@Transactions
NEXT
PREV
NEXT_DUP
PREV_DUP
NEXT_NODUP
PREV_NODUP
\\"<node>\\"
\\"</node>\\"
allowCreate=
<<\\"Not Exception or Error: \\">>
matchLNByNodeId called on non DIN/DBIN
<node>
</node>
LNRedo:	@Logging_Recovery
<<\\"No transaction found for \\">>	@(Transactions) /\ (Transactions)
<
<<\\"No transaction found for \\">>	@(Transactions) /\ (Transactions)
<node>
</node>
<<\\"<LatchWaiter: \\">>	@(Latches) /\ (Latches)
activeTxns=[	@(Transactions /\ Statistics) /\ (Transactions /\ Statistics)
]\n	@(Transactions /\ Statistics) /\ (Transactions /\ Statistics)
<<\\"DatabaseEntry \\">>
<<\\"Data field for DatabaseEntry \\">>
LNRedo:	@Logging_Recovery
A partial key DatabaseEntry is not allowed
LNRedo:	@Logging_Recovery
nGets=	@(Statistics) /\ (Statistics)
non LogEntryType passed to LogEntryType.compare
A Transaction cannot be used because the environment was opened non-transactionally	@Transactions
A Transaction cannot be used because the database was opened non-transactionally	@Transactions
\\"<dbin>\\"
\\"</dbin>\\"
<<\\"usage: \\">>
A Transaction cannot be used because the database was opened non-transactionally	@Transactions
A Transaction cannot be used because the database was opened non-transactionally	@Transactions
-f requires an argument
-h requires an argument
-s requires an argument
<<\\"-c: \\">>
-c requires an argument
<dbin>
</dbin>
<dupkey>
<<\\"\\">>
</dupkey>
\\"je.properties\\"
-h is a required argument
-v requires -f
LNUndo	@Logging_Recovery /\ Logging_Base
LNUndo	@Logging_Recovery /\ Logging_Base
DBIN
,
,	@Transactions
envHome
<<\\"DbLoad.load of \\">>	@Logging_Info
<<\\"Load start: \\">>
Must supply a database name if -l not supplied.
<<\\"DbLoad.load of \\">>	@Logging_Info
je.properties
<<\\"Load end: \\">>
<<\\"An error occurred when reading \\">>
\\\">
</INDeleteEntry>
<<\\"Invalid header parameter: \\">>
<<\\"Version \\">>
<<\\"There \\">>
is 1 open Database in the Environment.\n
<<\\"are \\">>
<<\\" open Database in the Environment.\n\\">>
Closing the following databases:\n
<<\\" \\">>
<<\\"There \\">>	@Transactions
\'
is 1 existing transaction opened against	@Transactions
<<\\" the Environment.\n\\">>	@Transactions
<<\\"are \\">>	@Transactions
<<\\" existing transactions opened against\\">>	@Transactions
<<\\" the Environment.\n\\">>	@Transactions
Aborting open transactions ...\n	@Transactions
<<\\"No data to match key \\">>
<<\\"Key exists: \\">>
<<\\"loaded \\">>
<<\\"Recovery Pass \\">>
No \\\"DATA=END\\\"
<<\\"Recovery Pass \\">>
databaseName
Environment.open:  name=	@Logging_Finest
Corrupted file
Corrupted file
<<\\"Database \\">>
<<\\" node=\\">>	@Logging_Base
<<\\" lsn=\\">>	@Logging_Base
<<\\"Database \\">>
initialized
<<\\" found=\\">>	@Logging_Base
open
closed
invalid
<<\\" replaced=\\">>	@Logging_Base
<<\\" inserted=\\">>	@Logging_Base
<<\\" replacedLsn=\\">>	@Logging_Base
<<\\" abortLsn=\\">>	@Logging_Base
<<\\"Can\'t go from environment state \\">>
<<\\"Attempted to open Database \\">>	@Transactions
<<\\"Attempted to open Database \\">>
INDupDelReplay:	@(Logging_Recovery) /\ (Logging_Recovery /\ Logging_Base)
INDelReplay:	@(Logging_Recovery) /\ (Logging_Recovery /\ Logging_Base)
databaseName	@DeleteOp
.
databaseName	@RenameOp
newName	@RenameOp
<<\\"last LSN = \\">>	@Logging_Severe
RecoveryManager	@Logging_Severe
last LSN=
databaseName	@TruncateOp
<<\\"Usage: \\">>
<<\\"                 -h <environment home>\\">>
(optional)
RootDelete:	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\"                 -f <file number, in hex>\\">>
<<\\"                 -o <offset, in hex>\\">>
Log file is truncated at position starting at and inclusive of the offset. Beware, not  for general purpose use yet!
Transactions can not be used in a non-transactional environment	@Transactions
<DbLsn val=\\\"0x
Only one may be specified: SerializableIsolation, ReadCommitted or ReadUncommitted	@Transactions
0x
api
sync
mutableConfig
je.disable.java5.latches	@Latches
java.util.concurrent.locks.ReentrantLock	@Latches
java.util.concurrent.locks.ReentrantReadWriteLock	@Latches
LatchImpl	@Latches
Attempt to use non-open Environment object().
\\"je.info\\"
<<\\"Problem parsing parameter \\">>
<Dbg time=\\\"	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
\\\">	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
<msg val=\\\"	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
\\\"/>	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
</Dbg>	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
\\\"/>	@(Checkpointer_Daemon) /\ (Checkpointer_Daemon)
daemon	@Checkpointer_Daemon
<LockInfo locker=\\\"
\\\" type=\\\"
\\\"/>
<<\\" lock taken at: \\">>
SET
BOTH
SET_RANGE
BOTH_RANGE
SearchMode.
<<\\" lastCkpt=\\">>	@Logging_Finest
\\"daemon\\"
\\"manual\\"
\\"critical\\"
delete
<<\\"SecondaryCursor.delete: \\">>	@Logging_Finest
<<\\" lastCkpt=\\">>	@Logging_Finest
<<\\" lastCkpt=\\">>	@Logging_Finest
\\\"/>	@(Evictor) /\ (Evictor)
<<\\" lastCkpt=\\">>	@Logging_Finest
Evictor.addToQueue should never be called.	@Evictor /\ EvictorDaemon
<<\\"SecondaryCursor.getCurrent: \\">>	@Logging_Finest
<<\\" lastCkpt=\\">>	@Logging_Finest
daemon	@Evictor /\ EvictorDaemon
<<\\"SecondaryCursor.getFirst: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getLast: \\">>	@Logging_Finest
critical	@Evictor /\ Memory_Budget /\ Critical_Eviction
<<\\"SecondaryCursor.getNext: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getNextDup: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getNextNoDup: \\">>	@Logging_Finest
Evictor: pass=	@Logging_Evictor /\ Evictor /\ Logging_Base
<<\\"SecondaryCursor.getPrev: \\">>	@Logging_Finest
Evictor: pass=	@Logging_Evictor /\ Evictor /\ Logging_Base
<<\\"SecondaryCursor.getPrevDup: \\">>	@Logging_Finest
Evictor: pass=	@Logging_Evictor /\ Evictor /\ Logging_Base
<<\\"SecondaryCursor.getPrevNoDup: \\">>	@Logging_Finest
<<\\"latches held = \\">>	@Evictor
key
pKey
data
<<\\"SecondaryCursor.getSearchKey: \\">>	@Logging_Finest
key
pKey
data
<<\\"SecondaryCursor.getSearchKeyRange: \\">>	@Logging_Finest
key
pKey
data
<<\\"SecondaryCursor.getSearchBoth: \\">>	@Logging_Finest
key
<<\\" IN type=\\">>	@Evictor
pKey
data
<<\\"SecondaryCursor.getSearchBothRange: \\">>	@Logging_Finest
<<\\"Database \\">>	@Evictor
key
pKey
data
\\"CleanIN:\\"
\\"CleanLN:\\"
\\"CleanMigrateLN:\\"
\\"CleanPendingLN:\\"
\\";\\"
<<\\" A configuration parameter name can\'t be null or 0 length\\">>
\\"  File    Size (KB)  % Used\n--------  ---------  ------\\"
<<\\"Both \\">>	@Cleaner
<<\\" TOTALS \\">>	@(Cleaner) /\ (Cleaner)
<<\\"  \\">>	@(Cleaner) /\ (Cleaner)
<<\\"     \\">>	@(Cleaner) /\ (Cleaner)
<<\\"\\">>	@Cleaner
<dbId id=\\\"
\\\"/>
<<\\"Cleaner has \\">>	@Cleaner /\ Environment_Locking /\ Logging_Severe
.del	@Cleaner /\ Environment_Locking
Cleaner deleted file 0x	@Cleaner /\ Environment_Locking /\ Logging_Severe
.
Log file 0x	@(Cleaner /\ Logging_Severe) /\ (Cleaner /\ Logging_Severe)
deleted	@Cleaner /\ Logging_Severe
renamed	@Cleaner /\ Logging_Severe
Cleaner	@(Cleaner /\ Logging_Severe) /\ (Cleaner /\ Logging_Severe)
deleteSafeToDeleteFiles	@(Cleaner /\ Logging_Severe) /\ (Cleaner /\ Logging_Severe)
true	@Logging_ConsoleHandler
false	@Logging_DbLogHandler
false	@Evictor
1000	@Evictor
<<\\"Files cleaned: \\">>	@Cleaner
)	@Latches
<<\\"\nrecovery time = \\">>
<<\\"action time = \\">>
<<\\"<LATCH \\">>	@Latches
<<\\"] \\">>	@Latches
]	@Latches
<<\\" [waiters: \\">>	@Latches
<<\\" \\">>	@Latches
<<\\"\nrecovery time = \\">>
]	@Latches
>	@Latches
<<\\"action time = \\">>
\\"RootSplit:\\"
\\"DupRootSplit:\\"
\\"Mut:\\"
\\"Ins:\\"
\\"InsD:\\"
<<\\"\nrecovery time = \\">>
<<\\"action time = \\">>
RootLatch	@(Latches) /\ (Latches)
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
cleanedCount=	@Cleaner /\ DeleteOp
<<\\"Remove of \\">>	@DeleteOp
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
CleanPendingLN:	@Cleaner
CleanPendingLN:	@Cleaner
Preload starting
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
<<\\"Preloaded \\">>
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
evict time=	@Evictor
<<\\"Usage: \n \\">>
<<\\"  -h <environment home> \\">>
<<\\"  -a <clean|compress|evict|checkpoint|removedb>\\">>
<<\\"  -ro (read-only - defaults to read-write)\\">>
<<\\"  -s <dbName> (for preloading of evict or db remove)\\">>
<<\\"\\">>
CleanMigrateLN:	@Cleaner
CleanMigrateLN:	@Cleaner
CleanMigrateLN:	@Cleaner
getFirstNode passed null root
getLastNode passed null root
getParentNode passed null
This statement would have triggered an Exception: virtualinvoke searchResult#1.<com.sleepycat.je.tree.IN: void releaseLatchIfOwner()>()
subtree did not have a BIN for leaf	@Latches
RootSplit:	@Logging_Fine
<<\\"CleanAddPendingDB \\">>	@(Cleaner /\ DeleteOp) /\ (DeleteOp /\ Cleaner /\ Logging_Cleaner)
<<\\" node=\\">>	@Cleaner /\ Logging_Cleaner /\ Logging_Base
<<\\" logLsn=\\">>	@Cleaner /\ Logging_Cleaner /\ Logging_Base
\\"<nameLN>\\"
\\"</nameLN>\\"
<nameLN>
</nameLN>
\\\">
\\\">
searchSubTree passed key and left/right search
<<\\"Invalid value of searchType: \\">>
LN_TX
LN
MapLN_TX
MapLN
NameLN_TX
NameLN
DelDupLN_TX
DelDupLN
DupCountLN_TX
DupCountLN
FileSummaryLN	@Cleaner
IN
BIN
DIN
DBIN
Root
Commit
Abort
CkptStart
CkptEnd
INDelete
BINDelta
DupBINDelta
Trace
FileHeader
INDupDelete
Prepare
TxnCommit
.
.
.
.
<<\\" (\\">>
)
\\"!\\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\"
!\\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
false	@Logging_DbLogHandler
true	@Logging_ConsoleHandler
SEVERE	@Logging_Base
false
<<\\"java { \\">>
\\"<mapLN>\\"
\\"</mapLN>\\"
<mapLN>
</mapLN>
\\\">
exactParentFound=
null
<<\\"Cache percent is not a valid integer: \\">>
This statement would have triggered an Exception: virtualinvoke dupRoot#4.<com.sleepycat.je.tree.DIN: void releaseLatch()>()
neither LN or DIN found in BIN
primaryDatabase
Can\'t use as primary:
<<\\"Duplicates must not be allowed for a primary database: \\">>
Primary and secondary databases must be in the same environment
secConfig.getKeyCreator() and getMultiKeyCreator() may not both be non-null
DupRootSplit:	@Logging_Fine
secConfig and getKeyCreator()/getMultiKeyCreator() may be null only if the primary database is read-only
secConfig.getForeignKeyNullifier() and getForeignMultiKeyNullifier() may not both be non-null
ForeignKeyNullifier or ForeignMultiKeyNullifier must be non-null when ForeignKeyDeleteAction is NULLIFY
ForeignKeyNullifier may not be used with SecondaryMultiKeyCreator -- use ForeignMultiKeyNullifier instead
<<\\"Duplicates must not be allowed for a foreign key  database: \\">>
<<\\"Secondary is already associated with a different primary: \\">>
SecondaryDatabase open	@Logging_Finest
allowDuplicates passed to insert but database doesn\'t have allow duplicates set.
key
Can\'t call SecondaryDatabase.delete:
SecondaryDatabase.delete	@Logging_Finest
key
pKey
data
Can\'t call SecondaryDatabase.get:
SecondaryDatabase.get	@Logging_Finest
<<\\"SubtreeRemoval: subtreeRoot = \\">>	@Logging_Fine
key
pKey
data
Can\'t call SecondaryDatabase.getSearchBoth:
SecondaryDatabase.getSearchBoth	@Logging_Finest
<root>
</root>
<tree>
<in/>
</tree>
<<\\"IN \\">>
<<\\"IN \\">>
<<\\"IN \\">>
Mut:	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" existingLn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newLn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newLnLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dupCountLN=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dupRootLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" rootdin=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" ddinLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dbin=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dbinLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" bin=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
Ins:	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" bin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" ln=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" lnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" index=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
InsD:	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\"Secondary \\">>
<<\\" dbin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" bin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" ln=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" lnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\"Secondary \\">>
<<\\"Could not insert secondary key in \\">>
<Transaction id=\\\"	@(Transactions) /\ (Transactions)
\\\"	@(Transactions) /\ (Transactions)
<<\\" name=\\\"\\">>	@(Transactions) /\ (Transactions)
\\\"	@(Transactions) /\ (Transactions)
>	@(Transactions) /\ (Transactions)
<<\\"Transaction \\">>	@Transactions
<<\\"Secondary \\">>
<<\\"Secondary \\">>
Operation not allowed on a secondary
<DatabaseEntry
>
<<\\"Lock Table \\">>	@Latches
Channel closed, may be due to thread interrupt
\\"INCompress:\\"
\\\"/>	@(INCompressor) /\ (INCompressor)
INCompressor.addToQueue should never be called.	@INCompressor
Transaction
Lock
Transaction
<<\\"InCompress.doCompress called, queue size: \\">>	@INCompressor /\ Logging_Fine
++++++++++ begin lock table dump ++++++++++
++++++++++ end lock table dump ++++++++++
: waited for lock
\n
<<\\"Transfer, lock \\">>
<<\\"Transfer, lock \\">>
----\n
\n
<<\\" waits for \\">>
<<\\" nothing\\">>
<<\\" node \\">>
\n
<<\\"Transaction \\">>

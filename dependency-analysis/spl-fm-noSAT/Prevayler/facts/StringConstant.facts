Bank
Unexpected Exception was thrown.
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
OK
Transfer...
North
East
West
Center
South
Holder
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
#
Journal.update() has to be called at least once before Journal.journal().
<<\\"Disk space used: \\">>
<<HASH:-279482281>>
journal
Deposit...
<<\\"Unable to recover transaction \\">>
Deposit
<<\\"The transaction journal has not yet reached transaction \\">>
Prevayler Network Server Receiver	@Replication
<<\\"Expected \\">>
update() must be called at least once
<<\\"Prevayler Stubborn Client \\">>	@Replication
<<\\"Attempted to process \\">>
<<\\"Exception loading JDBC driver class: \\">>
JDBC
<<\\"Exception while trying to connect: \\">>
New Account
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
Error
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
<<\\"Unexpected Exception: \\">>
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
The replication logic is still under development.	@Replication
Prevayler
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
<<\\"Unexpected Exception: \\">>
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
<<\\"selecting record from \\">>
Unexpected InterruptedException.	@(Replication) /\ (Replication)
Unexpected Exception thrown.
Edit
<<\\"Primes found: \\">>
<<\\"update \\">>
<<\\"delete from \\">>
TRANSACTION_TEST
commiting transaction
Withdraw...
updating record
Withdrawal
deleting record
\\"QueryTest\\"
QueryTest
QueryTest
QueryTest
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
Runtime Exception simulated for rollback demonstration purposes.
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
<<\\"Directory doesn\'t exist and could not be created: \\">>
SubscriberUpToDate	@(Replication) /\ (Replication)
<<\\"Path exists but is not a directory: \\">>
Delete
Unable to serialize transaction
Unable to deserialize transaction
withQuery
withQuery
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
00000
Amount must be greater than zero.
Amount maximum (10000) exceeded.
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
systemVersion
executionTime
systemVersion
executionTime
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
<<\\"Account \\">>
Transaction History
<<\\"Creating \\">>
Balance
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
All Accounts
Center
South
locked
Already locked internally
rw
Interesting accounts
<<\\"\\">>
Already locked externally
Refresh
South
Match
Account
Balance
#Entries
Center
<<\\"\\">>
<<\\"\\">>
balance()
transactionHistory().size()
\n	@(Monitor) /\ (Monitor)
\n	@(Monitor) /\ (Monitor)
<<HASH:-595253473>>
PrevalenceBase
hh:mm:ss
<<\\"Bank - \\">>
Transient Prevaylers are unable to take snapshots.	@Snapshot
<<\\"Unable to serialize with Skaringa: \\">>
<<\\"Unable to deserialize with Skaringa: \\">>
<<\\"Unable to start Skaringa: \\">>
journal
xstreamjournal
skaringajournal
Read the javadoc to this method.
already closed
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
already closed
Prevalence
The prevalent system must be configured.
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
journal
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
snapshot	@(Snapshot) /\ (Snapshot)
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Invalid parameter name \'
Invalid parameter value \'
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
Chunk header corrupted
;=\r\n
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
Unexpected end of stream in chunk header
Journal.update() has to be called at least once before Journal.append().
writing to
closing
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
creating
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
<<\\"The transaction log has not yet reached transaction \\">>
0000000000000000000
<<\\"Unable to find journal file containing transaction \\">>
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
<<\\"Error reading file list from directory \\">>
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
update() must be called at least once
Query Test
NAME
OK
Create
Port In Service	@(Replication) /\ (Replication)
Port Not in Service	@(Replication) /\ (Replication)
Transaction Test
yyyy/MM/dd  hh:mm:ss.SSS
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
setting AutoCommit to false
<<\\"insert into \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
<<\\"\nMemory used: \\">>
inserting record
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
<<\\"preparing statement: \\">>
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
<<\\"SQLException \\">>
0.00
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
Transfer
From Account
To Account
Amount
NAME
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
<<\\"Account not found: \\">>
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
ScalabilityTest.properties
Creating the properties file.
<<HASH:1156460636>>
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
Invalid holder name.
Primary suffix \'	@Snapshot
snapshot	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2

<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/if/instruction10	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/tmp<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/if/instruction10
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/if/instruction36	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/tmp<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/if/instruction36
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/if/instruction4	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/if/instruction4
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/if/instruction5	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/tmp<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/if/instruction5
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/if/instruction4	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/if/instruction4
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/if/instruction13	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/if/instruction13
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction28	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/tmp<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction28
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction31	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/tmp<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction31
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction34	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/tmp<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction34
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction37	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/tmp<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction37
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/if/instruction5	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/tmp<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/if/instruction5
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/if/instruction12	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/tmp<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/if/instruction12
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/if/instruction16	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/tmp<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/if/instruction16
<org.prevayler.demos.scalability.Main: java.io.File propertiesFile()>/if/instruction6	<org.prevayler.demos.scalability.Main: java.io.File propertiesFile()>/tmp<org.prevayler.demos.scalability.Main: java.io.File propertiesFile()>/if/instruction6
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/if/instruction4	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/tmp<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/if/instruction4
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/if/instruction7	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/tmp<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/if/instruction7
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/if/instruction9	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/tmp<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/if/instruction9
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction5	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/tmp<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction5
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction10	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/tmp<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction10
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction15	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/tmp<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction15
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction20	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/tmp<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction20
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/if/instruction5	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/tmp<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/if/instruction5
<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/if/instruction13	<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/tmp<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/if/instruction13
<org.prevayler.demos.scalability.Main: java.lang.String prevaylerJournalSerializer()>/if/instruction3	<org.prevayler.demos.scalability.Main: java.lang.String prevaylerJournalSerializer()>/tmp<org.prevayler.demos.scalability.Main: java.lang.String prevaylerJournalSerializer()>/if/instruction3
<org.prevayler.demos.scalability.Main: java.lang.String property(java.lang.String)>/if/instruction4	<org.prevayler.demos.scalability.Main: java.lang.String property(java.lang.String)>/tmp<org.prevayler.demos.scalability.Main: java.lang.String property(java.lang.String)>/if/instruction4
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction5	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/tmp<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction5
<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/if/instruction5	<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/tmp<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/if/instruction5
<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/if/instruction5	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/tmp<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/if/instruction5
<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/if/instruction4	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/tmp<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/if/instruction4
<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/if/instruction5	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/tmp<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/if/instruction5
<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/if/instruction6	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/tmp<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/if/instruction6
<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/if/instruction5	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/tmp<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/if/instruction5
<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>/if/instruction3	<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>/tmp<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>/if/instruction3
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/if/instruction9	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/tmp<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/if/instruction9
<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/if/instruction16	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/tmp<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/if/instruction16
<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/if/instruction10	<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/tmp<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/if/instruction10
<org.prevayler.foundation.ObjectInputStreamWithClassLoader: java.lang.Class resolveClass(java.io.ObjectStreamClass)>/if/instruction4	<org.prevayler.foundation.ObjectInputStreamWithClassLoader: java.lang.Class resolveClass(java.io.ObjectStreamClass)>/tmp<org.prevayler.foundation.ObjectInputStreamWithClassLoader: java.lang.Class resolveClass(java.io.ObjectStreamClass)>/if/instruction4
<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction3	<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/tmp<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction3
<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction5	<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/tmp<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction5
<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction15	<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/tmp<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction15
<org.prevayler.foundation.network.BaseNetworkImpl: void checkPortNotUsed(int)>/if/instruction7	<org.prevayler.foundation.network.BaseNetworkImpl: void checkPortNotUsed(int)>/tmp<org.prevayler.foundation.network.BaseNetworkImpl: void checkPortNotUsed(int)>/if/instruction7
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction16	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction16
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction21	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction21
<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver locateService(int)>/if/instruction8	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver locateService(int)>/tmp<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver locateService(int)>/if/instruction8
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction9	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction9
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction15	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction15
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/if/instruction9	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/tmp<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/if/instruction9
<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/if/instruction5	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/tmp<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/if/instruction5
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/if/instruction14	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/if/instruction14
<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/if/instruction7	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/if/instruction7
<org.prevayler.demos.scalability.ScalabilityTestRun: void stopThreads()>/if/instruction7	<org.prevayler.demos.scalability.ScalabilityTestRun: void stopThreads()>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun: void stopThreads()>/if/instruction7
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/if/instruction17	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/tmp<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/if/instruction17
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/if/instruction5	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/tmp<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/if/instruction5
<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction5	<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction5
<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction8	<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction8
<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction10	<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction10
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/if/instruction6	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/tmp<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/if/instruction6
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/if/instruction6	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/tmp<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/if/instruction6
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/if/instruction15	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/tmp<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/if/instruction15
<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/if/instruction12	<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/tmp<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/if/instruction12
<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/if/instruction9	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/tmp<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/if/instruction9
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/if/instruction4	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/tmp<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/if/instruction4
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/if/instruction10	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/tmp<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/if/instruction10
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/if/instruction7	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/tmp<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/if/instruction7
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/if/instruction6	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/tmp<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/if/instruction6
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/if/instruction3	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/tmp<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/if/instruction3
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/if/instruction22	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/tmp<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/if/instruction22
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction20	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/tmp<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction20
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction31	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/tmp<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction31
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction50	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/tmp<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction50
<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction5	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction5
<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction4	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/tmp<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction4
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction3	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction3
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction9	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction9
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction28	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction28
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction34	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction34
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction44	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction44
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction47	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction47
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction48	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction48
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction49	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction49
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction54	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction54
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction55	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction55
<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/if/instruction3	<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/if/instruction3
<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/if/instruction7	<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/if/instruction7
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction6	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction6
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction8	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction8
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction16	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/tmp<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction16
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction5	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction5
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction18	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction18
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction24	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction24
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction30	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction30
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction41	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/tmp<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction41
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/if/instruction30	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/tmp<org.prevayler.foundation.DeepCopier$Receiver: void run()>/if/instruction30
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction11	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/tmp<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction11
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction18	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/tmp<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction18
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction22	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/tmp<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction22
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction26	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/tmp<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction26
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction30	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/tmp<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction30
<org.prevayler.implementation.PrevaylerDirectory: void checkValidSnapshotSuffix(java.lang.String)>/if/instruction3	<org.prevayler.implementation.PrevaylerDirectory: void checkValidSnapshotSuffix(java.lang.String)>/tmp<org.prevayler.implementation.PrevaylerDirectory: void checkValidSnapshotSuffix(java.lang.String)>/if/instruction3
<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/if/instruction6	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/tmp<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/if/instruction6
<org.prevayler.implementation.PrevaylerDirectory: void checkValidJournalSuffix(java.lang.String)>/if/instruction3	<org.prevayler.implementation.PrevaylerDirectory: void checkValidJournalSuffix(java.lang.String)>/tmp<org.prevayler.implementation.PrevaylerDirectory: void checkValidJournalSuffix(java.lang.String)>/if/instruction3
<org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>/if/instruction5	<org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>/tmp<org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>/if/instruction5
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction4	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/tmp<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction4
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction21	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/tmp<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction21
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction36	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/tmp<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction36
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/if/instruction17	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/tmp<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/if/instruction17
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/if/instruction22	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/tmp<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/if/instruction22
<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/if/instruction4	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/tmp<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/if/instruction4
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/if/instruction9	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/tmp<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/if/instruction9
<org.prevayler.demos.demo2.business.Account: void verify(long)>/if/instruction4	<org.prevayler.demos.demo2.business.Account: void verify(long)>/tmp<org.prevayler.demos.demo2.business.Account: void verify(long)>/if/instruction4
<org.prevayler.demos.demo2.business.Account: void verify(long)>/if/instruction11	<org.prevayler.demos.demo2.business.Account: void verify(long)>/tmp<org.prevayler.demos.demo2.business.Account: void verify(long)>/if/instruction11
<org.prevayler.demos.demo2.business.Account: java.util.Set listeners()>/if/instruction3	<org.prevayler.demos.demo2.business.Account: java.util.Set listeners()>/tmp<org.prevayler.demos.demo2.business.Account: java.util.Set listeners()>/if/instruction3
<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/if/instruction9	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/tmp<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/if/instruction9
<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/if/instruction3	<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/tmp<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/if/instruction3
<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/if/instruction5	<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/tmp<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/if/instruction5
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction15	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction15
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction17	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction17
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/if/instruction3	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/if/instruction3
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/if/instruction6	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/if/instruction6
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction34	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction34
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction41	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction41
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction6	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction6
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction16	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/tmp<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction16
<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/if/instruction5	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/tmp<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/if/instruction5
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/if/instruction17	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/tmp<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/if/instruction17
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/if/instruction9	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/tmp<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/if/instruction9
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/if/instruction10	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/tmp<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/if/instruction10
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction7	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/tmp<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction7
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction29	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/tmp<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction29
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction47	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/tmp<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction47
<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/if/instruction10	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/tmp<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/if/instruction10
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction11	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction11
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction4	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction4
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction14	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction14
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction46	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction46
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction3	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction3
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction5	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction5
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction7	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction7
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/if/instruction32	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/tmp<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/if/instruction32
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/if/instruction4	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/if/instruction4
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/if/instruction9	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/if/instruction9
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/if/instruction4	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/if/instruction4
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/if/instruction10	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/tmp<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/if/instruction10
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/if/instruction7	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/tmp<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/if/instruction7
<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction6	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction6
<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/if/instruction4	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/tmp<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/if/instruction4
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction5	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction5
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction8	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction8
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction24	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction24
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction36	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction36
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction44	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/tmp<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction44
<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/if/instruction3	<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/tmp<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/if/instruction3
<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/if/instruction15	<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/tmp<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/if/instruction15
<org.prevayler.implementation.clock.MachineClock: void update()>/if/instruction5	<org.prevayler.implementation.clock.MachineClock: void update()>/tmp<org.prevayler.implementation.clock.MachineClock: void update()>/if/instruction5
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/if/instruction5	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/tmp<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/if/instruction5
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction9	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction9
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction17	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction17
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction37	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction37
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction22	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/tmp<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction22
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction26	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/tmp<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction26
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction42	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/tmp<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction42
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction73	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/tmp<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction73
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction77	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/tmp<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction77
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/if/instruction7	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/if/instruction7
<org.prevayler.implementation.journal.PersistentJournal: void close()>/if/instruction3	<org.prevayler.implementation.journal.PersistentJournal: void close()>/tmp<org.prevayler.implementation.journal.PersistentJournal: void close()>/if/instruction3
<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction6	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction6
<org.prevayler.implementation.journal.PersistentJournal: long nextTransaction()>/if/instruction3	<org.prevayler.implementation.journal.PersistentJournal: long nextTransaction()>/tmp<org.prevayler.implementation.journal.PersistentJournal: long nextTransaction()>/if/instruction3
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction10	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction10
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction12	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction12
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction14	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction14
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction21	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction21
<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/if/instruction4	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/if/instruction4
<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/if/instruction4	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/if/instruction4
<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/if/instruction7	<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/if/instruction7
<org.prevayler.foundation.network.StubbornNetworkProxy: boolean isOpen()>/if/instruction3	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean isOpen()>/tmp<org.prevayler.foundation.network.StubbornNetworkProxy: boolean isOpen()>/if/instruction3
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/if/instruction3	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/tmp<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/if/instruction3
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/if/instruction7	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/tmp<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/if/instruction7
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/if/instruction15	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/if/instruction15
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/if/instruction35	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/tmp<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/if/instruction35
<org.prevayler.PrevaylerFactory: org.prevayler.Clock clock()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.Clock clock()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.Clock clock()>/if/instruction3
<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/if/instruction4	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/tmp<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/if/instruction4
<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/if/instruction6	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/if/instruction6
<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/if/instruction8	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/tmp<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/if/instruction8
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/if/instruction5	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/if/instruction5
<org.prevayler.PrevaylerFactory: java.lang.String prevalenceDirectory()>/if/instruction3	<org.prevayler.PrevaylerFactory: java.lang.String prevalenceDirectory()>/tmp<org.prevayler.PrevaylerFactory: java.lang.String prevalenceDirectory()>/if/instruction3
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction6	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/tmp<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction6
<org.prevayler.PrevaylerFactory: java.lang.Object prevalentSystem()>/if/instruction3	<org.prevayler.PrevaylerFactory: java.lang.Object prevalentSystem()>/tmp<org.prevayler.PrevaylerFactory: java.lang.Object prevalentSystem()>/if/instruction3
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction17	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/tmp<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction17
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction38	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/tmp<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction38
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction4	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction4
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/if/instruction3
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.censorship.TransactionCensor censor(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction4	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.censorship.TransactionCensor censor(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.censorship.TransactionCensor censor(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction4
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction3	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/tmp<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction3
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction6	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/tmp<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction6
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction10	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/tmp<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction10
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction19	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/tmp<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction19
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction27	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/tmp<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction27
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/if/instruction3
<org.prevayler.PrevaylerFactory: org.prevayler.foundation.serialization.Serializer journalSerializer()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.foundation.serialization.Serializer journalSerializer()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.foundation.serialization.Serializer journalSerializer()>/if/instruction3
<org.prevayler.PrevaylerFactory: java.lang.String journalSuffix()>/if/instruction3	<org.prevayler.PrevaylerFactory: java.lang.String journalSuffix()>/tmp<org.prevayler.PrevaylerFactory: java.lang.String journalSuffix()>/if/instruction3
<org.prevayler.PrevaylerFactory: org.prevayler.foundation.network.OldNetwork network()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.foundation.network.OldNetwork network()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.foundation.network.OldNetwork network()>/if/instruction3
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/if/instruction3
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/if/instruction12	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/if/instruction12
<org.prevayler.PrevaylerFactory: org.prevayler.foundation.monitor.Monitor monitor()>/if/instruction3	<org.prevayler.PrevaylerFactory: org.prevayler.foundation.monitor.Monitor monitor()>/tmp<org.prevayler.PrevaylerFactory: org.prevayler.foundation.monitor.Monitor monitor()>/if/instruction3
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/if/instruction5	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/tmp<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/if/instruction5
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/if/instruction6	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/tmp<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/if/instruction6
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/if/instruction3	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/tmp<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/if/instruction3
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/if/instruction9	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/tmp<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/if/instruction9
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void <init>(java.lang.String,java.lang.String)>/if/instruction11	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void <init>(java.lang.String,java.lang.String)>/tmp<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void <init>(java.lang.String,java.lang.String)>/if/instruction11
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction4	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/tmp<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction4
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/if/instruction21	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/tmp<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/if/instruction21
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/if/instruction9	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/tmp<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/if/instruction9
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction5	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction5
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction12	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction12
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction30	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction30
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction56	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction56
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction74	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/tmp<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction74
<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/if/instruction3	<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/tmp<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/if/instruction3
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/if/instruction4	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/if/instruction4
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/if/instruction3	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/if/instruction3
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/if/instruction3	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/if/instruction3
<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/if/instruction4	<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/if/instruction4
<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/if/instruction4	<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/if/instruction4
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/if/instruction17	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/if/instruction17
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/if/instruction12	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/tmp<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/if/instruction12
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/if/instruction48	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/tmp<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/if/instruction48
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction3	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/tmp<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction3
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction7	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/tmp<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction7
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction14	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/tmp<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction14
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction20	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/tmp<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction20
<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>/if/instruction3	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>/tmp<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>/if/instruction3
<org.prevayler.foundation.Turn: void start()>/if/instruction3	<org.prevayler.foundation.Turn: void start()>/tmp<org.prevayler.foundation.Turn: void start()>/if/instruction3
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/if/instruction4	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/tmp<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/if/instruction4
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: org.prevayler.implementation.PrevalentSystemGuard royalFoodTaster(long)>/if/instruction4	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: org.prevayler.implementation.PrevalentSystemGuard royalFoodTaster(long)>/tmp<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: org.prevayler.implementation.PrevalentSystemGuard royalFoodTaster(long)>/if/instruction4
<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/if/instruction7	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/tmp<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/if/instruction7
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction7	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/tmp<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction7
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction12	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/tmp<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction12
<org.prevayler.foundation.DurableOutputStream: void close()>/if/instruction9	<org.prevayler.foundation.DurableOutputStream: void close()>/tmp<org.prevayler.foundation.DurableOutputStream: void close()>/if/instruction9
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/if/instruction5	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/tmp<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/if/instruction5
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/if/instruction10	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/tmp<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/if/instruction10

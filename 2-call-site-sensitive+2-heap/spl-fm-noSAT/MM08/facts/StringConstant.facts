MM08.jar
prc.name
MobileMedia.prc
MM08.jar
jad.name
MobileMedia.jad
MM08.jar
jar.name
MobileMedia.jar
MM08.jar
preprocessor.symbols
<<\\"device_screen_132x176, includePhotoAlbum,  includeFavourites , includeSorting, includePhotoAlbum, includeMMAPI, includeSmsFeature, capturePhoto, simulatePlayVideo, includeVideo, captureVideo, includePrivacy  \\">>
MM08.jar
midlet.name
MobileMedia
MM08.jar
antenna.home
C:\user\research\MobileMedia\Antenna
MM08.jar
java.home
C:\Program Files\Java\jdk1.5.0_09
MM08.jar
main.class
lancs.mobilemedia.core.ui.MainUIMidlet
MM08.jar
wtk.home
C:\WTK2.5.1
Item label
<<\\"\\">>
Path
<<\\"\\">>
Type of media	@x_NotPrivacy
<<\\"\\">>	@x_NotPrivacy
Save Item
Cancel
<<\\"MediaAccessor::loadAlbums: Found: \\">>
MediaAccessor::loadAlbums: Current store
MediaAccessor::loadAlbums: 0 record stores exist. Creating default one.
mpp-	@(NewCompound1) /\ (NewCompound1)
mpp-	@NewCompound1
Error:
ALBUM
EStou aqui 11...........................
EStou aqui 2222...........................
<<\\"<* ImageAccessor.resetVideoRecordStore() *> delete \\">>
<<\\"No record store named \\">>
<<\\"...or...No record store named \\">>
<<\\"Ignoring Exception: \\">>
ImageAccessor::resetVideoRecordStore: albumNames array was null. Nothing to delete.
ImageListScreen	@NewCompound1
Password	@NewCompound1
ImageListScreen	@x_notMisc
ImageListScreen	@NewCompound1
Error	@NewCompound1
Invalid Password	@NewCompound1
Sorting by BubbleSort...	@(Media) /\ (Media)
done.	@(Media) /\ (Media)
<<\\"<* MusicPlayController.handleCommand() *> \\">>	@(x_NotPrivacy) /\ (x_NotPrivacy)
AlbumListScreen	@(x_NotPrivacy) /\ (x_NotPrivacy)
Copy Media to Album	@(x_NotPrivacy) /\ (x_NotPrivacy /\ captureVideo)
Copy to Album:	@(x_NotPrivacy) /\ (x_NotPrivacy /\ captureVideo)
AlbumListScreen	@(x_NotPrivacy) /\ (x_NotPrivacy /\ captureVideo)
mpa-	@(includeMMAPI) /\ (includeMMAPI)
mpi-	@(includeMMAPI) /\ (includeMMAPI)
My Photo Album	@(includeMMAPI) /\ (includeMMAPI)
Tucan Sam	@(includeMMAPI) /\ (includeMMAPI)
/images/Tucan.png	@(includeMMAPI) /\ (includeMMAPI)
Java	@(includeMMAPI) /\ (includeMMAPI)
/images/Java.png	@(includeMMAPI) /\ (includeMMAPI)
Linux Penguin	@(includeMMAPI) /\ (includeMMAPI)
/images/Penguin.png	@(includeMMAPI) /\ (includeMMAPI)
Duke (Sun)	@(includeMMAPI) /\ (includeMMAPI)
/images/Duke1.PNG	@(includeMMAPI) /\ (includeMMAPI)
UBC Logo	@(includeMMAPI) /\ (includeMMAPI)
/images/ubcLogo.PNG	@(includeMMAPI) /\ (includeMMAPI)
Gail	@(includeMMAPI) /\ (includeMMAPI)
/images/Gail1.PNG	@(includeMMAPI) /\ (includeMMAPI)
J. Gosling	@(includeMMAPI) /\ (includeMMAPI)
/images/Gosling1.PNG	@(includeMMAPI) /\ (includeMMAPI)
Gregor	@(includeMMAPI) /\ (includeMMAPI)
/images/Gregor1.PNG	@(includeMMAPI) /\ (includeMMAPI)
Kris	@(includeMMAPI) /\ (includeMMAPI)
/images/Kdvolder1.PNG	@(includeMMAPI) /\ (includeMMAPI)
\\"AlbumListScreen\\"
\\"ImageScreen\\"
\\"ImageListScreen\\"
\\"NewLabelScreen\\"
\\"ConfirmDeleteAlbumScreen\\"
\\"AddPhotoToAlbum\\"
<<\\"<* SelectMediaController.handleCommand() *>: \\">>	@(MobilMedia) /\ (MobilMedia)
The provided data are not valid	@(Photo) /\ (Photo)
Accept Photo	@x_SMSOrCapturePhotoOrCaptureVideo
Reject Photo	@x_SMSOrCapturePhotoOrCaptureVideo
Ok	@x_SMSOrCapturePhotoOrCaptureVideo
1000	@x_SMSOrCapturePhotoOrCaptureVideo
Starting SMSReceiver::run()	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Error Incoming Photo	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
You have just received a bad fragmentated photo which was not possible to recovery.	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Error interreput	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Error Incoming Photo	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
You have just received a bad fragmentated photo which was not possible to recovery.	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Bad fragmentation	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
BEFORE ALERT CODE	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
New Incoming Photo	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
A MobilePhoto user has sent you a Photo. Do you want to accept it?	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Finishing SMSReceiver run()	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
\\"*\\"
<<\\"<* MediaUtil.readMediaAsByteArray() *> mediaFile = \\">>
Path not valid for this media:
<<\\"<* MediaUtil.readMediaAsByteArray() *> is = \\">>
<<\\"The file \\">>
Path not valid for this file:
<<\\"\\">>
The provided data are not valid
SmsController::Starting SMSReceiver Thread	@x_SMSOrCapturePhotoOrCaptureVideo
vvp-	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
vvpi-	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
My Video Album	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
Vai adicionar os dados	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
Fish	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
Fish	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
video/mpeg	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
<<\\"SmsReceiverController::handleCommand: \\">>	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
NoName	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Reject Photo command	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
AlbumListScreen	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
AlbumListScreen	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Start
Back
Stop
Copy
MIDI Player
Volume: 50
Tempo: 120
Pitch: 0
<<\\"Volume: \\">>
<<\\"Tempo: \\">>
<<\\"Pitch: \\">>
Back	@x_PhotoAlbumAndVideoOrMusic
Select
New Album
Delete Album
Reset
Add Password	@NewCompound1
Select Album
<<\\"<* VideoCaptureController.handleCommand() *> \\">>	@(includeCopyPhoto) /\ (includeCopyPhoto)
Save Video	@(includeCopyPhoto) /\ (includeCopyPhoto)
Capture video	@(includeCopyPhoto) /\ (includeCopyPhoto)
Save to Album:	@(includeCopyPhoto) /\ (includeCopyPhoto)
AlbumListScreen	@(includeCopyPhoto) /\ (includeCopyPhoto)
<<\\"<* PlayVideoController.handleCommand() *> \\">>	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
AlbumListScreen	@(x_MusicOrVideo) /\ (x_MusicOrVideo)
Copy Media to Album	@(x_MusicOrVideo) /\ (x_MusicOrVideo /\ captureVideo)
Copy to Album:	@(x_MusicOrVideo) /\ (x_MusicOrVideo /\ captureVideo)
AlbumListScreen	@(x_MusicOrVideo) /\ (x_MusicOrVideo /\ captureVideo)
1000
sms://
1000
1000
1000
sms://
<<\\"SmsMessaging::sendImage: Sending binary message to: \\">>
<<\\"SmsMessaging::sendImage() num segments to send is: \\">>
<<\\"Send caught: \\">>
SmsMessaging::receiveImage() - start
<<\\"Waiting for SMS on \\">>
DEBUG 1: before smsConn.receive():
DEBUG 2: after smsConn.receive()
<<\\"From: \\">>
Incoming SMS Message with Payload:
Incoming Binary SMS Message...
<<\\"SmsMessaging::receiveImage: sender address = \\">>
<<\\"SmsMessaging::receiveImage: buffer length = \\">>
SmsMessaging::receiveImage() - Finish
<<\\"Closing connection caught: \\">>
<<\\"Closing connection caught: \\">>
My Photo Album
default
<<\\"SmsSenderThread:: 3 Param Constructor: \\">>
<<\\"SmsSenderThread::run: Sending message: \\">>
Finishing SMSSender run()
<<\\"SmsSenderThread: setBinaryData of length: \\">>
Start
Stop
Take photo
Back
No Video Control for capturing!
No RecordControl found!
Error
The mobile database is full
Phone #
5550001
1000
5550001
Send Now
Cancel
<<\\"\\">>	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
<<\\"SmsSenderController::handleCommand: \\">>	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Reciever Details	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
<<\\"SmsController::handleCommand - Sending bytes for image \\">>	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
<<\\"SmsController:handleCommand() - Info from Network Screen is: \\">>	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Binary Message (No Text)	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Cancel sending of SMS message	@(x_SMSOrCapturePhotoOrCaptureVideo) /\ (x_SMSOrCapturePhotoOrCaptureVideo)
Exit	@MobilMedia
Select	@MobilMedia
Select the media to Use	@(MobilMedia) /\ (MobilMedia)
Photos	@(MobilMedia) /\ (includeMMAPI /\ MobilMedia)
Music	@(MobilMedia) /\ (x_NotPrivacy /\ MobilMedia)
Videos	@(MobilMedia) /\ (x_MusicOrVideo /\ MobilMedia)
View	@includeMMAPI
Play	@x_NotPrivacy
Play Video	@x_MusicOrVideo
Capture Video	@includeCopyPhoto
Capture Photo	@x_misc
Add
Delete
Back
Edit Label
Sort by Views	@Media
Set Favorite	@includeVideo
View Favorites	@includeVideo
Choose Items
<* BaseController.goToPreviousScreen() **>
AlbumListScreen
BaseThread:: 0 Param Constructor used: Using default values
Starting BaseThread::run()
Finishing Baseathread::run()
<<\\" \\">>	@NewCompound1
<<\\"<* AlbumController.handleCommand() *>: \\">>
<* BaseController.handleCommand() *> Reset Photo Album
AlbumListScreen
Create new Photo Album here
NewLabelScreen
Add new Photo Album
Delete Photo Album here
ConfirmDeleteAlbumScreen
<<\\"Would you like to remove the album \\">>
Delete Photo Album
Yes - Delete
No - Delete
Password	@NewCompound1
Define a Password	@NewCompound1
Would you like to define a password to this Album	@NewCompound1
Yes	@NewCompound1
No	@NewCompound1
Define a Password	@NewCompound1
<<\\"<* AlbumController.handleCommand() *>: \\">>	@NewCompound1
Error	@NewCompound1
Invalid Password	@NewCompound1
Define a Password	@NewCompound1
<* AlbumController.goToPreviousScreen() *>
AlbumListScreen
mmp-	@(Photo) /\ (Photo)
mmpi-	@(Photo) /\ (Photo)
My Music Album	@(Photo) /\ (Photo)
Applause	@(Photo) /\ (Photo)
/images/applause.wav	@(Photo) /\ (Photo)
Baby	@(Photo) /\ (Photo)
/images/baby.wav	@(Photo) /\ (Photo)
Bong	@(Photo) /\ (Photo)
/images/bong.wav	@(Photo) /\ (Photo)
Jump	@(Photo) /\ (Photo)
/images/jump.wav	@(Photo) /\ (Photo)
Printer	@(Photo) /\ (Photo)
/images/printer.wav	@(Photo) /\ (Photo)
Applause	@(Photo) /\ (Photo)
audio/x-wav	@(Photo) /\ (Photo)
Baby	@(Photo) /\ (Photo)
audio/x-wav	@(Photo) /\ (Photo)
Bong	@(Photo) /\ (Photo)
audio/x-wav	@(Photo) /\ (Photo)
Jump	@(Photo) /\ (Photo)
audio/x-wav	@(Photo) /\ (Photo)
Printer	@(Photo) /\ (Photo)
audio/x-wav	@(Photo) /\ (Photo)
Copy
Start
Back
Stop
Error ao criar o player:
Crio os comandos e vai iniciar o display
Error criar or controler
Error ao definir a tela
<<\\"<* PhotoController.handleCommand() *> \\">>
AddPhotoToAlbum
Add new item to Album
ImageScreen	@includeMMAPI
New photo	@x_misc
ImageListScreen
Edit Label Item
ImageListScreen	@Media
<<\\"<* BaseController.handleCommand() *> Image = \\">>
ImageListScreen
<<\\"<* PhotoController.handleCommand() *> Save Photo Label = \\">>
<<\\"<* BaseController.handleCommand() *> Image = \\">>	@(Media) /\ (Media)
Current List from display is NULL!
<* PhotoController.goToPreviousScreen() *>
Can\'t go back here...Should never reach this spot
ImageListScreen
ImageListScreen
Back
Copy
Send Photo by SMS
<<\\"\\">>
Screen size:176:205
PhotoViewScreen::paint(): Image object was null.
<<\\"\\">>	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic)
<<\\"<* PhotoViewController.handleCommand() *> \\">>	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic)
Copy Photo to Album	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic)
Copy to Album:	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic)
AlbumListScreen	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic)
Olha para a captura	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
Obteve a imagem	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
Copy Photo to Album	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
Crio a screen	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
New picture	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
Copy to Album:	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
Definiu a imagem	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic /\ x_misc)
AlbumListScreen	@(x_PhotoAlbumOrMusic) /\ (x_PhotoAlbumOrMusic)
image/png	@Photo
audio/x-wav	@Photo
video/mpeg	@Photo
Name
<<\\"\\">>
OK	@NewCompound1
Save	@x_notMisc
Cancel
Password	@(NewCompound1) /\ (NewCompound1)
<<\\"\\">>	@(NewCompound1) /\ (NewCompound1)
Save	@(NewCompound1) /\ (NewCompound1)
Confirm	@(NewCompound1) /\ (NewCompound1)
Store	@(NewCompound1) /\ (NewCompound1)
Cancel	@(NewCompound1) /\ (NewCompound1)
<<\\"AbstractController::postCommand - Current controller is: \\">>
<<\\"Passing to next controller in chain: \\">>
<<\\"AbstractController::postCommand - Reached top of chain. No more handlers for command: \\">>

private	<Vertex$VertexIter3: java.util.Iterator iter>
final	<Vertex$VertexIter3: Vertex this$0>
private	<Vertex$EdgeIter1: java.util.Iterator iter>
final	<Vertex$EdgeIter1: Vertex this$0>
final	<Graph$Comparator2: Graph this$0>
private	<Edge: Vertex start>
private	<Edge: Vertex end>
private	<Edge: int weight>
private	<Graph$EdgeIter1: java.util.Iterator iter>
final	<Graph$EdgeIter1: Graph this$0>
public	<Vertex: java.lang.String name>
public	<Vertex: java.util.LinkedList adjacentVertices>
public	<Vertex: java.util.LinkedList adjacentNeighbors>
public	<Vertex: java.util.LinkedList neighbors>
public	<Vertex: java.util.LinkedList weightsList>
public	<Vertex: boolean visited>
public	<Vertex: int vertexNumber>
public	<Vertex: int componentNumber>
public	<Vertex: int finishTime>
public	<Vertex: int strongComponentNumber>
public	<Vertex: int VertexCycle>
public	<Vertex: int VertexColor>
public	<Vertex: Vertex representative>
public	<Vertex: java.util.LinkedList members>
public	<Vertex: java.lang.String pred>
public	<Vertex: int key>
private	<Vertex$EdgeIter2: java.util.Iterator iter>
final	<Vertex$EdgeIter2: Vertex this$0>
final	<Graph$Comparator1: Graph this$0>
	<Graph: java.util.LinkedList vertices>
private	<Graph: java.util.LinkedList edges>
	<Graph: boolean edgesNotBuilt>
public	<Graph: java.io.Reader inFile>
public	<Graph: int ch>
static	<Graph: int ch>
static	<Graph: long last>
static	<Graph: long current>
static	<Graph: long accum>
private	<VertexIter: java.util.Iterator iter>
	<NumberWorkSpace: int vertexCounter>
static	<Main: Vertex[] V>
static	<Main: int[] startVertices>
static	<Main: int[] endVertices>
private	<Vertex$VertexIter2: java.util.Iterator iter>
final	<Vertex$VertexIter2: Vertex this$0>
private	<Vertex$VertexIter1: java.util.Iterator iter>
final	<Vertex$VertexIter1: Vertex this$0>
	<RegionWorkSpace: int counter>
public	<Neighbor: Vertex neighbor>
public	<Neighbor: int weight>
public	<Neighbor: Vertex end>
public	<Neighbor: Edge edge>
public	<GlobalVarsWrapper: java.util.LinkedList queue>
static	<GlobalVarsWrapper: java.util.LinkedList queue>
	<WorkSpaceTranspose: int SCCCounter>
final	<Graph$Comparator3: Graph this$0>
private	<Vertex$EdgeIter3: java.util.Iterator iter>
final	<Vertex$EdgeIter3: Vertex this$0>
public	<CycleWorkSpace: boolean AnyCycles>
public	<CycleWorkSpace: int counter>
public	<CycleWorkSpace: int WHITE>
static	<CycleWorkSpace: int WHITE>
final	<CycleWorkSpace: int WHITE>
public	<CycleWorkSpace: int GRAY>
static	<CycleWorkSpace: int GRAY>
final	<CycleWorkSpace: int GRAY>
public	<CycleWorkSpace: int BLACK>
static	<CycleWorkSpace: int BLACK>
final	<CycleWorkSpace: int BLACK>
	<FinishTimeWorkSpace: int FinishCounter>

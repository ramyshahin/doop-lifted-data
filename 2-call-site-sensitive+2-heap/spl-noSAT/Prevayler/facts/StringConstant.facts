locked
Already locked internally
rw
<<\\"\\">>
Already locked externally
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
<<\\"\\">>
Klaus Wuestefeld and Daniel Santos.\n\n
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
ScalabilityTest.properties
Creating the properties file.
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
<<HASH:1156460636>>
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
SubscriberUpToDate	@(Replication) /\ (Replication)
Transfer...
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
Delete
Transfer
From Account
To Account
Amount
North
East
West
Center
South
Holder
OK
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
#
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
Port In Service	@(Replication) /\ (Replication)
Port Not in Service	@(Replication) /\ (Replication)
0.00
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
Deposit...
Deposit
<<\\"Account not found: \\">>
Unable to serialize transaction
systemVersion
Unable to deserialize transaction
executionTime
systemVersion
executionTime
withQuery
withQuery
Prevayler Network Server Receiver	@Replication
NAME
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
<<\\"Attempted to process \\">>
Transaction Test
Prevayler
Runtime Exception simulated for rollback demonstration purposes.
<<\\"Unexpected Exception: \\">>
\n	@(Monitor) /\ (Monitor)
New Account
\n	@(Monitor) /\ (Monitor)
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
<<\\"selecting record from \\">>
<<\\"update \\">>
<<\\"delete from \\">>
TRANSACTION_TEST
commiting transaction
Invalid parameter name \'
Invalid parameter value \'
updating record
Chunk header corrupted
;=\r\n
deleting record
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
The replication logic is still under development.	@Replication
Unexpected end of stream in chunk header
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
Bank
<<HASH:-595253473>>
Unexpected InterruptedException.	@(Replication) /\ (Replication)
<<\\"Unable to serialize with Skaringa: \\">>
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
<<\\"Unable to deserialize with Skaringa: \\">>
<<\\"Unable to start Skaringa: \\">>
Edit
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
0000000000000000000
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
<<\\"Error reading file list from directory \\">>
All Accounts
Center
South
00000
Amount must be greater than zero.
Amount maximum (10000) exceeded.
Primary suffix \'	@Snapshot
snapshot	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
Withdraw...
Withdrawal
Create
Journal.update() has to be called at least once before Journal.append().
writing to
closing
creating
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
setting AutoCommit to false
<<\\"insert into \\">>
inserting record
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
<<\\"preparing statement: \\">>
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
<<\\"SQLException \\">>
\\"QueryTest\\"
update() must be called at least once
QueryTest
QueryTest
QueryTest
yyyy/MM/dd  hh:mm:ss.SSS
<<\\"Creating \\">>
Invalid holder name.
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
<<\\"Account \\">>
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
Transaction History
Balance
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
OK
<<\\"Primes found: \\">>
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
journal
xstreamjournal
skaringajournal
Unexpected Exception thrown.
Read the javadoc to this method.
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
Prevalence
The prevalent system must be configured.
<<HASH:-279482281>>
Journal.update() has to be called at least once before Journal.journal().
journal
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
snapshot	@(Snapshot) /\ (Snapshot)
<<\\"Expected \\">>
update() must be called at least once
Unexpected Exception was thrown.
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
Query Test
NAME
hh:mm:ss
<<\\"Bank - \\">>
<<\\"Disk space used: \\">>
journal
<<\\"Prevayler Stubborn Client \\">>	@Replication
Interesting accounts
Refresh
South
Match
Account
Balance
#Entries
Center
balance()
transactionHistory().size()
Error
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
<<\\"Unexpected Exception: \\">>
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
<<\\"Exception loading JDBC driver class: \\">>
JDBC
<<\\"Exception while trying to connect: \\">>
already closed
already closed
Prevayler Network Client Receiver	@(Replication) /\ (Replication)

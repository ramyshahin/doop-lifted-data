\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
Withdraw...
Withdrawal
systemVersion
executionTime
systemVersion
executionTime
0000000000000000000
Create
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
Primary suffix \'	@Snapshot
<<\\"Error reading file list from directory \\">>
Unexpected InterruptedException
snapshot	@Snapshot
Error during deserialization
Deep copy failed in an unknown way
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
yyyy/MM/dd  hh:mm:ss.SSS
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
<<HASH:-279482281>>
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
locked
Already locked internally
rw
<<\\"\\">>
Already locked externally
<<\\"\\">>
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"\\">>
<<\\"Attempted to apply transaction \\">>
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
Port In Service	@(Replication) /\ (Replication)
Error
Port Not in Service	@(Replication) /\ (Replication)
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
North
East
West
Center
South
Holder
<<\\"Exception loading JDBC driver class: \\">>
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
JDBC
Transfer...
<<\\"Exception while trying to connect: \\">>
#
Bank
\n	@(Monitor) /\ (Monitor)
<<\\"update \\">>
<<\\"delete from \\">>
TRANSACTION_TEST
commiting transaction
\n	@(Monitor) /\ (Monitor)
updating record
Prevayler
deleting record
<<\\"Unexpected Exception: \\">>
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
Query Test
NAME
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
<<\\"Prevayler Stubborn Client \\">>	@Replication
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
Invalid holder name.
NAME
Journal.update() has to be called at least once before Journal.append().
Edit
writing to
closing
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
creating
<<\\"selecting record from \\">>
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
update() must be called at least once
Journal.update() has to be called at least once before Journal.journal().
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
<<\\"Expected \\">>
Transfer
update() must be called at least once
From Account
To Account
Amount
setting AutoCommit to false
<<\\"insert into \\">>
inserting record
<<\\"preparing statement: \\">>
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
<<\\"SQLException \\">>
<<HASH:-595253473>>
New Account
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Interesting accounts
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Refresh
Klaus Wuestefeld and Daniel Santos.\n\n
South
Match
Account
Balance
#Entries
Center
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
balance()
ScalabilityTest.properties
transactionHistory().size()
Creating the properties file.
<<HASH:1156460636>>
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
already closed
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
already closed
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
00000
0.00
Amount must be greater than zero.
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
Amount maximum (10000) exceeded.
Deposit...
Deposit
Unexpected Exception was thrown.
hh:mm:ss
<<\\"Bank - \\">>
All Accounts
Center
South
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
OK
<<\\"Disk space used: \\">>
journal
The replication logic is still under development.	@Replication
Unexpected Exception thrown.
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
<<\\"Unexpected Exception: \\">>
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
Unable to serialize transaction
Unable to deserialize transaction
withQuery
withQuery
Unexpected InterruptedException.	@(Replication) /\ (Replication)
Prevayler Network Server Receiver	@Replication
Delete
<<\\"Account \\">>
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
Transaction History
Balance
OK
<<\\"Attempted to process \\">>
<<\\"Account not found: \\">>
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Transaction Test
Invalid parameter name \'
Invalid parameter value \'
Chunk header corrupted
;=\r\n
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
<<HASH:713442402>>	@(Replication) /\ (Replication)
Unexpected end of stream in chunk header
demo2	@(Replication) /\ (Replication)
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
<<\\"Creating \\">>
\\"QueryTest\\"
QueryTest
QueryTest
QueryTest
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
<<\\"Unable to serialize with Skaringa: \\">>
<<\\"Unable to deserialize with Skaringa: \\">>
<<\\"Unable to start Skaringa: \\">>
Runtime Exception simulated for rollback demonstration purposes.
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
SubscriberUpToDate	@(Replication) /\ (Replication)
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
journal
xstreamjournal
skaringajournal
Read the javadoc to this method.
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
Prevalence
The prevalent system must be configured.
journal
snapshot	@(Snapshot) /\ (Snapshot)
<<\\"Primes found: \\">>
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2

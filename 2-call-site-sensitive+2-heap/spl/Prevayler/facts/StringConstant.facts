Edit
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
<<\\"Exception loading JDBC driver class: \\">>
JDBC
<<\\"Exception while trying to connect: \\">>
The minimum number of threads cannot be greater than the maximum number.
Query Test
NAME
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Deposit...
Deposit
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
Transfer
From Account
To Account
Amount
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
setting AutoCommit to false
<<\\"insert into \\">>
Prevayler Network Server Receiver	@Replication
0.00
Prevayler
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
<<\\"Unexpected Exception: \\">>
inserting record
<<\\"preparing statement: \\">>
<<\\"delete from \\">>
<<\\"Prevayler Stubborn Client \\">>	@Replication
<<\\"deleting all records from \\">>
commiting insertion of test records
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
<<\\"SQLException \\">>
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Unexpected Exception was thrown.
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
<<\\"Attempted to process \\">>
Runtime Exception simulated for rollback demonstration purposes.
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
locked
Already locked internally
rw
<<\\"\\">>
Already locked externally
<<\\"\\">>
<<\\"\\">>
Transaction Test
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
<<HASH:-279482281>>
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
Unable to serialize transaction
ScalabilityTest.properties
Creating the properties file.
Unable to deserialize transaction
<<HASH:1156460636>>
withQuery
withQuery
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
00000
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
Amount must be greater than zero.
<<\\"Property \\">>
Amount maximum (10000) exceeded.
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2
Port In Service	@(Replication) /\ (Replication)
Port Not in Service	@(Replication) /\ (Replication)
Create
<<\\"Disk space used: \\">>
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
journal
hh:mm:ss
<<\\"Bank - \\">>
already closed
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
already closed
SubscriberUpToDate	@(Replication) /\ (Replication)
Interesting accounts
Refresh
South
Match
Account
Balance
#Entries
Center
Withdraw...
Withdrawal
balance()
transactionHistory().size()
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
<<\\"Primes found: \\">>
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
<<\\"Unexpected Exception: \\">>
The replication logic is still under development.	@Replication
<<\\"Account not found: \\">>
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
demo1
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
Unexpected InterruptedException.	@(Replication) /\ (Replication)
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
<<\\"Unable to serialize with Skaringa: \\">>
<<\\"Unable to deserialize with Skaringa: \\">>
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
<<\\"Unable to start Skaringa: \\">>
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
0000000000000000000
New Account
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
Journal.update() has to be called at least once before Journal.journal().
<<\\"Error reading file list from directory \\">>
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
<<\\"Expected \\">>
OK
update() must be called at least once
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
Unexpected Exception thrown.
Delete
<<\\"update \\">>
OK
<<\\"delete from \\">>
TRANSACTION_TEST
commiting transaction
Error
<<\\"Account \\">>
updating record
deleting record
Transaction History
All Accounts
Balance
Center
South
Invalid holder name.
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
<<\\"Creating \\">>
\n	@(Monitor) /\ (Monitor)
\n	@(Monitor) /\ (Monitor)
Bank
<<HASH:-595253473>>
\\"QueryTest\\"
QueryTest
QueryTest
QueryTest
North
East
West
Center
South
Holder
#
NAME
Journal.update() has to be called at least once before Journal.append().
writing to
closing
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
creating
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
journal
xstreamjournal
skaringajournal
Read the javadoc to this method.
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
<<\\"There are transactions needing to be recovered from \\">>
Prevalence
The prevalent system must be configured.
<<\\"Expected \\">>
journal
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
snapshot	@(Snapshot) /\ (Snapshot)
update() must be called at least once
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
systemVersion
executionTime
systemVersion
<<\\"selecting record from \\">>
executionTime
Primary suffix \'	@Snapshot
snapshot	@Snapshot
Robustness Reminder
snapshot	@(Snapshot) /\ (Snapshot)
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
Transfer...
yyyy/MM/dd  hh:mm:ss.SSS
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Invalid parameter name \'
Invalid parameter value \'
Chunk header corrupted
;=\r\n
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
Unexpected end of stream in chunk header

<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/catch java.lang.Throwable/1	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/catch java.lang.Throwable/0
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/catch java.io.IOException/0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/catch java.net.SocketException/0	@Replication
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/catch java.sql.SQLException/1	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/catch java.sql.SQLException/0
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/catch java.lang.Throwable/1	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/catch java.lang.Throwable/0
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void closeForReconnect()>/catch java.lang.Throwable/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void closeForReconnect()>/catch java.io.IOException/0	@Replication
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Error/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.RuntimeException/0
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Error/0
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/0
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/2	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/1
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/3	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/2
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/catch java.lang.Throwable/1	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/catch java.lang.Throwable/0
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/catch java.lang.Throwable/2	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/catch java.lang.Throwable/1
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/catch java.lang.Throwable/3	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/catch java.lang.Throwable/2
<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/catch java.lang.Throwable/1	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/catch java.lang.Throwable/0	@Snapshot
<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/catch java.lang.Throwable/2	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/catch java.lang.Throwable/1	@Snapshot
<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/catch java.lang.Throwable/3	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/catch java.lang.Throwable/2	@Snapshot
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/0
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/2	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/1
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/3	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/2
<org.prevayler.foundation.FileLocker: void release()>/catch java.lang.Throwable/1	<org.prevayler.foundation.FileLocker: void release()>/catch java.lang.Throwable/0
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/catch java.io.ObjectStreamException/0	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/catch java.io.EOFException/0
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/catch java.io.UTFDataFormatException/0	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/catch java.io.ObjectStreamException/0
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/catch java.lang.RuntimeException/0	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/catch java.io.UTFDataFormatException/0
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/catch java.lang.OutOfMemoryError/0	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/catch java.lang.Exception/0
<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/1	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/catch java.lang.Throwable/0
<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/catch java.lang.Throwable/1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/catch java.lang.Throwable/0
<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/catch java.lang.Throwable/1	<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/catch java.lang.Throwable/0
<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/catch java.lang.Throwable/0	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/catch java.io.IOException/0
<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/catch java.lang.Throwable/1	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/catch java.lang.Throwable/0
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.lang.Throwable/1	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.lang.Throwable/0
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.io.IOException/0	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.lang.Throwable/1
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.lang.Throwable/2	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.io.IOException/0
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.lang.Throwable/3	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/catch java.lang.Throwable/2
<org.prevayler.implementation.replication.ServerConnection: void run()>/catch java.lang.ClassNotFoundException/0	<org.prevayler.implementation.replication.ServerConnection: void run()>/catch java.io.IOException/0	@Replication
<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/1	<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/0
<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/2	<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/1
<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/3	<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/2
<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/4	<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/3
<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/5	<org.prevayler.foundation.DurableOutputStream: void close()>/catch java.lang.Throwable/4
<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/catch java.lang.Error/0	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/catch java.lang.RuntimeException/0	@Replication
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/0
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.io.IOException/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Throwable/1
<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/catch java.lang.Throwable/0	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/catch java.io.IOException/0	@Replication
<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/catch java.lang.Throwable/0	@Replication
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/catch java.lang.Throwable/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/catch java.io.IOException/0	@Replication
<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/0	@Replication
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/catch java.lang.Throwable/1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/catch java.lang.Throwable/0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/catch java.lang.OutOfMemoryError/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/catch java.lang.Throwable/1
<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/0	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.io.IOException/0	@Replication
<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/0	@Replication
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/catch java.lang.Throwable/0	@Replication
<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/catch java.lang.Throwable/0	@Replication
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.Error/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/catch java.lang.RuntimeException/0	@Censor
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.lang.ClassNotFoundException/0	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.io.IOException/0
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.lang.RuntimeException/0	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.lang.ClassNotFoundException/0
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.lang.Error/0	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.lang.RuntimeException/0
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.io.IOException/1	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/catch java.lang.Error/0
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/catch java.lang.Exception/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/catch java.lang.RuntimeException/0
<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/catch java.io.IOException/1	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/catch java.io.IOException/0	@Replication
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/catch java.lang.Throwable/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/catch java.io.IOException/0	@Replication
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/catch java.io.IOException/0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/catch java.lang.Throwable/0
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/catch java.io.IOException/1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/catch java.io.IOException/0
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/catch java.lang.Throwable/1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/catch java.io.IOException/1
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/catch java.io.IOException/1	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/catch java.io.IOException/0	@Replication
<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/catch java.lang.Exception/0	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/catch java.lang.RuntimeException/0
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/catch java.lang.Throwable/1	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/catch java.lang.Throwable/0	@Replication
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/catch java.lang.InterruptedException/0	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/catch java.lang.Throwable/1	@Replication
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/catch java.io.IOException/0	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/catch java.lang.InterruptedException/0	@Replication
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/catch java.lang.Throwable/1	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/catch java.lang.Throwable/0
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/0
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/2	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/1
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/3	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/2
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/4	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/3
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/5	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/4
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/6	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/5
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/1	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/catch java.lang.Throwable/0
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/1	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/0
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/2	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/1
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/3	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/catch java.lang.Throwable/2

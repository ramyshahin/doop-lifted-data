<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction35	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/nextTransaction#_0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction53	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l7
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/assign/instruction10	2	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/initialOperationCount#_87
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction30	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l2
<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/assign/instruction11	1	<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/$l1
<org.prevayler.foundation.Turn: void start()>/assign/instruction6	1	<org.prevayler.foundation.Turn: void start()>/$i1
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction5	1	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/id#_0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction43	2	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/nextTransaction#_0
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction6	1	<org.prevayler.demos.scalability.Record: int hashCode()>/$l0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction29	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l6
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThread(long,int)>/assign/instruction8	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThread(long,int)>/$i0
<org.prevayler.implementation.PrevaylerDirectory: java.io.File file(long,java.lang.String)>/assign/instruction13	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File file(long,java.lang.String)>/$i0
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/assign/instruction12	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/threads_$$A_1#_80
<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>/assign/instruction8	1	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>/$l0
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction9	1	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/id#_0
<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/assign/instruction10	1	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/$i1	@(GZip) /\ (GZip)
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/assign/instruction35	1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/primeCandidate_$$A_1#_39
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/assign/instruction55	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/recoveringTransaction_$$A_1#_197
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/assign/instruction9	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$l2
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/assign/instruction26	2	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/square#_57
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction24	2	<org.prevayler.demos.scalability.Record: int hashCode()>/$l12
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/assign/instruction5	1	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/$l0	@(Censor) /\ (Censor)
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/assign/instruction5	1	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/$l0
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction14	1	<org.prevayler.demos.scalability.Record: int hashCode()>/$l3
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/assign/instruction13	2	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/$l2
<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/assign/instruction7	1	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/$l1
<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/assign/instruction5	2	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/$l0
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>/assign/instruction3	1	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>/b#_0	@(GZip) /\ (GZip)
<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/assign/instruction14	2	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/idToDelete#_37
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction18	1	<org.prevayler.demos.scalability.Record: int hashCode()>/$l6
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction5	2	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l1
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction42	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l14
<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>/assign/instruction5	1	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>/$i0
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/assign/instruction20	2	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/systemVersion#_0
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/assign/instruction5	2	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/expectedSystemVersion#_0
<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/assign/instruction5	1	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/newMillis#_30
<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>/assign/instruction8	1	<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>/operationSequence#_0
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/assign/instruction4	1	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$r0
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/assign/instruction35	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/files#_101
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction23	2	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$l3
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/assign/instruction8	2	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$l1
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/assign/instruction43	1	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$i1
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/assign/instruction12	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/$i0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction34	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l9
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction18	2	<org.prevayler.demos.scalability.Record: int hashCode()>/$l8
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/assign/instruction9	1	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/amount#_0
<org.prevayler.demos.demo2.business.Account: void withdraw(long,java.util.Date)>/assign/instruction5	1	<org.prevayler.demos.demo2.business.Account: void withdraw(long,java.util.Date)>/amount#_0
<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/assign/instruction14	1	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/$l4
<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/assign/instruction10	2	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/afterTrailer#_16	@(GZip) /\ (GZip)
<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/assign/instruction4	1	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/$d0
<org.prevayler.foundation.StopWatch: long millisEllapsed()>/assign/instruction4	1	<org.prevayler.foundation.StopWatch: long millisEllapsed()>/$l0
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/assign/instruction11	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/i_$$A_1#_113
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction26	1	<org.prevayler.demos.scalability.Record: int hashCode()>/$l15
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/assign/instruction8	2	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$l3
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction14	2	<org.prevayler.demos.scalability.Record: int hashCode()>/$l5
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/assign/instruction3	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$l0
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/assign/instruction26	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/$d2
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/assign/instruction32	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/size#_64
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction41	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l11
<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/assign/instruction12	2	<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/$l2
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction10	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/operation_$$A_1#_127
<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/assign/instruction5	2	<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/amount#_0
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/assign/instruction11	1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$i1
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/assign/instruction15	1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/i_$$A_1#_31
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/assign/instruction20	2	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/latestVersion_$$A_1#_107
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/assign/instruction18	2	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/factor_$$A_1#_61
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/assign/instruction6	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/$i0	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/assign/instruction12	2	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/secondsEllapsed#_94
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/assign/instruction16	1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/systemVersion#_54
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction41	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l13
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/assign/instruction13	2	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/$l0	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction40	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$i11
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/assign/instruction9	2	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$l3
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/assign/instruction9	2	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/$l0
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/assign/instruction21	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/recoveringTransaction_$$A_1#_197
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/assign/instruction16	2	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/initialTransactionWanted#_0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction30	2	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l7
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/assign/instruction28	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/i_$$A_1#_107
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction12	1	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l7
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/assign/instruction22	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/factor_$$A_1#_61
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/assign/instruction12	1	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/$d0
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/assign/instruction35	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/$i0
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction13	2	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l8
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/assign/instruction3	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$l0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction10	2	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l1
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/assign/instruction9	2	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/systemVersion#_0
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/assign/instruction21	2	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/initialTransaction#_0
<org.prevayler.demos.demo2.business.Account: void verify(long)>/assign/instruction10	1	<org.prevayler.demos.demo2.business.Account: void verify(long)>/amount#_0
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction8	2	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l3
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/assign/instruction10	1	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/$l1
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/assign/instruction44	1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$i3
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/assign/instruction39	2	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/read_$$A_1#_76
<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/assign/instruction10	1	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/$i0
<org.prevayler.foundation.StopWatch: long millisEllapsed()>/assign/instruction4	2	<org.prevayler.foundation.StopWatch: long millisEllapsed()>/$l1
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/assign/instruction9	1	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/$i0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction34	2	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/operation_$$A_1#_127
<org.prevayler.demos.demo2.business.Account: void verify(long)>/assign/instruction3	1	<org.prevayler.demos.demo2.business.Account: void verify(long)>/amount#_0
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/assign/instruction11	1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$i1
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/assign/instruction20	1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$l2
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction22	2	<org.prevayler.demos.scalability.Record: int hashCode()>/$l11
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/assign/instruction41	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$l0
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/assign/instruction41	2	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/recoveringTransaction_$$A_1#_197
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/assign/instruction34	2	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/minThreads#_0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction26	2	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l3
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction35	2	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$l5
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/assign/instruction16	2	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/$l1
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/assign/instruction39	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/value_$$A_1_$$A_1#_81
<org.prevayler.implementation.clock.MachineClock: void update()>/assign/instruction4	1	<org.prevayler.implementation.clock.MachineClock: void update()>/newTime#_22
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction26	2	<org.prevayler.demos.scalability.Record: int hashCode()>/$l14
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/assign/instruction12	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/i_$$A_1#_24
<org.prevayler.implementation.clock.MachineClock: void update()>/assign/instruction4	2	<org.prevayler.implementation.clock.MachineClock: void update()>/$l0
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/assign/instruction15	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/files#_21
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/assign/instruction19	1	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/$l1
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/assign/instruction34	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/maxThreads#_0
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/assign/instruction14	1	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$l0
<org.prevayler.demos.scalability.TransactionTestRun: void prepare()>/assign/instruction4	1	<org.prevayler.demos.scalability.TransactionTestRun: void prepare()>/$i0
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/assign/instruction19	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/i_$$A_1#_129
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction8	1	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l4
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction6	2	<org.prevayler.demos.scalability.Record: int hashCode()>/$l2
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/assign/instruction18	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/candidate#_0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction55	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l8
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction26	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/operation_$$A_1#_127
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/assign/instruction9	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/$l1
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/assign/instruction24	1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$l1
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/assign/instruction8	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/operationsPerSecond#_72
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction7	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$l1
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/assign/instruction13	1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/$l1
<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/assign/instruction5	1	<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/$l0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction55	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/recoveringTransaction#_47
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction11	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l0
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/assign/instruction20	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/candidateVersion#_108
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction12	2	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l6
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction69	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/i_$$A_1#_53
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/assign/instruction8	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$l2
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/assign/instruction4	1	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/args#_0	@(Replication) /\ (Replication)
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/assign/instruction16	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/version#_130
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/assign/instruction32	2	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/value_$$A_1_$$A_1#_81
<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/assign/instruction14	1	<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/$i1
<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/assign/instruction13	1	<org.prevayler.demos.scalability.TransactionTestRun: long spreadId(long)>/$l9
<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/assign/instruction12	1	<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/$l0
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction24	1	<org.prevayler.demos.scalability.Record: int hashCode()>/$l13
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/assign/instruction20	1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/files#_29
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/assign/instruction8	2	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/$d0
<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/assign/instruction4	1	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/$i0	@(GZip) /\ (GZip)
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/assign/instruction9	1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$l0
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/assign/instruction14	2	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$l2
<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/assign/instruction7	2	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/operationSequence#_0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction43	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/initialTransactionWanted#_0
<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>/assign/instruction6	1	<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>/$i0	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction11	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/initialTransaction#_0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction26	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l2
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction53	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l6
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/assign/instruction11	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/journals#_118
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/assign/instruction3	1	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/b#_0	@(GZip) /\ (GZip)
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/assign/instruction29	2	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l5
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/assign/instruction9	2	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/tickets#_0
<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/assign/instruction7	1	<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/id#_0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/assign/instruction26	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/initialTransaction#_0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction16	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$l7
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/assign/instruction26	1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$i6
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/assign/instruction8	1	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$l0
<org.prevayler.demos.scalability.Record: int hashCode()>/assign/instruction22	1	<org.prevayler.demos.scalability.Record: int hashCode()>/$l9
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/assign/instruction10	1	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/$l0
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/assign/instruction15	1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/$l0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction23	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/nextTransaction#_0
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/assign/instruction13	1	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/$l1	@(Replication) /\ (Replication)
<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/assign/instruction20	1	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/$i0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/assign/instruction7	2	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/initialTransactionWanted#_0
<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/assign/instruction10	1	<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/id#_0
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/assign/instruction9	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/candidate#_0

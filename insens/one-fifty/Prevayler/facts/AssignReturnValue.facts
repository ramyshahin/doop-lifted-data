<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/$r1
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/org.prevayler.foundation.network.SessionsManager.find/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/proxy#_92
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/org.prevayler.implementation.PrevalentSystemGuard.deepCopy/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/$r2
<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.holderText/1	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r11
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/$r5
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.gap/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/$r0
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject.isConsistent/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$z1
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getString1/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r4
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.jdbcPassword/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$r5
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/$l0
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.PrevaylerDirectory.journalFile/0	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/nextFile_$$A_1#_228
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/org.prevayler.implementation.PrevaylerDirectory.journalVersion/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/version#_130
<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.demos.demo2.gui.BankFrame.access$0/0	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/$r4
<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/org.prevayler.foundation.serialization.XStreamSerializer.getXStream/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/$r2
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.prevayler.QuerySystem.queryByName/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/records#_36
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.lastNumber/0	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$i0
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r7
<org.prevayler.demos.scalability.Main: int jdbcTransactionThreadsMax()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int jdbcTransactionThreadsMax()>/$i0
<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountEditAction: void action(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.access$0/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountEditAction: void action(org.prevayler.demos.demo2.business.Account)>/$r2
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>/$r2
<org.prevayler.implementation.publishing.POBox: void run()>/org.prevayler.implementation.publishing.POBox.waitForNotification/0	<org.prevayler.implementation.publishing.POBox: void run()>/notification#_38
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/$r2
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.Service.serverFor/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/$r2
<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>/org.prevayler.implementation.clock.BrokenClock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>/$r0
<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.NewAccountFrame.holderText/0	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/$r4
<org.prevayler.foundation.Turn: void end()>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: void end()>/$r0
<org.prevayler.foundation.Turn: void alwaysSkip()>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: void alwaysSkip()>/$r0
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$l0
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.capsule/1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r5
<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/$r1
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l8
<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/org.prevayler.foundation.StopWatch.millisEllapsed/0	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/$l0
<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.DurableOutputStream.writeObject/0	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/thisWrite#_67
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/org.prevayler.PrevaylerFactory.prevalentSystem/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$r12
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.accountButtons/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/$r8
<org.prevayler.demos.scalability.prevayler.TransactionSystem: java.lang.Object put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: java.lang.Object put(org.prevayler.demos.scalability.Record)>/$l0
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.capsule/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r0
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/$r7
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/returnIt#_166
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/org.prevayler.implementation.PrevaylerImpl.clock/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/$r1
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>/org.prevayler.demos.demo2.gui.AllAccountsFrame.access$1/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>/$r1
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.gap/1	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/$r13
<org.prevayler.implementation.PrevaylerDirectory$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.implementation.PrevaylerDirectory.journalVersion/1	<org.prevayler.implementation.PrevaylerDirectory$1: int compare(java.lang.Object,java.lang.Object)>/$l1
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.transactionHistory/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r5
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/1	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$r22
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r0
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.snapshotFile/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/permanent#_70
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$5/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l9
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/org.prevayler.foundation.FileLocker.propertyName/1	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r14
<org.prevayler.demos.scalability.Main: int prevaylerQueryThreadsMax()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int prevaylerQueryThreadsMax()>/$i0
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/$l0
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r5
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.implementation.Capsule.toChunk/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/chunk#_47
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$r4
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.numberOfObjects/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$i0
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Account.transactionHistory/0	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$r12
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/property#_233
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/org.prevayler.foundation.StopWatch.millisEllapsed/0	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$l2
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.foundation.DurableInputStream.readChunk/0	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/eof#_202
<org.prevayler.demos.scalability.Main: void runPrevaylerQuery()>/org.prevayler.demos.scalability.Main.numberOfObjects/0	<org.prevayler.demos.scalability.Main: void runPrevaylerQuery()>/$i0
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.Main.numberOfObjects/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$i0
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r1
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunking.validToken/1	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$z2
<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/$r1
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Account.balance/0	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$l0
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/org.prevayler.implementation.journal.PersistentJournal.isOutputJournalTooBig/0	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/$z0
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.SessionsManager.add/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/$r5
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.capsule/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/capsule#_53
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.executionTime/0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/$r1
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$l0
<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void <init>(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void <init>(org.prevayler.demos.demo2.business.Account)>/$l0
<org.prevayler.demos.scalability.Main: int prevaylerTransactionThreadsMin()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int prevaylerTransactionThreadsMin()>/$i0
<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/$r6
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/org.prevayler.PrevaylerFactory.journalSuffix/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/$r3
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.journal.PersistentJournal.createOutputJournal/0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r0
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$l2
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object)>/org.prevayler.foundation.DeepCopier.deepCopy/0	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object)>/$r1
<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/org.prevayler.foundation.serialization.SkaringaSerializer.createTransformer/0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.balance/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$l0
<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number access$0(org.prevayler.demos.demo2.gui.AccountEditFrame,java.lang.String)>/org.prevayler.demos.demo2.gui.AccountEditFrame.enterAmount/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number access$0(org.prevayler.demos.demo2.gui.AccountEditFrame,java.lang.String)>/$r0
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.prepare/1	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/$r11
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Query.query/0	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/$r5
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/$r1
<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.PrevaylerDirectory.findInitialJournalFile/0	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/initialJournal#_152
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.cleanCopy/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/timestampCopy#_27
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate2/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r14
<org.prevayler.demos.scalability.Main: boolean isPrevaylerTransactionConsistencyChecked()>/org.prevayler.demos.scalability.Main.booleanProperty/0	<org.prevayler.demos.scalability.Main: boolean isPrevaylerTransactionConsistencyChecked()>/$z0
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.getResult/0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/$r12
<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Prevayler.clock/0	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/$r5
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.numberOfObjects/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$i0
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevaylerDirectory.snapshotVersion/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/$l0_$$A_1
<org.prevayler.demos.demo2.business.transactions.AccountDeletion: void <init>(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: void <init>(org.prevayler.demos.demo2.business.Account)>/$l0
<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/$r1
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.file/0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r9
<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/$r1
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.Main.prevaylerJournalSerializer/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$r2
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/$l2
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/org.prevayler.demos.demo2.gui.AllAccountsFrame.accounts/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/$r0
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/org.prevayler.PrevaylerFactory.prevalentSystem/1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$r7
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.createCheckpointPrevayler/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable,java.lang.String)>/$r0
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/source#_49
<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.TransactionTestRun.spreadId/0	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/idToDelete#_37
<org.prevayler.demos.scalability.Main: boolean isPrevaylerTransactionChosen()>/org.prevayler.demos.scalability.Main.booleanProperty/0	<org.prevayler.demos.scalability.Main: boolean isPrevaylerTransactionChosen()>/$z0
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/1	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/destination#_50
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/$z0
<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/org.prevayler.implementation.replication.ServerConnection.createClockTickSender/0	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/$r0
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.publishing.censorship.StrictTransactionCensor.royalFoodTaster/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/royalFoodTaster#_28
<org.prevayler.foundation.FileLocker: void release()>/org.prevayler.foundation.FileLocker.propertyName/0	<org.prevayler.foundation.FileLocker: void release()>/$r7
<org.prevayler.demos.scalability.Main: void runPrevaylerQuery()>/org.prevayler.demos.scalability.Main.prevaylerQueryThreadsMin/0	<org.prevayler.demos.scalability.Main: void runPrevaylerQuery()>/$i1
<org.prevayler.demos.scalability.Main: int jdbcQueryThreadsMin()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int jdbcQueryThreadsMin()>/$i0
<org.prevayler.implementation.PrevaylerDirectory: long journalVersion(java.io.File)>/org.prevayler.implementation.PrevaylerDirectory.version/0	<org.prevayler.implementation.PrevaylerDirectory: long journalVersion(java.io.File)>/$l0
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/org.prevayler.foundation.Chunking.readChunk/0	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/chunk#_42
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/org.prevayler.implementation.PrevaylerDirectory.snapshotVersion/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/candidateVersion#_108
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.Main.isPrevaylerTransactionConsistencyChecked/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$z0
<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/org.prevayler.demos.demo2.gui.AllAccountsFrame.bank/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/$r0
<org.prevayler.demos.demo2.business.Account: java.lang.String toString()>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.business.Account: java.lang.String toString()>/$r1
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.DeepCopier.deepCopyParallel/0	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$r5
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.demos.demo2.business.Account.number/1	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$l1
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/org.prevayler.foundation.gzip.MultiMemberGZIPInputStream.read/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/$i1
<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/org.prevayler.foundation.network.StubbornNetworkProxy.forwarded/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/$z0
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.access$2/0	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r12
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.jdbcUser/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$r4
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.timestamp/0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/$r2
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.jdbcUser/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$r4
<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/org.prevayler.demos.scalability.Main.property/1	<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/$r5
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.foundation.StopWatch.start/0	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/stopWatch#_88
<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountCreation: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.access$0/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountCreation: void actionPerformed(java.awt.event.ActionEvent)>/$r2
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.business.Account.holder/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r4
<org.prevayler.demos.demo2.business.Bank$AccountNotFound: void <init>(org.prevayler.demos.demo2.business.Bank,long)>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.business.Bank$AccountNotFound: void <init>(org.prevayler.demos.demo2.business.Bank,long)>/$r1
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.parse/1	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/amount#_62
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.PrevaylerDirectory.journalVersion/0	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/recoveringTransaction#_191
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.performRound/0	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/operationsPerSecond#_72
<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/$r1
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Bank.accounts/0	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/accounts#_81
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.Main.prevaylerTransactionLogDirectory/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$r1
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.isJdbcQueryChosen/0	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z2
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.lastNumber/1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$i1
<org.prevayler.implementation.PrevaylerDirectory$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.implementation.PrevaylerDirectory.journalVersion/0	<org.prevayler.implementation.PrevaylerDirectory$1: int compare(java.lang.Object,java.lang.Object)>/$l0
<org.prevayler.demos.scalability.Main: int jdbcTransactionThreadsMin()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int jdbcTransactionThreadsMin()>/$i0
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/prevayler#_36
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void refreshAccounts()>/org.prevayler.demos.demo2.gui.AllAccountsFrame.accounts/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void refreshAccounts()>/$r1
<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>/org.prevayler.implementation.TransactionTimestamp.toChunk/0	<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>/$r1
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/org.prevayler.implementation.PrevaylerDirectory.createTempFile/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/tempFile#_66
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r6
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/object#_60
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/$r3
<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/prevayler#_29
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/org.prevayler.PrevaylerFactory.journalSerializer/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$r13
<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>/org.prevayler.demos.scalability.prevayler.QuerySystem.queryByName/0	<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>/$r1
<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/org.prevayler.foundation.network.BaseNetworkImpl.createService/0	<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/sessionServices#_29
<org.prevayler.implementation.publishing.CentralPublisher: void <init>(org.prevayler.Clock,org.prevayler.implementation.journal.Journal)>/org.prevayler.foundation.Turn.first/0	<org.prevayler.implementation.publishing.CentralPublisher: void <init>(org.prevayler.Clock,org.prevayler.implementation.journal.Journal)>/$r2
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/org.prevayler.PrevaylerFactory.prevalenceDirectory/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$r2
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/org.prevayler.foundation.network.StubbornClientReceiverImpl.sessionIsConnected/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/$z0
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.DeepCopier$Receiver.getResult/0	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/$r3
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/$r0
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.propertiesFile/1	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$r7
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.Main.prevaylerTransactionThreadsMin/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$i1
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.PrevaylerFactory.network/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r6
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.foundation.Turn.next/0	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/$r6
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.jdbcConnectionURL/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$r3
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$l0
<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>/$r0
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/org.prevayler.PrevaylerFactory.clock/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/$r2
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.access$1/0	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r6
<org.prevayler.demos.scalability.Main: boolean isJdbcQueryChosen()>/org.prevayler.demos.scalability.Main.booleanProperty/0	<org.prevayler.demos.scalability.Main: boolean isJdbcQueryChosen()>/$z0
<org.prevayler.demos.demo2.Main: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.createPrevayler/0	<org.prevayler.demos.demo2.Main: void main(java.lang.String[])>/prevayler#_17
<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.foundation.network.OldNetwork.openObjectServerSocket/0	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/$r0
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.buttonPanel/0	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r12
<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.CentralPublisher.approve/0	<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>/guide#_65
<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/account#_21
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/transactionCandidate#_105
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal1/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r6
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/org.prevayler.PrevaylerFactory.publisher/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/publisher#_377
<org.prevayler.foundation.monitor.Log4jMonitor: void log(java.lang.Class,org.apache.log4j.Level,java.lang.String,java.lang.Exception)>/org.prevayler.foundation.monitor.Log4jMonitor.logger/0	<org.prevayler.foundation.monitor.Log4jMonitor: void log(java.lang.Class,org.apache.log4j.Level,java.lang.String,java.lang.Exception)>/$r0
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/1	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/$r3
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/org.prevayler.foundation.gzip.MultiMemberGZIPInputStream.read/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/n#_23
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/0	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/$r0
<org.prevayler.implementation.replication.ServerListener: void run()>/org.prevayler.foundation.network.ObjectServerSocket.accept/0	<org.prevayler.implementation.replication.ServerListener: void run()>/$r3
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/org.prevayler.foundation.gzip.ContinuableGZIPInputStream.remainingInput/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/$r3
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/org.prevayler.demos.demo2.business.Bank.searchAccount/0	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/account#_43
<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>/org.prevayler.foundation.serialization.XStreamSerializer.createXStream/0	<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>/$r1
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/org.prevayler.foundation.DurableOutputStream.file/0	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$r1
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void <init>(org.prevayler.demos.demo2.gui.AllAccountsFrame,java.lang.String)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.access$1/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void <init>(org.prevayler.demos.demo2.gui.AllAccountsFrame,java.lang.String)>/$r0
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/org.prevayler.PrevaylerFactory.monitor/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/$r4
<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/org.prevayler.demos.demo2.business.Bank.accounts/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/$r1
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunking.validToken/0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$z1
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$r0
<org.prevayler.demos.scalability.Main: java.lang.String jdbcUser()>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: java.lang.String jdbcUser()>/$r0
<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/org.prevayler.implementation.PrevaylerDirectory.journalFile/0	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/file#_132
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal2/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r8
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/org.prevayler.foundation.network.StubbornNetwork.newInstance/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/$r2
<org.prevayler.demos.demo2.MainTransient: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.createTransientPrevayler/0	<org.prevayler.demos.demo2.MainTransient: void main(java.lang.String[])>/prevayler#_21
<org.prevayler.implementation.PrevaylerDirectory: java.io.File snapshotFile(long,java.lang.String)>/org.prevayler.implementation.PrevaylerDirectory.file/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File snapshotFile(long,java.lang.String)>/$r0
<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectSocket)>/org.prevayler.foundation.network.StubbornNetworkImpl.getSessionManager/0	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectSocket)>/sessionsManager#_34
<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>/$r1
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.PrevaylerFactory.journal/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r4
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/$r0
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.fieldBox/0	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r10
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.PrevaylerFactory.clock/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r2
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.nextTransaction/0	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l1
<org.prevayler.demos.scalability.Main: int prevaylerTransactionThreadsMax()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int prevaylerTransactionThreadsMax()>/$i0
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameters/0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$r4
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/org.prevayler.implementation.journal.PersistentJournal.isOutputJournalTooOld/0	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/$z1
<org.prevayler.implementation.PrevaylerDirectory: java.io.File journalFile(long,java.lang.String)>/org.prevayler.implementation.PrevaylerDirectory.file/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File journalFile(long,java.lang.String)>/$r0
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getString1/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r3
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.replication.ServerConnection.access$0/1	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r3
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.foundation.StopWatch.secondsEllapsed/0	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/secondsEllapsed#_94
<org.prevayler.demos.scalability.Record: void <clinit>()>/org.prevayler.demos.scalability.Record.generateLargeString/0	<org.prevayler.demos.scalability.Record: void <clinit>()>/$r0
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/org.prevayler.implementation.PrevalentSystemGuard.executeQuery/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/$r2
<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/$r5
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.jdbcQueryThreadsMin/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$i1
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/$l0
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.jdbcDriverClassName/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$r2
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal1/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r5
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate2/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r13
<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.createAccount/0	<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/$r1
<org.prevayler.implementation.PrevaylerDirectory: long snapshotVersion(java.io.File)>/org.prevayler.implementation.PrevaylerDirectory.version/0	<org.prevayler.implementation.PrevaylerDirectory: long snapshotVersion(java.io.File)>/$l0
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/$r5
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/systemVersion#_54
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>/org.prevayler.implementation.PrevalentSystemGuard.prevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>/$r1
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.next/0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$r1
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$l2
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.timestamp/0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r2
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate1/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r11
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.bank/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/$r2
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/systemVersion#_131
<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/prevayler#_17
<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$0/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/amount#_87
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$z0
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/org.prevayler.foundation.network.StubbornServerReceiverImpl.reestablishSession/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/proxy#_73
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.isPrevaylerTransactionChosen/0	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z1
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.jdbcPassword/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$r5
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.gap/0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/$r6
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/l6#_98
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$r2
<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/$r1
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.name/0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/$r2
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/timestamp#_130
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/1	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/$r8
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$0/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/connection#_121
<org.prevayler.foundation.monitor.Log4jMonitor: boolean isInfoEnabled(java.lang.Class)>/org.prevayler.foundation.monitor.Log4jMonitor.logger/0	<org.prevayler.foundation.monitor.Log4jMonitor: boolean isInfoEnabled(java.lang.Class)>/$r0
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.readSnapshot/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/$r10_$$A_1
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/1	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/$r1
<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/org.prevayler.foundation.serialization.XStreamSerializer.getXStream/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/$r0
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$z1
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.propertiesFile/2	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$r8
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.holder/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r2
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/$r1
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/org.prevayler.demos.demo2.gui.AllAccountsFrame.access$1/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/$r1
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$1/1	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r9
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/org.prevayler.Prevayler.prevalentSystem/1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/$r3
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$1/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r3
<org.prevayler.demos.scalability.Main: boolean isJdbcTransactionChosen()>/org.prevayler.demos.scalability.Main.booleanProperty/0	<org.prevayler.demos.scalability.Main: boolean isJdbcTransactionChosen()>/$z0
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.jdbcConnectionURL/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$r3
<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/org.prevayler.demos.demo2.gui.AccountEditFrame.parse/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/$l0
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.jdbcDriverClassName/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$r2
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.file/1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r6
<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.access$0/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/$r1
<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$1/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/$r5
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/$r2
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>/org.prevayler.implementation.Capsule.cleanCopy/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>/$r2
<org.prevayler.demos.scalability.Main: java.lang.String jdbcDriverClassName()>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: java.lang.String jdbcDriverClassName()>/$r0
<org.prevayler.demos.demo2.gui.AllAccountsFrame: org.prevayler.demos.demo2.business.Bank bank()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: org.prevayler.demos.demo2.business.Bank bank()>/$r1
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/$r5
<org.prevayler.foundation.network.BaseNetworkImpl: void stopService(int)>/org.prevayler.foundation.network.BaseNetworkImpl.locateService/0	<org.prevayler.foundation.network.BaseNetworkImpl: void stopService(int)>/stubbornService#_35
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.replication.ServerConnection.access$1/0	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r5
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$2/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$r4
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.labelContainer/1	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/$r11
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/org.prevayler.foundation.FileLocker.propertyName/0	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r2
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r2
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.parse/0	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/destinationNumber#_61
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$3/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$l2
<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String getResult()>/org.prevayler.demos.scalability.ScalabilityTestRun.toResultString/0	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String getResult()>/$r0
<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/org.prevayler.demos.demo2.business.Account.listeners/0	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/$r0
<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/$r1
<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/org.prevayler.demos.scalability.Main.jdbcQueryThreadsMax/0	<org.prevayler.demos.scalability.Main: void runJdbcQuery()>/$i2
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/executionTime#_55
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.io.File snapshotFile(long)>/org.prevayler.implementation.PrevaylerDirectory.snapshotFile/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.io.File snapshotFile(long)>/$r2
<org.prevayler.demos.demo1.Main: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.createPrevayler/0	<org.prevayler.demos.demo1.Main: void main(java.lang.String[])>/prevayler#_13
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/$r0
<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/org.prevayler.foundation.network.OldNetwork.openSocket/0	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/$r4
<org.prevayler.demos.scalability.Main: java.lang.String jdbcPassword()>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: java.lang.String jdbcPassword()>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.holderText/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r1
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/org.prevayler.implementation.PrevaylerImpl.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/$r0
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.RecordIterator.next/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$r7
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/org.prevayler.foundation.Chunking.readLine/0	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/header#_52
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/org.prevayler.foundation.network.NetworkClientObjectReceiverImpl.access$0/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/$z0
<org.prevayler.foundation.FileLocker: void release()>/org.prevayler.foundation.FileLocker.propertyName/1	<org.prevayler.foundation.FileLocker: void release()>/$r2
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$2/1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$r6
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$l0
<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/$r1
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.jdbcTransactionThreadsMax/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$i2
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void <init>(org.prevayler.foundation.network.ObjectSocket,org.prevayler.foundation.network.Service)>/org.prevayler.foundation.network.Service.serverFor/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void <init>(org.prevayler.foundation.network.ObjectSocket,org.prevayler.foundation.network.Service)>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/$r2
<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/$r0
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/org.prevayler.PrevaylerFactory.prevalenceDirectory/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/$r1
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/org.prevayler.foundation.network.StubbornServerReceiverImpl.establishNewSession/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/proxy_$$A_1#_94
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/1	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$r12
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$7/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$i11
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/org.prevayler.PrevaylerFactory.snapshotManager/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/snapshotManager#_374
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/$r0
<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object access$0(org.prevayler.demos.scalability.ScalabilityTestRun)>/org.prevayler.demos.scalability.ScalabilityTestRun.acquireConnection/0	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object access$0(org.prevayler.demos.scalability.ScalabilityTestRun)>/$r0
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/0	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/$r5
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.propertiesFile/0	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$r1
<org.prevayler.demos.scalability.Main: java.lang.String prevaylerTransactionLogDirectory()>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: java.lang.String prevaylerTransactionLogDirectory()>/result#_271
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$l10
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate1/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r10
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/$r1
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.StopWatch.start/0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r1
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestRun.toResultString/0	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/$r10
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/$r3
<org.prevayler.demos.scalability.Main: void runPrevaylerQuery()>/org.prevayler.demos.scalability.Main.prevaylerQueryThreadsMax/0	<org.prevayler.demos.scalability.Main: void runPrevaylerQuery()>/$i2
<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/org.prevayler.demos.demo2.business.Account.listeners/0	<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$1/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/$r5
<org.prevayler.demos.scalability.Main: int intProperty(java.lang.String)>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: int intProperty(java.lang.String)>/$r0
<org.prevayler.demos.demo1.PrimeCalculator: void <init>(org.prevayler.Prevayler)>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.demos.demo1.PrimeCalculator: void <init>(org.prevayler.Prevayler)>/$r0
<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/org.prevayler.demos.scalability.Main.jdbcTransactionThreadsMin/0	<org.prevayler.demos.scalability.Main: void runJdbcTransaction()>/$i1
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.fromChunk/0	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/nextFile#_213
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/org.prevayler.PrevaylerFactory.journalSerializer/1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$r8
<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$0/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/amount#_72
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.PersistentJournal.recoverPendingTransactions/0	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/nextTransaction#_160
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.PrevaylerFactory.censor/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r3
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.table/1	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/$r7
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevaylerDirectory.latestSnapshot/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/iterator_$$A_1#_41
<org.prevayler.demos.demo2.gui.AccountEditFrame$TransferAction: void action()>/org.prevayler.demos.demo2.gui.AccountEditFrame.access$1/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$TransferAction: void action()>/$r2
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/org.prevayler.foundation.network.ObjectServerSocket.accept/0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/$r3
<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.deserialize/0	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/transaction#_52
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.implementation.Capsule.fromChunk/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/capsule#_54
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Clock.time/0	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/$r4
<org.prevayler.demos.demo2.business.AccountEntry: java.lang.String toString()>/org.prevayler.demos.demo2.business.AccountEntry.timestampString/0	<org.prevayler.demos.demo2.business.AccountEntry: java.lang.String toString()>/$r1
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.capsule/0	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r2
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/1	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/$r3
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionTimestamp.cleanCopy/0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r3
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.access$0/0	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r2
<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/org.prevayler.demos.demo2.business.Account.listeners/0	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/$r0
<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/prevayler#_24
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>/org.prevayler.implementation.TransactionWithQueryCapsule.result/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>/$r2
<org.prevayler.demos.scalability.Main: java.lang.String jdbcConnectionURL()>/org.prevayler.demos.scalability.Main.property/0	<org.prevayler.demos.scalability.Main: java.lang.String jdbcConnectionURL()>/$r0
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.PrimeCalculator.isPrime/0	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$z0
<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>/org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject.createConnection/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>/$r1
<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: void pause()>/$r1
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/org.prevayler.PrevaylerFactory.journal/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/$r3
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/$r1
<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>/org.prevayler.foundation.network.BaseNetworkImpl.newReceiver/0	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.gap/1	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/$r9
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/org.prevayler.PrevaylerFactory.network/0	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/$r5
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/$r7
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal2/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r7
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/$r11
<org.prevayler.demos.scalability.Main: int jdbcQueryThreadsMax()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int jdbcQueryThreadsMax()>/$i0
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r1
<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/$r1
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/2	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/$r15
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.realTime/0	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/$r3
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/$r1
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/org.prevayler.foundation.network.StubbornClientReceiverImpl.sessionIsOpen/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/$z0
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.createPrevayler/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable)>/$r0
<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>/org.prevayler.implementation.TransactionWithQueryCapsule.serialized/0	<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>/$r1
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/org.prevayler.foundation.network.StubbornClientReceiverImpl.sessionIsConnected/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.journal.PersistentJournal.isOutputJournalStillValid/0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$z1
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.Main.prevaylerTransactionThreadsMax/0	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$i2
<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>/org.prevayler.foundation.serialization.SkaringaSerializer.createTransformer/0	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>/$r0
<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/$r1
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.isJdbcTransactionChosen/0	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z3
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/org.prevayler.PrevaylerFactory.network/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/$r3
<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/$r2
<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>/org.prevayler.demos.scalability.jdbc.JDBCQuerySubject.createConnection/0	<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>/$r1
<org.prevayler.demos.scalability.Main: boolean isPrevaylerQueryChosen()>/org.prevayler.demos.scalability.Main.booleanProperty/0	<org.prevayler.demos.scalability.Main: boolean isPrevaylerQueryChosen()>/$z0
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/org.prevayler.PrevaylerFactory.journalSerializer/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/$r1
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.access$1/0	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$z0
<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.implementation.replication.ServerConnection: void run()>/$r1
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.next/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$r1
<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/org.prevayler.foundation.network.StubbornNetworkProxy.isOpen/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/$z0
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.replication.ServerConnection.access$0/0	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r1
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/org.prevayler.demos.scalability.Main.isPrevaylerQueryChosen/0	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z0
<org.prevayler.demos.scalability.Main: int prevaylerQueryThreadsMin()>/org.prevayler.demos.scalability.Main.intProperty/0	<org.prevayler.demos.scalability.Main: int prevaylerQueryThreadsMin()>/$i0
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.numbers/0	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$r5
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/$r1
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/$z0

OK	OK
<javax.microedition.lcdui.Gauge: void <init>(java.lang.String,boolean,int,int)>	<javax.microedition.lcdui.Gauge: void <init>(java.lang.String,boolean,int,int)>
<lancs.mobilemedia.core.ui.controller.MediaListController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>	<lancs.mobilemedia.core.ui.controller.MediaListController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>
New picture	New picture
<lancs.mobilemedia.sms.SmsMessaging: void setSmsReceivePort(java.lang.String)>	<lancs.mobilemedia.sms.SmsMessaging: void setSmsReceivePort(java.lang.String)>
<javax.microedition.lcdui.Alert: void <init>(java.lang.String,java.lang.String,javax.microedition.lcdui.Image,javax.microedition.lcdui.AlertType)>	<javax.microedition.lcdui.Alert: void <init>(java.lang.String,java.lang.String,javax.microedition.lcdui.Image,javax.microedition.lcdui.AlertType)>
My Music Album	My Music Album
<lancs.mobilemedia.core.ui.controller.PhotoViewController: lancs.mobilemedia.core.ui.screens.CaptureVideoScreen getCpVideoScreen()>	<lancs.mobilemedia.core.ui.controller.PhotoViewController: lancs.mobilemedia.core.ui.screens.CaptureVideoScreen getCpVideoScreen()>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: byte[] loadMediaBytesFromRMS(java.lang.String,int)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: byte[] loadMediaBytesFromRMS(java.lang.String,int)>
<* BaseController.goToPreviousScreen() **>	<* BaseController.goToPreviousScreen() **>
J. Gosling	J. Gosling
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void pauseCapture()>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void pauseCapture()>
<javax.microedition.media.control.VolumeControl: int setLevel(int)>	<javax.microedition.media.control.VolumeControl: int setLevel(int)>
jad.name	jad.name
<javax.microedition.lcdui.List: void <init>(java.lang.String,int)>	<javax.microedition.lcdui.List: void <init>(java.lang.String,int)>
<lancs.mobilemedia.core.ui.screens.NewLabelScreen: void <init>(java.lang.String,int)>	<lancs.mobilemedia.core.ui.screens.NewLabelScreen: void <init>(java.lang.String,int)>
UBC Logo	UBC Logo
Crio os comandos e vai iniciar o display	Crio os comandos e vai iniciar o display
<javax.microedition.lcdui.TextField: java.lang.String getString()>	<javax.microedition.lcdui.TextField: java.lang.String getString()>
BEFORE ALERT CODE	BEFORE ALERT CODE
<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: void <init>(java.lang.Throwable)>
Error:	Error:
<java.lang.Throwable: void printStackTrace()>	<java.lang.Throwable: void printStackTrace()>
main.class	main.class
<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void repaintListAlbum(java.lang.String[])>	<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void repaintListAlbum(java.lang.String[])>
<javax.microedition.media.control.VideoControl: byte[] getSnapshot(java.lang.String)>	<javax.microedition.media.control.VideoControl: byte[] getSnapshot(java.lang.String)>
<java.io.PrintStream: void println(java.lang.String)>	<java.io.PrintStream: void println(java.lang.String)>
<java.io.IOException: void printStackTrace()>	<java.io.IOException: void printStackTrace()>
<javax.microedition.lcdui.List: int getSelectedIndex()>	<javax.microedition.lcdui.List: int getSelectedIndex()>
<lancs.mobilemedia.core.threads.BaseThread: void run()>	<lancs.mobilemedia.core.threads.BaseThread: void run()>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void toggleFavorite()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void toggleFavorite()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void setMediaInfo(java.lang.String,lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void setMediaInfo(java.lang.String,lancs.mobilemedia.core.ui.datamodel.MediaData)>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void setLabePath(java.lang.String)>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void setLabePath(java.lang.String)>
C:\Program Files\Java\jdk1.5.0_09	C:\Program Files\Java\jdk1.5.0_09
<lancs.mobilemedia.sms.SmsSenderThread: void run()>	<lancs.mobilemedia.sms.SmsSenderThread: void run()>
Edit Label Item	Edit Label Item
<<\\"<* MediaUtil.readMediaAsByteArray() *> mediaFile = \\">>	<<\\"<* MediaUtil.readMediaAsByteArray() *> mediaFile = \\">>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: boolean handleCommand(javax.microedition.lcdui.Command)>
The provided data are not valid	The provided data are not valid
<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: void resetRecordStore()>	<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: void resetRecordStore()>
mpi-	mpi-
Videos	Videos
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void setMediaInfoTable(java.util.Hashtable)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void setMediaInfoTable(java.util.Hashtable)>
<lancs.mobilemedia.sms.SmsMessaging: byte[] receiveImage()>	<lancs.mobilemedia.sms.SmsMessaging: byte[] receiveImage()>
/images/bong.wav	/images/bong.wav
New Incoming Photo	New Incoming Photo
Pitch: 0	Pitch: 0
<<\\"Ignoring Exception: \\">>	<<\\"Ignoring Exception: \\">>
Copy	Copy
wtk.home	wtk.home
<<\\"MediaAccessor::loadAlbums: Found: \\">>	<<\\"MediaAccessor::loadAlbums: Found: \\">>
Fish	Fish
<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaFromBytes(byte[])>	<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaFromBytes(byte[])>
<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: void <init>()>	<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: void <init>()>
No - Delete	No - Delete
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void stopVideo()>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void stopVideo()>
No Video Control for capturing!	No Video Control for capturing!
<lancs.mobilemedia.core.ui.datamodel.AlbumData: java.lang.String getPassword(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: java.lang.String getPassword(java.lang.String)>
<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>	<javax.microedition.lcdui.TextField: void <init>(java.lang.String,java.lang.String,int,int)>
<javax.microedition.media.control.VideoControl: void setDisplayLocation(int,int)>	<javax.microedition.media.control.VideoControl: void setDisplayLocation(int,int)>
<lancs.mobilemedia.core.ui.controller.MediaListController: void showMediaList(java.lang.String,boolean,boolean)>	<lancs.mobilemedia.core.ui.controller.MediaListController: void showMediaList(java.lang.String,boolean,boolean)>
<javax.microedition.lcdui.game.GameCanvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>	<javax.microedition.lcdui.game.GameCanvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lancs.mobilemedia.core.ui.controller.ControllerInterface: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.ControllerInterface: boolean handleCommand(javax.microedition.lcdui.Command)>
AddPhotoToAlbum	AddPhotoToAlbum
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void setVisibleVideo()>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void setVisibleVideo()>
/images/ubcLogo.PNG	/images/ubcLogo.PNG
mmpi-	mmpi-
A MobilePhoto user has sent you a Photo. Do you want to accept it?	A MobilePhoto user has sent you a Photo. Do you want to accept it?
<javax.microedition.lcdui.Form: void setItemStateListener(javax.microedition.lcdui.ItemStateListener)>	<javax.microedition.lcdui.Form: void setItemStateListener(javax.microedition.lcdui.ItemStateListener)>
<javax.microedition.lcdui.List: void delete(int)>	<javax.microedition.lcdui.List: void delete(int)>
<lancs.mobilemedia.sms.SmsReceiverController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.sms.SmsReceiverController: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.screens.PasswordScreen: void setPassword(java.lang.String)>	<lancs.mobilemedia.core.ui.screens.PasswordScreen: void setPassword(java.lang.String)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>	<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<java.util.Vector: void addElement(java.lang.Object)>	<java.util.Vector: void addElement(java.lang.Object)>
<<\\"AbstractController::postCommand - Reached top of chain. No more handlers for command: \\">>	<<\\"AbstractController::postCommand - Reached top of chain. No more handlers for command: \\">>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: java.lang.String[] getAlbumNames()>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: java.lang.String[] getAlbumNames()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void loadAlbums()>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void loadAlbums()>
<<\\"SmsMessaging::receiveImage: sender address = \\">>	<<\\"SmsMessaging::receiveImage: sender address = \\">>
audio/x-wav	audio/x-wav
<java.lang.String: boolean equals(java.lang.Object)>	<java.lang.String: boolean equals(java.lang.Object)>
<java.io.PrintStream: void println(java.lang.Object)>	<java.io.PrintStream: void println(java.lang.Object)>
Yes	Yes
<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: void <init>(java.lang.Throwable)>
<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>	<javax.microedition.lcdui.Form: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: boolean isFavorite()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: boolean isFavorite()>
<<\\"<* ImageAccessor.resetVideoRecordStore() *> delete \\">>	<<\\"<* ImageAccessor.resetVideoRecordStore() *> delete \\">>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addVideoData(java.lang.String,java.lang.String,byte[])>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addVideoData(java.lang.String,java.lang.String,byte[])>
<lancs.mobilemedia.core.ui.controller.MusicPlayController: java.lang.String getMediaName()>	<lancs.mobilemedia.core.ui.controller.MusicPlayController: java.lang.String getMediaName()>
\\"AddPhotoToAlbum\\"	\\"AddPhotoToAlbum\\"
<lancs.mobilemedia.lib.exceptions.InvalidPhotoAlbumNameException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.InvalidPhotoAlbumNameException: void <init>(java.lang.String)>
<javax.microedition.lcdui.TextField: void setString(java.lang.String)>	<javax.microedition.lcdui.TextField: void setString(java.lang.String)>
<lancs.mobilemedia.sms.SmsMessaging: void <init>(java.lang.String,java.lang.String)>	<lancs.mobilemedia.sms.SmsMessaging: void <init>(java.lang.String,java.lang.String)>
<lancs.mobilemedia.core.ui.datamodel.ImageAlbumData: void <init>()>	<lancs.mobilemedia.core.ui.datamodel.ImageAlbumData: void <init>()>
MM08.jar	MM08.jar
<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: void <init>(java.lang.String)>
<java.io.InputStream: void close()>	<java.io.InputStream: void close()>
Select Album	Select Album
<java.lang.Exception: java.lang.String getMessage()>	<java.lang.Exception: java.lang.String getMessage()>
\\"ConfirmDeleteAlbumScreen\\"	\\"ConfirmDeleteAlbumScreen\\"
<javax.wireless.messaging.MessageConnection: javax.wireless.messaging.Message newMessage(java.lang.String)>	<javax.wireless.messaging.MessageConnection: javax.wireless.messaging.Message newMessage(java.lang.String)>
Photos	Photos
<java.lang.String: java.lang.String substring(int)>	<java.lang.String: java.lang.String substring(int)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: java.lang.String getMediaLabel()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: java.lang.String getMediaLabel()>
<lancs.mobilemedia.core.ui.controller.AbstractController: javax.microedition.lcdui.Displayable getCurrentScreen()>	<lancs.mobilemedia.core.ui.controller.AbstractController: javax.microedition.lcdui.Displayable getCurrentScreen()>
<<\\"<* VideoCaptureController.handleCommand() *> \\">>	<<\\"<* VideoCaptureController.handleCommand() *> \\">>
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void paint(javax.microedition.lcdui.Graphics)>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void paint(javax.microedition.lcdui.Graphics)>
Send Now	Send Now
<javax.microedition.media.control.RecordControl: void startRecord()>	<javax.microedition.media.control.RecordControl: void startRecord()>
<java.lang.Integer: void <init>(int)>	<java.lang.Integer: void <init>(int)>
<lancs.mobilemedia.core.util.MediaUtil: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaInfoFromBytes(byte[])>	<lancs.mobilemedia.core.util.MediaUtil: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaInfoFromBytes(byte[])>
Copy Photo to Album	Copy Photo to Album
The mobile database is full	The mobile database is full
done.	done.
Play	Play
Exit	Exit
<lancs.mobilemedia.core.comms.BaseMessaging: void cleanUpConnections(javax.wireless.messaging.MessageConnection)>	<lancs.mobilemedia.core.comms.BaseMessaging: void cleanUpConnections(javax.wireless.messaging.MessageConnection)>
<<\\"SmsSenderThread:: 3 Param Constructor: \\">>	<<\\"SmsSenderThread:: 3 Param Constructor: \\">>
<<\\"SmsReceiverController::handleCommand: \\">>	<<\\"SmsReceiverController::handleCommand: \\">>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.datamodel.AlbumData getVideoAlbumData()>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.datamodel.AlbumData getVideoAlbumData()>
<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>	<javax.microedition.lcdui.Form: void addCommand(javax.microedition.lcdui.Command)>
Definiu a imagem	Definiu a imagem
Stop	Stop
<<\\"Send caught: \\">>	<<\\"Send caught: \\">>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.AlbumController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>	<lancs.mobilemedia.core.ui.controller.AlbumController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>
<javax.microedition.media.Player: void prefetch()>	<javax.microedition.media.Player: void prefetch()>
Obteve a imagem	Obteve a imagem
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>	<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<java.lang.Object: void <init>()>	<java.lang.Object: void <init>()>
<javax.microedition.lcdui.List: int size()>	<javax.microedition.lcdui.List: int size()>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: java.lang.String getCurrentStoreName()>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: java.lang.String getCurrentStoreName()>
<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void initMenu()>	<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void initMenu()>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setNumberOfViews(int)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setNumberOfViews(int)>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void setItemName(java.lang.String)>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void setItemName(java.lang.String)>
No RecordControl found!	No RecordControl found!
Vai adicionar os dados	Vai adicionar os dados
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void createNewAlbum(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void createNewAlbum(java.lang.String)>
<lancs.mobilemedia.sms.SmsSenderThread: void setMessageText(java.lang.String)>	<lancs.mobilemedia.sms.SmsSenderThread: void setMessageText(java.lang.String)>
Tempo: 120	Tempo: 120
<lancs.mobilemedia.lib.exceptions.InvalidImageFormatException: void <init>()>	<lancs.mobilemedia.lib.exceptions.InvalidImageFormatException: void <init>()>
<lancs.mobilemedia.core.ui.datamodel.ImageAlbumData: javax.microedition.lcdui.Image getImageFromRecordStore(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.ImageAlbumData: javax.microedition.lcdui.Image getImageFromRecordStore(java.lang.String,java.lang.String)>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setVideoAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setVideoAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>	<java.io.ByteArrayOutputStream: byte[] toByteArray()>
/images/Gail1.PNG	/images/Gail1.PNG
Can\'t go back here...Should never reach this spot	Can\'t go back here...Should never reach this spot
<lancs.mobilemedia.core.ui.controller.AlbumController: void goToPreviousScreen()>	<lancs.mobilemedia.core.ui.controller.AlbumController: void goToPreviousScreen()>
<java.lang.String: int indexOf(java.lang.String)>	<java.lang.String: int indexOf(java.lang.String)>
Sort by Views	Sort by Views
<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void <clinit>()>	<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void <clinit>()>
SmsMessaging::receiveImage() - start	SmsMessaging::receiveImage() - start
Error ao definir a tela	Error ao definir a tela
<lancs.mobilemedia.sms.SmsReceiverController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>	<lancs.mobilemedia.sms.SmsReceiverController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addMediaData(lancs.mobilemedia.core.ui.datamodel.MediaData,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addMediaData(lancs.mobilemedia.core.ui.datamodel.MediaData,java.lang.String)>
<javax.microedition.rms.RecordStore: void deleteRecord(int)>	<javax.microedition.rms.RecordStore: void deleteRecord(int)>
<<\\"SmsSenderThread: setBinaryData of length: \\">>	<<\\"SmsSenderThread: setBinaryData of length: \\">>
<<\\"<* BaseController.handleCommand() *> Image = \\">>	<<\\"<* BaseController.handleCommand() *> Image = \\">>
Confirm	Confirm
Error	Error
<<\\"Passing to next controller in chain: \\">>	<<\\"Passing to next controller in chain: \\">>
No	No
<javax.wireless.messaging.MessageConnection: void close()>	<javax.wireless.messaging.MessageConnection: void close()>
<javax.microedition.media.Manager: javax.microedition.media.Player createPlayer(java.lang.String)>	<javax.microedition.media.Manager: javax.microedition.media.Player createPlayer(java.lang.String)>
<javax.microedition.rms.RecordStoreException: java.lang.String getMessage()>	<javax.microedition.rms.RecordStoreException: java.lang.String getMessage()>
Add new Photo Album	Add new Photo Album
<lancs.mobilemedia.sms.SmsSenderController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen,java.lang.String)>	<lancs.mobilemedia.sms.SmsSenderController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen,java.lang.String)>
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: void addImageData(java.lang.String,byte[],java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: void addImageData(java.lang.String,byte[],java.lang.String)>
<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void deleteAll()>	<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void deleteAll()>
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: javax.microedition.lcdui.Image loadSingleImageFromRMS(java.lang.String,int)>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: javax.microedition.lcdui.Image loadSingleImageFromRMS(java.lang.String,int)>
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void startVideo()>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void startVideo()>
<lancs.mobilemedia.core.ui.controller.VideoCaptureController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List,lancs.mobilemedia.core.ui.screens.CaptureVideoScreen)>	<lancs.mobilemedia.core.ui.controller.VideoCaptureController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List,lancs.mobilemedia.core.ui.screens.CaptureVideoScreen)>
Jump	Jump
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,int)>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,int)>
<lancs.mobilemedia.core.comms.BaseMessaging: byte[] receiveImage()>	<lancs.mobilemedia.core.comms.BaseMessaging: byte[] receiveImage()>
<javax.microedition.media.control.RecordControl: void setRecordStream(java.io.OutputStream)>	<javax.microedition.media.control.RecordControl: void setRecordStream(java.io.OutputStream)>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addNewMediaToAlbum(java.lang.String,java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addNewMediaToAlbum(java.lang.String,java.lang.String,java.lang.String)>
<lancs.mobilemedia.core.util.Constants: void <init>()>	<lancs.mobilemedia.core.util.Constants: void <init>()>
<javax.microedition.lcdui.Alert: void setTimeout(int)>	<javax.microedition.lcdui.Alert: void setTimeout(int)>
<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void paint(javax.microedition.lcdui.Graphics)>	<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void paint(javax.microedition.lcdui.Graphics)>
<lancs.mobilemedia.sms.SmsMessaging: void cleanUpReceiverConnections()>	<lancs.mobilemedia.sms.SmsMessaging: void cleanUpReceiverConnections()>
Add Password	Add Password
<javax.microedition.lcdui.List: void addCommand(javax.microedition.lcdui.Command)>	<javax.microedition.lcdui.List: void addCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void <init>(java.lang.String,java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<javax.microedition.media.Player: javax.microedition.media.Control getControl(java.lang.String)>	<javax.microedition.media.Player: javax.microedition.media.Control getControl(java.lang.String)>
<javax.microedition.lcdui.Alert: void addCommand(javax.microedition.lcdui.Command)>	<javax.microedition.lcdui.Alert: void addCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: byte[] getMediaArrayOfByte(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: byte[] getMediaArrayOfByte(java.lang.String)>
<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: void <init>(java.lang.String)>
C:\user\research\MobileMedia\Antenna	C:\user\research\MobileMedia\Antenna
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: byte[] getByteFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: byte[] getByteFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>
mpa-	mpa-
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setForeignRecordId(int)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setForeignRecordId(int)>
<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void <clinit>()>	<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void <clinit>()>
<javax.microedition.lcdui.Canvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>	<javax.microedition.lcdui.Canvas: void setCommandListener(javax.microedition.lcdui.CommandListener)>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia getMainMenu()>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia getMainMenu()>
Sorting by BubbleSort...	Sorting by BubbleSort...
<lancs.mobilemedia.core.ui.controller.PhotoViewController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.PhotoViewController: boolean handleCommand(javax.microedition.lcdui.Command)>
<javax.microedition.lcdui.game.GameCanvas: int getWidth()>	<javax.microedition.lcdui.game.GameCanvas: int getWidth()>
<lancs.mobilemedia.core.ui.controller.AbstractController: void setAlbumListAsCurrentScreen(javax.microedition.lcdui.Alert)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void setAlbumListAsCurrentScreen(javax.microedition.lcdui.Alert)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addPassword(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addPassword(java.lang.String,java.lang.String)>
java.home	java.home
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>	<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.controller.BaseController getImageController()>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.controller.BaseController getImageController()>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void <init>(int,java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void <init>(int,java.lang.String,java.lang.String)>
<lancs.mobilemedia.core.ui.controller.MediaController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>	<lancs.mobilemedia.core.ui.controller.MediaController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>
<javax.microedition.lcdui.Graphics: void fillRect(int,int,int,int)>	<javax.microedition.lcdui.Graphics: void fillRect(int,int,int,int)>
<javax.microedition.rms.RecordStoreException: void printStackTrace()>	<javax.microedition.rms.RecordStoreException: void printStackTrace()>
<lancs.mobilemedia.core.util.MediaUtil: byte[] readMediaAsByteArray(java.lang.String)>	<lancs.mobilemedia.core.util.MediaUtil: byte[] readMediaAsByteArray(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setVideoController(lancs.mobilemedia.core.ui.controller.BaseController)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setVideoController(lancs.mobilemedia.core.ui.controller.BaseController)>
<java.lang.StringBuilder: java.lang.String toString()>	<java.lang.StringBuilder: java.lang.String toString()>
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: byte[] getImage()>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: byte[] getImage()>
View	View
<lancs.mobilemedia.core.comms.BaseMessaging: void <init>()>	<lancs.mobilemedia.core.comms.BaseMessaging: void <init>()>
\\"ImageScreen\\"	\\"ImageScreen\\"
<lancs.mobilemedia.core.ui.controller.AbstractController: void setCurrentScreen(javax.microedition.lcdui.Alert,javax.microedition.lcdui.Displayable)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void setCurrentScreen(javax.microedition.lcdui.Alert,javax.microedition.lcdui.Displayable)>
<javax.microedition.rms.RecordStore: void setRecord(int,byte[],int,int)>	<javax.microedition.rms.RecordStore: void setRecord(int,byte[],int,int)>
You have just received a bad fragmentated photo which was not possible to recovery.	You have just received a bad fragmentated photo which was not possible to recovery.
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addMediaData(java.lang.String,java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addMediaData(java.lang.String,java.lang.String,java.lang.String)>
<javax.microedition.lcdui.Image: javax.microedition.lcdui.Image createImage(byte[],int,int)>	<javax.microedition.lcdui.Image: javax.microedition.lcdui.Image createImage(byte[],int,int)>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: lancs.mobilemedia.core.ui.datamodel.MediaData[] getMedias(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: lancs.mobilemedia.core.ui.datamodel.MediaData[] getMedias(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.AbstractController: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable)>
<lancs.mobilemedia.core.util.MusicMediaUtil: lancs.mobilemedia.core.ui.datamodel.MediaData getMultiMediaInfoFromBytes(byte[])>	<lancs.mobilemedia.core.util.MusicMediaUtil: lancs.mobilemedia.core.ui.datamodel.MediaData getMultiMediaInfoFromBytes(byte[])>
<javax.microedition.midlet.MIDlet: void notifyDestroyed()>	<javax.microedition.midlet.MIDlet: void notifyDestroyed()>
<javax.microedition.lcdui.Graphics: void drawImage(javax.microedition.lcdui.Image,int,int,int)>	<javax.microedition.lcdui.Graphics: void drawImage(javax.microedition.lcdui.Image,int,int,int)>
Cancel sending of SMS message	Cancel sending of SMS message
<java.lang.Exception: void <init>(java.lang.String)>	<java.lang.Exception: void <init>(java.lang.String)>
<javax.microedition.media.Player: void realize()>	<javax.microedition.media.Player: void realize()>
<lancs.mobilemedia.core.ui.controller.AbstractController: javax.microedition.lcdui.List getAlbumListScreen()>	<lancs.mobilemedia.core.ui.controller.AbstractController: javax.microedition.lcdui.List getAlbumListScreen()>
<javax.microedition.media.Player: void start()>	<javax.microedition.media.Player: void start()>
<<\\"Pitch: \\">>	<<\\"Pitch: \\">>
Error interreput	Error interreput
<lancs.mobilemedia.core.ui.controller.AlbumController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.AlbumController: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.util.MusicMediaUtil: void <init>()>	<lancs.mobilemedia.core.util.MusicMediaUtil: void <init>()>
Ok	Ok
<javax.microedition.rms.RecordStoreNotOpenException: void printStackTrace()>	<javax.microedition.rms.RecordStoreNotOpenException: void printStackTrace()>
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void repaintListMedias()>	<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void repaintListMedias()>
SmsController::Starting SMSReceiver Thread	SmsController::Starting SMSReceiver Thread
PhotoViewScreen::paint(): Image object was null.	PhotoViewScreen::paint(): Image object was null.
<lancs.mobilemedia.sms.NetworkScreen: java.lang.String getRecPhoneNum()>	<lancs.mobilemedia.sms.NetworkScreen: java.lang.String getRecPhoneNum()>
Error criar or controler	Error criar or controler
<javax.microedition.lcdui.game.GameCanvas: int getHeight()>	<javax.microedition.lcdui.game.GameCanvas: int getHeight()>
/images/Kdvolder1.PNG	/images/Kdvolder1.PNG
DEBUG 1: before smsConn.receive():	DEBUG 1: before smsConn.receive():
<lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException: void <init>(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.MediaController: boolean playVideoMedia(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.MediaController: boolean playVideoMedia(java.lang.String)>
MediaAccessor::loadAlbums: 0 record stores exist. Creating default one.	MediaAccessor::loadAlbums: 0 record stores exist. Creating default one.
Applause	Applause
<lancs.mobilemedia.core.ui.controller.AlbumController: void resetMediaData()>	<lancs.mobilemedia.core.ui.controller.AlbumController: void resetMediaData()>
<<\\"<* PhotoViewController.handleCommand() *> \\">>	<<\\"<* PhotoViewController.handleCommand() *> \\">>
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void <clinit>()>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void <clinit>()>
<lancs.mobilemedia.core.ui.datamodel.MediaData: int getRecordId()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: int getRecordId()>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void setCapturedMedia(byte[])>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void setCapturedMedia(byte[])>
<lancs.mobilemedia.core.ui.screens.MediaListScreen: void <init>(int)>	<lancs.mobilemedia.core.ui.screens.MediaListScreen: void <init>(int)>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.controller.BaseController getVideoController()>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.controller.BaseController getVideoController()>
MobileMedia	MobileMedia
<lancs.mobilemedia.core.util.MediaUtil: void <init>()>	<lancs.mobilemedia.core.util.MediaUtil: void <init>()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void deleteAlbum(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void deleteAlbum(java.lang.String)>
<javax.microedition.media.control.VideoControl: void setVisible(boolean)>	<javax.microedition.media.control.VideoControl: void setVisible(boolean)>
<javax.microedition.media.control.VideoControl: void setDisplayFullScreen(boolean)>	<javax.microedition.media.control.VideoControl: void setDisplayFullScreen(boolean)>
<lancs.mobilemedia.core.ui.controller.BaseController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>	<lancs.mobilemedia.core.ui.controller.BaseController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen)>
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void <clinit>()>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void <clinit>()>
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: byte[] takePicture()>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: byte[] takePicture()>
Printer	Printer
<javax.wireless.messaging.Message: java.lang.String getAddress()>	<javax.wireless.messaging.Message: java.lang.String getAddress()>
<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: java.lang.Throwable getCause()>	<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: java.lang.Throwable getCause()>
Baby	Baby
<javax.microedition.lcdui.Alert: void setCommandListener(javax.microedition.lcdui.CommandListener)>	<javax.microedition.lcdui.Alert: void setCommandListener(javax.microedition.lcdui.CommandListener)>
NewLabelScreen	NewLabelScreen
<lancs.mobilemedia.core.ui.controller.PlayVideoController: void setMediaName(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.PlayVideoController: void setMediaName(java.lang.String)>
<lancs.mobilemedia.sms.SmsReceiverController: void setIncommingData(byte[])>	<lancs.mobilemedia.sms.SmsReceiverController: void setIncommingData(byte[])>
<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: void <init>()>	<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: void <init>()>
Yes - Delete	Yes - Delete
<lancs.mobilemedia.core.ui.controller.AbstractController: void postCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void postCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: void addVideoData(java.lang.String,java.lang.String,byte[])>	<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: void addVideoData(java.lang.String,java.lang.String,byte[])>
Set Favorite	Set Favorite
default	default
<<\\"\\">>	<<\\"\\">>
Delete Photo Album	Delete Photo Album
<javax.microedition.lcdui.List: void setCommandListener(javax.microedition.lcdui.CommandListener)>	<javax.microedition.lcdui.List: void setCommandListener(javax.microedition.lcdui.CommandListener)>
New Album	New Album
Invalid Password	Invalid Password
<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>	<javax.microedition.lcdui.Form: int append(javax.microedition.lcdui.Item)>
<javax.microedition.lcdui.game.GameCanvas: void flushGraphics()>	<javax.microedition.lcdui.game.GameCanvas: void flushGraphics()>
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void paint(javax.microedition.lcdui.Graphics)>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void paint(javax.microedition.lcdui.Graphics)>
<javax.microedition.lcdui.game.GameCanvas: int getGameAction(int)>	<javax.microedition.lcdui.game.GameCanvas: int getGameAction(int)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setFavorite(boolean)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setFavorite(boolean)>
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void keyPressed(int)>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void keyPressed(int)>
<javax.microedition.lcdui.game.GameCanvas: void <init>(boolean)>	<javax.microedition.lcdui.game.GameCanvas: void <init>(boolean)>
Select the media to Use	Select the media to Use
Incoming Binary SMS Message...	Incoming Binary SMS Message...
<lancs.mobilemedia.core.ui.controller.PhotoViewController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen,java.lang.String)>	<lancs.mobilemedia.core.ui.controller.PhotoViewController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen,java.lang.String)>
<lancs.mobilemedia.core.ui.controller.MediaController: void setMedia(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.controller.MediaController: void setMedia(lancs.mobilemedia.core.ui.datamodel.MediaData)>
<javax.wireless.messaging.MessageConnection: javax.wireless.messaging.Message receive()>	<javax.wireless.messaging.MessageConnection: javax.wireless.messaging.Message receive()>
MediaAccessor::loadAlbums: Current store	MediaAccessor::loadAlbums: Current store
<<\\"Volume: \\">>	<<\\"Volume: \\">>
Choose Items	Choose Items
<lancs.mobilemedia.core.ui.screens.NewLabelScreen: java.lang.String getLabelName()>	<lancs.mobilemedia.core.ui.screens.NewLabelScreen: java.lang.String getLabelName()>
preprocessor.symbols	preprocessor.symbols
/images/jump.wav	/images/jump.wav
NoName	NoName
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void createNewAlbum(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void createNewAlbum(java.lang.String)>
<javax.microedition.lcdui.Gauge: void setLabel(java.lang.String)>	<javax.microedition.lcdui.Gauge: void setLabel(java.lang.String)>
<<\\"SmsSenderThread::run: Sending message: \\">>	<<\\"SmsSenderThread::run: Sending message: \\">>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addImageData(java.lang.String,byte[],java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addImageData(java.lang.String,byte[],java.lang.String)>
Bong	Bong
<java.lang.Class: java.lang.String getName()>	<java.lang.Class: java.lang.String getName()>
<lancs.mobilemedia.sms.SmsSenderThread: void setBinaryData(byte[])>	<lancs.mobilemedia.sms.SmsSenderThread: void setBinaryData(byte[])>
Delete	Delete
<javax.microedition.midlet.MIDlet: void <init>()>	<javax.microedition.midlet.MIDlet: void <init>()>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaInfo(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaInfo(java.lang.String)>
Phone #	Phone #
<javax.wireless.messaging.BinaryMessage: void setPayloadData(byte[])>	<javax.wireless.messaging.BinaryMessage: void setPayloadData(byte[])>
Finishing Baseathread::run()	Finishing Baseathread::run()
<<\\"Would you like to remove the album \\">>	<<\\"Would you like to remove the album \\">>
<java.lang.Object: java.lang.String toString()>	<java.lang.Object: java.lang.String toString()>
<<\\"The file \\">>	<<\\"The file \\">>
<* PhotoController.goToPreviousScreen() *>	<* PhotoController.goToPreviousScreen() *>
<java.lang.StringBuilder: void <init>(java.lang.String)>	<java.lang.StringBuilder: void <init>(java.lang.String)>
Copy to Album:	Copy to Album:
<lancs.mobilemedia.core.ui.screens.NewLabelScreen: void setFormType(int)>	<lancs.mobilemedia.core.ui.screens.NewLabelScreen: void setFormType(int)>
<lancs.mobilemedia.core.ui.controller.AbstractController: lancs.mobilemedia.core.ui.datamodel.AlbumData getAlbumData()>	<lancs.mobilemedia.core.ui.controller.AbstractController: lancs.mobilemedia.core.ui.datamodel.AlbumData getAlbumData()>
Back	Back
/images/printer.wav	/images/printer.wav
Capture Video	Capture Video
Send Photo by SMS	Send Photo by SMS
BaseThread:: 0 Param Constructor used: Using default values	BaseThread:: 0 Param Constructor used: Using default values
<<\\"SmsController::handleCommand - Sending bytes for image \\">>	<<\\"SmsController::handleCommand - Sending bytes for image \\">>
<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>	<javax.microedition.lcdui.Canvas: void addCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void setCurrentScreenName(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void setCurrentScreenName(java.lang.String)>
<lancs.mobilemedia.core.ui.datamodel.MusicAlbumData: void <init>()>	<lancs.mobilemedia.core.ui.datamodel.MusicAlbumData: void <init>()>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void setMainMenu(lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia)>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void setMainMenu(lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia)>
MIDI Player	MIDI Player
MobileMedia.jad	MobileMedia.jad
<javax.microedition.lcdui.Graphics: void setColor(int)>	<javax.microedition.lcdui.Graphics: void setColor(int)>
Error Incoming Photo	Error Incoming Photo
<javax.microedition.media.Manager: javax.microedition.media.Player createPlayer(java.io.InputStream,java.lang.String)>	<javax.microedition.media.Manager: javax.microedition.media.Player createPlayer(java.io.InputStream,java.lang.String)>
DEBUG 2: after smsConn.receive()	DEBUG 2: after smsConn.receive()
<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData,java.lang.String,java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData,java.lang.String,java.lang.String,java.lang.String)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: byte[] getByteFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: byte[] getByteFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>
<lancs.mobilemedia.core.util.MusicMediaUtil: byte[] getBytesFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.util.MusicMediaUtil: byte[] getBytesFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: java.lang.String[] getAlbumNames()>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: java.lang.String[] getAlbumNames()>
<javax.microedition.rms.RecordStore: javax.microedition.rms.RecordEnumeration enumerateRecords(javax.microedition.rms.RecordFilter,javax.microedition.rms.RecordComparator,boolean)>	<javax.microedition.rms.RecordStore: javax.microedition.rms.RecordEnumeration enumerateRecords(javax.microedition.rms.RecordFilter,javax.microedition.rms.RecordComparator,boolean)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: java.lang.String getParentAlbumName()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: java.lang.String getParentAlbumName()>
<<\\"...or...No record store named \\">>	<<\\"...or...No record store named \\">>
<javax.wireless.messaging.MessageConnection: void send(javax.wireless.messaging.Message)>	<javax.wireless.messaging.MessageConnection: void send(javax.wireless.messaging.Message)>
<lancs.mobilemedia.sms.SmsMessaging: void setSmsSendPort(java.lang.String)>	<lancs.mobilemedia.sms.SmsMessaging: void setSmsSendPort(java.lang.String)>
\\"ImageListScreen\\"	\\"ImageListScreen\\"
<java.lang.String: java.lang.String toString()>	<java.lang.String: java.lang.String toString()>
/images/applause.wav	/images/applause.wav
<<\\"From: \\">>	<<\\"From: \\">>
<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: byte[] inputStreamToBytes(java.io.InputStream)>	<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: byte[] inputStreamToBytes(java.io.InputStream)>
/images/Gregor1.PNG	/images/Gregor1.PNG
<lancs.mobilemedia.core.ui.screens.MediaListScreen: void initMenu()>	<lancs.mobilemedia.core.ui.screens.MediaListScreen: void initMenu()>
Edit Label	Edit Label
<lancs.mobilemedia.core.ui.controller.AbstractController: java.lang.String getCurrentStoreName()>	<lancs.mobilemedia.core.ui.controller.AbstractController: java.lang.String getCurrentStoreName()>
<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void <init>()>	<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void <init>()>
Binary Message (No Text)	Binary Message (No Text)
<javax.microedition.lcdui.List: java.lang.String getString(int)>	<javax.microedition.lcdui.List: java.lang.String getString(int)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: java.util.Hashtable getMediaInfoTable()>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: java.util.Hashtable getMediaInfoTable()>
<java.lang.Integer: java.lang.String toString()>	<java.lang.Integer: java.lang.String toString()>
<javax.microedition.lcdui.Canvas: void <init>()>	<javax.microedition.lcdui.Canvas: void <init>()>
<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>	<javax.microedition.rms.RecordStore: void deleteRecordStore(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.AbstractController: lancs.mobilemedia.core.ui.controller.ControllerInterface getNextController()>	<lancs.mobilemedia.core.ui.controller.AbstractController: lancs.mobilemedia.core.ui.controller.ControllerInterface getNextController()>
<java.io.ByteArrayInputStream: void <init>(byte[])>	<java.io.ByteArrayInputStream: void <init>(byte[])>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: java.lang.String getPassword(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: java.lang.String getPassword(java.lang.String)>
<java.util.Vector: void <init>()>	<java.util.Vector: void <init>()>
Volume: 50	Volume: 50
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void keyPressed(int)>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void keyPressed(int)>
<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: void <init>(java.lang.String)>
<<\\" \\">>	<<\\" \\">>
<lancs.mobilemedia.core.threads.BaseThread: void <init>()>	<lancs.mobilemedia.core.threads.BaseThread: void <init>()>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void setCurrentStoreName(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void setCurrentStoreName(java.lang.String)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>	<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.BaseController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.BaseController: boolean handleCommand(javax.microedition.lcdui.Command)>
<java.lang.Object: boolean handleCommand(javax.microedition.lcdui.Command)>	<java.lang.Object: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setParentAlbumName(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setParentAlbumName(java.lang.String)>
<javax.microedition.lcdui.TextField: void setLabel(java.lang.String)>	<javax.microedition.lcdui.TextField: void setLabel(java.lang.String)>
Reciever Details	Reciever Details
Define a Password	Define a Password
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,java.io.InputStream,java.lang.String,lancs.mobilemedia.core.ui.controller.AbstractController)>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,java.io.InputStream,java.lang.String,lancs.mobilemedia.core.ui.controller.AbstractController)>
<lancs.mobilemedia.core.ui.MainUIMidlet: void destroyApp(boolean)>	<lancs.mobilemedia.core.ui.MainUIMidlet: void destroyApp(boolean)>
<lancs.mobilemedia.core.ui.controller.PhotoViewController: void setCpVideoScreen(lancs.mobilemedia.core.ui.screens.CaptureVideoScreen)>	<lancs.mobilemedia.core.ui.controller.PhotoViewController: void setCpVideoScreen(lancs.mobilemedia.core.ui.screens.CaptureVideoScreen)>
<lancs.mobilemedia.sms.SmsMessaging: java.lang.String getSmsReceivePort()>	<lancs.mobilemedia.sms.SmsMessaging: java.lang.String getSmsReceivePort()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void <clinit>()>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void <clinit>()>
<lancs.mobilemedia.core.ui.controller.AbstractController: void setNextController(lancs.mobilemedia.core.ui.controller.ControllerInterface)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void setNextController(lancs.mobilemedia.core.ui.controller.ControllerInterface)>
<javax.microedition.media.control.VideoControl: int getDisplayY()>	<javax.microedition.media.control.VideoControl: int getDisplayY()>
<lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException: void <init>()>	<lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException: void <init>()>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.controller.BaseController getMusicController()>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.controller.BaseController getMusicController()>
<<\\"SmsController:handleCommand() - Info from Network Screen is: \\">>	<<\\"SmsController:handleCommand() - Info from Network Screen is: \\">>
<lancs.mobilemedia.lib.exceptions.InvalidImageFormatException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.InvalidImageFormatException: void <init>(java.lang.String)>
SmsMessaging::receiveImage() - Finish	SmsMessaging::receiveImage() - Finish
<lancs.mobilemedia.core.ui.datamodel.MediaData: void increaseNumberOfViews()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void increaseNumberOfViews()>
vvpi-	vvpi-
<java.lang.Integer: int intValue()>	<java.lang.Integer: int intValue()>
Would you like to define a password to this Album	Would you like to define a password to this Album
<lancs.mobilemedia.sms.SmsMessaging: java.lang.String getDestinationPhoneNumber()>	<lancs.mobilemedia.sms.SmsMessaging: java.lang.String getDestinationPhoneNumber()>
<<\\"SmsMessaging::sendImage() num segments to send is: \\">>	<<\\"SmsMessaging::sendImage() num segments to send is: \\">>
<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.datamodel.VideoMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
<lancs.mobilemedia.sms.NetworkScreen: java.lang.String getRecPort()>	<lancs.mobilemedia.sms.NetworkScreen: java.lang.String getRecPort()>
/images/Java.png	/images/Java.png
ConfirmDeleteAlbumScreen	ConfirmDeleteAlbumScreen
<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: void <init>(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
<lancs.mobilemedia.core.ui.controller.VideoCaptureController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.VideoCaptureController: boolean handleCommand(javax.microedition.lcdui.Command)>
<javax.wireless.messaging.BinaryMessage: byte[] getPayloadData()>	<javax.wireless.messaging.BinaryMessage: byte[] getPayloadData()>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void resetMediaData()>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void resetMediaData()>
<java.io.InputStream: int read(byte[])>	<java.io.InputStream: int read(byte[])>
<lancs.mobilemedia.core.ui.controller.AbstractController: void setAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void setAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: byte[] getByteFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: byte[] getByteFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>
<lancs.mobilemedia.core.ui.controller.MediaController: lancs.mobilemedia.core.ui.datamodel.MediaData getMedia()>	<lancs.mobilemedia.core.ui.controller.MediaController: lancs.mobilemedia.core.ui.datamodel.MediaData getMedia()>
<javax.microedition.rms.RecordEnumeration: int nextRecordId()>	<javax.microedition.rms.RecordEnumeration: int nextRecordId()>
<java.lang.Thread: void start()>	<java.lang.Thread: void start()>
\\"AlbumListScreen\\"	\\"AlbumListScreen\\"
<javax.microedition.media.control.PitchControl: int setPitch(int)>	<javax.microedition.media.control.PitchControl: int setPitch(int)>
antenna.home	antenna.home
Item label	Item label
Save Video	Save Video
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaFromBytes(byte[])>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaFromBytes(byte[])>
<lancs.mobilemedia.sms.NetworkScreen: void <init>(java.lang.String)>	<lancs.mobilemedia.sms.NetworkScreen: void <init>(java.lang.String)>
<* BaseController.handleCommand() *> Reset Photo Album	<* BaseController.handleCommand() *> Reset Photo Album
<<\\"<* PhotoController.handleCommand() *> \\">>	<<\\"<* PhotoController.handleCommand() *> \\">>
<java.lang.String: void <init>(byte[])>	<java.lang.String: void <init>(byte[])>
<lancs.mobilemedia.sms.SmsMessaging: void <init>()>	<lancs.mobilemedia.sms.SmsMessaging: void <init>()>
<lancs.mobilemedia.core.ui.controller.AbstractController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List)>
<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: java.lang.Throwable getCause()>	<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: java.lang.Throwable getCause()>
<java.lang.String: java.lang.String concat(java.lang.String)>	<java.lang.String: java.lang.String concat(java.lang.String)>
<lancs.mobilemedia.core.ui.MainUIMidlet: void startApp()>	<lancs.mobilemedia.core.ui.MainUIMidlet: void startApp()>
Reject Photo	Reject Photo
Crio a screen	Crio a screen
/images/baby.wav	/images/baby.wav
<javax.microedition.lcdui.Alert: void <init>(java.lang.String)>	<javax.microedition.lcdui.Alert: void <init>(java.lang.String)>
<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: void <init>()>	<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: void <init>()>
<java.lang.String: boolean startsWith(java.lang.String)>	<java.lang.String: boolean startsWith(java.lang.String)>
<lancs.mobilemedia.core.ui.screens.NewLabelScreen: int getFormType()>	<lancs.mobilemedia.core.ui.screens.NewLabelScreen: int getFormType()>
<javax.microedition.lcdui.game.GameCanvas: void repaint()>	<javax.microedition.lcdui.game.GameCanvas: void repaint()>
Finishing SMSReceiver run()	Finishing SMSReceiver run()
<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>	<javax.microedition.lcdui.Command: void <init>(java.lang.String,int,int)>
<java.lang.StringBuilder: void <init>()>	<java.lang.StringBuilder: void <init>()>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void deleteAlbum(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void deleteAlbum(java.lang.String)>
<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: void <init>()>	<lancs.mobilemedia.lib.exceptions.ImagePathNotValidException: void <init>()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: byte[] loadMediaBytesFromRMS(java.lang.String,int)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: byte[] loadMediaBytesFromRMS(java.lang.String,int)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaFromBytes(byte[])>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaFromBytes(byte[])>
EStou aqui 11...........................	EStou aqui 11...........................
<javax.microedition.rms.RecordStore: int getNextRecordID()>	<javax.microedition.rms.RecordStore: int getNextRecordID()>
<lancs.mobilemedia.sms.SmsSenderThread: java.lang.String getSmsPort()>	<lancs.mobilemedia.sms.SmsSenderThread: java.lang.String getSmsPort()>
<javax.wireless.messaging.TextMessage: java.lang.String getPayloadText()>	<javax.wireless.messaging.TextMessage: java.lang.String getPayloadText()>
MobileMedia.jar	MobileMedia.jar
video/mpeg	video/mpeg
<lancs.mobilemedia.core.ui.MainUIMidlet: void <init>()>	<lancs.mobilemedia.core.ui.MainUIMidlet: void <init>()>
<lancs.mobilemedia.core.ui.controller.MediaController: void incrementCountViews(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.MediaController: void incrementCountViews(java.lang.String)>
<<\\"<* AlbumController.handleCommand() *>: \\">>	<<\\"<* AlbumController.handleCommand() *>: \\">>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addMediaData(lancs.mobilemedia.core.ui.datamodel.MediaData,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addMediaData(lancs.mobilemedia.core.ui.datamodel.MediaData,java.lang.String)>
<lancs.mobilemedia.core.ui.controller.MediaController: java.lang.String getSelectedMediaName()>	<lancs.mobilemedia.core.ui.controller.MediaController: java.lang.String getSelectedMediaName()>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: java.lang.String getItemName()>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: java.lang.String getItemName()>
<javax.microedition.media.control.RecordControl: void commit()>	<javax.microedition.media.control.RecordControl: void commit()>
<lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException: void <init>(java.lang.Throwable)>
<lancs.mobilemedia.core.ui.controller.ControllerInterface: void postCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.ControllerInterface: void postCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.sms.SmsSenderThread: void <init>(java.lang.String,java.lang.String,java.lang.String)>	<lancs.mobilemedia.sms.SmsSenderThread: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<<\\"SmsMessaging::receiveImage: buffer length = \\">>	<<\\"SmsMessaging::receiveImage: buffer length = \\">>
<lancs.mobilemedia.sms.SmsReceiverThread: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen,lancs.mobilemedia.sms.SmsReceiverController)>	<lancs.mobilemedia.sms.SmsReceiverThread: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,lancs.mobilemedia.core.ui.screens.AlbumListScreen,lancs.mobilemedia.sms.SmsReceiverController)>
<javax.microedition.lcdui.Graphics: void setGrayScale(int)>	<javax.microedition.lcdui.Graphics: void setGrayScale(int)>
<<\\"Closing connection caught: \\">>	<<\\"Closing connection caught: \\">>
<javax.microedition.media.control.TempoControl: int setTempo(int)>	<javax.microedition.media.control.TempoControl: int setTempo(int)>
/images/Gosling1.PNG	/images/Gosling1.PNG
Path	Path
<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void <clinit>()>	<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void <clinit>()>
<java.lang.String: int indexOf(java.lang.String,int)>	<java.lang.String: int indexOf(java.lang.String,int)>
<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: void resetRecordStore()>	<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: void resetRecordStore()>
Copy Media to Album	Copy Media to Album
<lancs.mobilemedia.sms.SmsMessaging: void cleanUpConnections(javax.wireless.messaging.MessageConnection)>	<lancs.mobilemedia.sms.SmsMessaging: void cleanUpConnections(javax.wireless.messaging.MessageConnection)>
Gail	Gail
<javax.microedition.io.PushRegistry: java.lang.String[] listConnections(boolean)>	<javax.microedition.io.PushRegistry: java.lang.String[] listConnections(boolean)>
lancs.mobilemedia.core.ui.MainUIMidlet	lancs.mobilemedia.core.ui.MainUIMidlet
<java.util.Hashtable: void <init>()>	<java.util.Hashtable: void <init>()>
<java.lang.String: byte[] getBytes()>	<java.lang.String: byte[] getBytes()>
<lancs.mobilemedia.core.ui.datamodel.MediaData: int getNumberOfViews()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: int getNumberOfViews()>
<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: void <init>(java.lang.String)>
Kris	Kris
mmp-	mmp-
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void deleteMedia(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void deleteMedia(java.lang.String,java.lang.String)>
<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: java.lang.Throwable getCause()>	<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: java.lang.Throwable getCause()>
<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void deleteAll()>	<lancs.mobilemedia.core.ui.screens.AlbumListScreen: void deleteAll()>
Store	Store
<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void initMenu()>	<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void initMenu()>
<<\\"<* SelectMediaController.handleCommand() *>: \\">>	<<\\"<* SelectMediaController.handleCommand() *>: \\">>
<lancs.mobilemedia.core.ui.screens.PasswordScreen: void <init>(java.lang.String,int)>	<lancs.mobilemedia.core.ui.screens.PasswordScreen: void <init>(java.lang.String,int)>
<lancs.mobilemedia.core.ui.controller.PlayVideoController: java.lang.String getMediaName()>	<lancs.mobilemedia.core.ui.controller.PlayVideoController: java.lang.String getMediaName()>
<java.io.PrintStream: void print(java.lang.String)>	<java.io.PrintStream: void print(java.lang.String)>
<<\\"SmsMessaging::sendImage: Sending binary message to: \\">>	<<\\"SmsMessaging::sendImage: Sending binary message to: \\">>
<lancs.mobilemedia.core.ui.datamodel.MediaData: java.lang.String getTypeMedia()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: java.lang.String getTypeMedia()>
Java	Java
Music	Music
<javax.microedition.lcdui.Display: javax.microedition.lcdui.Displayable getCurrent()>	<javax.microedition.lcdui.Display: javax.microedition.lcdui.Displayable getCurrent()>
<javax.microedition.rms.RecordStore: void closeRecordStore()>	<javax.microedition.rms.RecordStore: void closeRecordStore()>
<lancs.mobilemedia.core.ui.controller.MediaListController: void bubbleSort(lancs.mobilemedia.core.ui.datamodel.MediaData[])>	<lancs.mobilemedia.core.ui.controller.MediaListController: void bubbleSort(lancs.mobilemedia.core.ui.datamodel.MediaData[])>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addMediaArrayOfBytes(java.lang.String,java.lang.String,byte[])>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void addMediaArrayOfBytes(java.lang.String,java.lang.String,byte[])>
Path not valid for this file:	Path not valid for this file:
<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void <init>()>	<lancs.mobilemedia.core.ui.screens.SelectTypeOfMedia: void <init>()>
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: boolean isFromSMS()>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: boolean isFromSMS()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: boolean updateMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData,lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: boolean updateMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData,lancs.mobilemedia.core.ui.datamodel.MediaData)>
<java.lang.Exception: void printStackTrace()>	<java.lang.Exception: void printStackTrace()>
<javax.microedition.io.Connector: javax.microedition.io.Connection open(java.lang.String)>	<javax.microedition.io.Connector: javax.microedition.io.Connection open(java.lang.String)>
Reset	Reset
5550001	5550001
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: java.lang.String getPath()>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: java.lang.String getPath()>
<lancs.mobilemedia.core.ui.datamodel.MusicAlbumData: java.io.InputStream getMusicFromRecordStore(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MusicAlbumData: java.io.InputStream getMusicFromRecordStore(java.lang.String,java.lang.String)>
<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: void <init>(java.lang.String)>	<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: void <init>(java.lang.String)>
<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: java.lang.Throwable getCause()>	<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: java.lang.Throwable getCause()>
<<\\"<* PhotoController.handleCommand() *> Save Photo Label = \\">>	<<\\"<* PhotoController.handleCommand() *> Save Photo Label = \\">>
<java.lang.StringBuffer: int length()>	<java.lang.StringBuffer: int length()>
<lancs.mobilemedia.core.ui.controller.MediaController: void updateMedia(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.controller.MediaController: void updateMedia(lancs.mobilemedia.core.ui.datamodel.MediaData)>
<java.lang.StringBuffer: java.lang.String toString()>	<java.lang.StringBuffer: java.lang.String toString()>
1000	1000
Finishing SMSSender run()	Finishing SMSSender run()
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaInfo(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData getMediaInfo(java.lang.String)>
<javax.microedition.lcdui.Display: void setCurrent(javax.microedition.lcdui.Displayable)>	<javax.microedition.lcdui.Display: void setCurrent(javax.microedition.lcdui.Displayable)>
Delete Photo Album here	Delete Photo Album here
<lancs.mobilemedia.core.ui.controller.MediaListController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.MediaListController: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: boolean updateMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData,lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: boolean updateMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData,lancs.mobilemedia.core.ui.datamodel.MediaData)>
<java.lang.Integer: int parseInt(java.lang.String)>	<java.lang.Integer: int parseInt(java.lang.String)>
image/png	image/png
Olha para a captura	Olha para a captura
<lancs.mobilemedia.core.ui.controller.MediaListController: void exchange(lancs.mobilemedia.core.ui.datamodel.MediaData[],int,int)>	<lancs.mobilemedia.core.ui.controller.MediaListController: void exchange(lancs.mobilemedia.core.ui.datamodel.MediaData[],int,int)>
<javax.microedition.lcdui.Form: void <init>(java.lang.String)>	<javax.microedition.lcdui.Form: void <init>(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.MediaController: void showImage(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.MediaController: void showImage(java.lang.String)>
<javax.microedition.media.control.VideoControl: int getDisplayX()>	<javax.microedition.media.control.VideoControl: int getDisplayX()>
<java.lang.String: void <init>()>	<java.lang.String: void <init>()>
Current List from display is NULL!	Current List from display is NULL!
Save	Save
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: java.lang.String getCurrentScreenName()>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: java.lang.String getCurrentScreenName()>
Type of media	Type of media
<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.datamodel.AlbumData getImageAlbumData()>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.datamodel.AlbumData getImageAlbumData()>
<javax.microedition.lcdui.Display: javax.microedition.lcdui.Display getDisplay(javax.microedition.midlet.MIDlet)>	<javax.microedition.lcdui.Display: javax.microedition.lcdui.Display getDisplay(javax.microedition.midlet.MIDlet)>
C:\WTK2.5.1	C:\WTK2.5.1
Take photo	Take photo
Add	Add
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setRecordId(int)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setRecordId(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: byte[] getMediaArrayOfByte(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MusicMediaAccessor: byte[] getMediaArrayOfByte(java.lang.String)>
Gregor	Gregor
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>	<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
Play Video	Play Video
vvp-	vvp-
mpp-	mpp-
<lancs.mobilemedia.core.ui.controller.MediaController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.MediaController: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.controller.MusicPlayController: void setMediaName(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.MusicPlayController: void setMediaName(java.lang.String)>
Accept Photo	Accept Photo
<<\\"Tempo: \\">>	<<\\"Tempo: \\">>
Linux Penguin	Linux Penguin
<* AlbumController.goToPreviousScreen() *>	<* AlbumController.goToPreviousScreen() *>
Starting BaseThread::run()	Starting BaseThread::run()
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void setFromSMS(boolean)>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void setFromSMS(boolean)>
<lancs.mobilemedia.sms.SmsSenderThread: java.lang.String getMessageText()>	<lancs.mobilemedia.sms.SmsSenderThread: java.lang.String getMessageText()>
EStou aqui 2222...........................	EStou aqui 2222...........................
Tucan Sam	Tucan Sam
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void startCapture()>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void startCapture()>
<lancs.mobilemedia.sms.SmsSenderController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.sms.SmsSenderController: boolean handleCommand(javax.microedition.lcdui.Command)>
/images/Penguin.png	/images/Penguin.png
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void setVisibleVideo()>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: void setVisibleVideo()>
Add new item to Album	Add new item to Album
Error ao criar o player:	Error ao criar o player:
<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.datamodel.AlbumData getMusicAlbumData()>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: lancs.mobilemedia.core.ui.datamodel.AlbumData getMusicAlbumData()>
midlet.name	midlet.name
<java.lang.Thread: void <init>(java.lang.Runnable)>	<java.lang.Thread: void <init>(java.lang.Runnable)>
<lancs.mobilemedia.lib.exceptions.InvalidImageFormatException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.InvalidImageFormatException: void <init>(java.lang.Throwable)>
<javax.microedition.rms.RecordStore: java.lang.String[] listRecordStores()>	<javax.microedition.rms.RecordStore: java.lang.String[] listRecordStores()>
<<\\"AbstractController::postCommand - Current controller is: \\">>	<<\\"AbstractController::postCommand - Current controller is: \\">>
<lancs.mobilemedia.sms.SmsReceiverThread: void run()>	<lancs.mobilemedia.sms.SmsReceiverThread: void run()>
<javax.microedition.media.control.VideoControl: java.lang.Object initDisplayMode(int,java.lang.Object)>	<javax.microedition.media.control.VideoControl: java.lang.Object initDisplayMode(int,java.lang.Object)>
\\"*\\"	\\"*\\"
/images/Duke1.PNG	/images/Duke1.PNG
<javax.microedition.lcdui.Form: void <init>(java.lang.String,javax.microedition.lcdui.Item[])>	<javax.microedition.lcdui.Form: void <init>(java.lang.String,javax.microedition.lcdui.Item[])>
prc.name	prc.name
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setMusicController(lancs.mobilemedia.core.ui.controller.BaseController)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setMusicController(lancs.mobilemedia.core.ui.controller.BaseController)>
<lancs.mobilemedia.core.ui.controller.PlayVideoController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.PlayVideoController: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setMediaLabel(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setMediaLabel(java.lang.String)>
<javax.microedition.media.Player: void stop()>	<javax.microedition.media.Player: void stop()>
<<\\"<* MusicPlayController.handleCommand() *> \\">>	<<\\"<* MusicPlayController.handleCommand() *> \\">>
<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.PersistenceMechanismException: void <init>(java.lang.Throwable)>
ALBUM	ALBUM
<lancs.mobilemedia.sms.SmsMessaging: boolean sendImage(byte[])>	<lancs.mobilemedia.sms.SmsMessaging: boolean sendImage(byte[])>
<lancs.mobilemedia.core.ui.MainUIMidlet: void pauseApp()>	<lancs.mobilemedia.core.ui.MainUIMidlet: void pauseApp()>
Bad fragmentation	Bad fragmentation
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setImageController(lancs.mobilemedia.core.ui.controller.BaseController)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setImageController(lancs.mobilemedia.core.ui.controller.BaseController)>
<lancs.mobilemedia.core.ui.controller.PlayVideoController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List,lancs.mobilemedia.core.ui.screens.PlayVideoScreen)>	<lancs.mobilemedia.core.ui.controller.PlayVideoController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List,lancs.mobilemedia.core.ui.screens.PlayVideoScreen)>
Reject Photo command	Reject Photo command
<<\\"Waiting for SMS on \\">>	<<\\"Waiting for SMS on \\">>
<lancs.mobilemedia.core.ui.controller.AbstractController: void setCurrentScreen(javax.microedition.lcdui.Displayable)>	<lancs.mobilemedia.core.ui.controller.AbstractController: void setCurrentScreen(javax.microedition.lcdui.Displayable)>
sms://	sms://
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: byte[] getMediaArrayOfByte(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: byte[] getMediaArrayOfByte(java.lang.String)>
New photo	New photo
/images/Tucan.png	/images/Tucan.png
<lancs.mobilemedia.core.ui.datamodel.MediaData: int getForeignRecordId()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: int getForeignRecordId()>
<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void paint(javax.microedition.lcdui.Graphics)>	<lancs.mobilemedia.core.ui.screens.PlayVideoScreen: void paint(javax.microedition.lcdui.Graphics)>
<javax.microedition.lcdui.Command: java.lang.String getLabel()>	<javax.microedition.lcdui.Command: java.lang.String getLabel()>
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void <init>(javax.microedition.lcdui.Image)>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void <init>(javax.microedition.lcdui.Image)>
Save to Album:	Save to Album:
Screen size:176:205	Screen size:176:205
ImageListScreen	ImageListScreen
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<javax.microedition.media.control.VideoControl: void setDisplaySize(int,int)>	<javax.microedition.media.control.VideoControl: void setDisplaySize(int,int)>
\\"NewLabelScreen\\"	\\"NewLabelScreen\\"
<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void setImage(byte[])>	<lancs.mobilemedia.core.ui.screens.PhotoViewScreen: void setImage(byte[])>
<lancs.mobilemedia.sms.SmsMessaging: java.lang.String getSmsSendPort()>	<lancs.mobilemedia.sms.SmsMessaging: java.lang.String getSmsSendPort()>
Incoming SMS Message with Payload:	Incoming SMS Message with Payload:
<java.lang.String: int length()>	<java.lang.String: int length()>
<javax.microedition.lcdui.game.GameCanvas: void addCommand(javax.microedition.lcdui.Command)>	<javax.microedition.lcdui.game.GameCanvas: void addCommand(javax.microedition.lcdui.Command)>
<javax.wireless.messaging.MessageConnection: int numberOfSegments(javax.wireless.messaging.Message)>	<javax.wireless.messaging.MessageConnection: int numberOfSegments(javax.wireless.messaging.Message)>
<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: java.lang.Throwable getCause()>	<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: java.lang.Throwable getCause()>
<<\\"SmsSenderController::handleCommand: \\">>	<<\\"SmsSenderController::handleCommand: \\">>
<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.ImageNotFoundException: void <init>(java.lang.Throwable)>
<lancs.mobilemedia.core.ui.screens.PasswordScreen: java.lang.String getPassword()>	<lancs.mobilemedia.core.ui.screens.PasswordScreen: java.lang.String getPassword()>
<lancs.mobilemedia.core.ui.controller.BaseController: boolean goToPreviousScreen()>	<lancs.mobilemedia.core.ui.controller.BaseController: boolean goToPreviousScreen()>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addPassword(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void addPassword(java.lang.String,java.lang.String)>
Start	Start
<java.lang.Object: java.lang.Class getClass()>	<java.lang.Object: java.lang.Class getClass()>
MobileMedia.prc	MobileMedia.prc
<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: void <init>()>	<lancs.mobilemedia.lib.exceptions.InvalidImageDataException: void <init>()>
<lancs.mobilemedia.core.ui.controller.MediaController: boolean goToPreviousScreen()>	<lancs.mobilemedia.core.ui.controller.MediaController: boolean goToPreviousScreen()>
<<\\"<* MediaUtil.readMediaAsByteArray() *> is = \\">>	<<\\"<* MediaUtil.readMediaAsByteArray() *> is = \\">>
<java.util.Vector: void copyInto(java.lang.Object[])>	<java.util.Vector: void copyInto(java.lang.Object[])>
<lancs.mobilemedia.core.ui.controller.MusicPlayController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List,lancs.mobilemedia.core.ui.screens.PlayMediaScreen)>	<lancs.mobilemedia.core.ui.controller.MusicPlayController: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,lancs.mobilemedia.core.ui.datamodel.AlbumData,javax.microedition.lcdui.List,lancs.mobilemedia.core.ui.screens.PlayMediaScreen)>
<java.lang.String: java.lang.String substring(int,int)>	<java.lang.String: java.lang.String substring(int,int)>
Duke (Sun)	Duke (Sun)
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void removeRecords()>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void removeRecords()>
<java.lang.RuntimeException: void printStackTrace()>	<java.lang.RuntimeException: void printStackTrace()>
<lancs.mobilemedia.core.ui.datamodel.AlbumData: void <init>()>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: void <init>()>
<lancs.mobilemedia.core.comms.BaseMessaging: boolean sendImage(byte[])>	<lancs.mobilemedia.core.comms.BaseMessaging: boolean sendImage(byte[])>
ImageScreen	ImageScreen
<<\\"device_screen_132x176, includePhotoAlbum,  includeFavourites , includeSorting, includePhotoAlbum, includeMMAPI, includeSmsFeature, capturePhoto, simulatePlayVideo, includeVideo, captureVideo, includePrivacy  \\">>	<<\\"device_screen_132x176, includePhotoAlbum,  includeFavourites , includeSorting, includePhotoAlbum, includeMMAPI, includeSmsFeature, capturePhoto, simulatePlayVideo, includeVideo, captureVideo, includePrivacy  \\">>
Name	Name
<lancs.mobilemedia.core.ui.datamodel.VideoAlbumData: void <init>()>	<lancs.mobilemedia.core.ui.datamodel.VideoAlbumData: void <init>()>
Starting SMSReceiver::run()	Starting SMSReceiver::run()
Password	Password
<lancs.mobilemedia.core.ui.screens.MediaListScreen: void <clinit>()>	<lancs.mobilemedia.core.ui.screens.MediaListScreen: void <clinit>()>
<javax.microedition.lcdui.Display: void setCurrent(javax.microedition.lcdui.Alert,javax.microedition.lcdui.Displayable)>	<javax.microedition.lcdui.Display: void setCurrent(javax.microedition.lcdui.Alert,javax.microedition.lcdui.Displayable)>
My Photo Album	My Photo Album
Select	Select
<javax.microedition.rms.RecordStore: int addRecord(byte[],int,int)>	<javax.microedition.rms.RecordStore: int addRecord(byte[],int,int)>
<javax.microedition.lcdui.List: int append(java.lang.String,javax.microedition.lcdui.Image)>	<javax.microedition.lcdui.List: int append(java.lang.String,javax.microedition.lcdui.Image)>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: lancs.mobilemedia.core.ui.controller.ScreenSingleton getInstance()>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: lancs.mobilemedia.core.ui.controller.ScreenSingleton getInstance()>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: java.lang.String getItemType()>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: java.lang.String getItemType()>
Cancel	Cancel
<lancs.mobilemedia.core.ui.datamodel.AlbumData: lancs.mobilemedia.core.ui.datamodel.MediaData[] loadMediaDataFromRMS(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.AlbumData: lancs.mobilemedia.core.ui.datamodel.MediaData[] loadMediaDataFromRMS(java.lang.String)>
<lancs.mobilemedia.core.util.MediaUtil: byte[] getBytesFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>	<lancs.mobilemedia.core.util.MediaUtil: byte[] getBytesFromMediaInfo(lancs.mobilemedia.core.ui.datamodel.MediaData)>
<lancs.mobilemedia.sms.SmsMessaging: void setDestinationPhoneNumber(java.lang.String)>	<lancs.mobilemedia.sms.SmsMessaging: void setDestinationPhoneNumber(java.lang.String)>
Path not valid for this media:	Path not valid for this media:
<javax.microedition.rms.RecordStore: byte[] getRecord(int)>	<javax.microedition.rms.RecordStore: byte[] getRecord(int)>
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setImageAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setImageAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
jar.name	jar.name
<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setMusicAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.controller.SelectMediaController: void setMusicAlbumData(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
Delete Album	Delete Album
<javax.microedition.lcdui.Gauge: int getValue()>	<javax.microedition.lcdui.Gauge: int getValue()>
<lancs.mobilemedia.sms.SmsSenderThread: void setSmsPort(java.lang.String)>	<lancs.mobilemedia.sms.SmsSenderThread: void setSmsPort(java.lang.String)>
Create new Photo Album here	Create new Photo Album here
<lancs.mobilemedia.core.ui.datamodel.MediaData: void <clinit>()>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void <clinit>()>
<lancs.mobilemedia.core.ui.controller.MediaController: lancs.mobilemedia.core.ui.screens.NewLabelScreen getScreen()>	<lancs.mobilemedia.core.ui.controller.MediaController: lancs.mobilemedia.core.ui.screens.NewLabelScreen getScreen()>
<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: void resetRecordStore()>	<lancs.mobilemedia.core.ui.datamodel.ImageMediaAccessor: void resetRecordStore()>
<<\\"No record store named \\">>	<<\\"No record store named \\">>
<lancs.mobilemedia.core.ui.controller.MusicPlayController: boolean handleCommand(javax.microedition.lcdui.Command)>	<lancs.mobilemedia.core.ui.controller.MusicPlayController: boolean handleCommand(javax.microedition.lcdui.Command)>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: byte[] getCapturedMedia()>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: byte[] getCapturedMedia()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<lancs.mobilemedia.core.ui.datamodel.MediaData: void setTypeMedia(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaData: void setTypeMedia(java.lang.String)>
ImageAccessor::resetVideoRecordStore: albumNames array was null. Nothing to delete.	ImageAccessor::resetVideoRecordStore: albumNames array was null. Nothing to delete.
<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void startPlay()>	<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void startPlay()>
Capture Photo	Capture Photo
<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,java.io.InputStream,java.lang.String,lancs.mobilemedia.core.ui.controller.AbstractController)>	<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void <init>(lancs.mobilemedia.core.ui.MainUIMidlet,java.io.InputStream,java.lang.String,lancs.mobilemedia.core.ui.controller.AbstractController)>
My Video Album	My Video Album
<java.util.Vector: int size()>	<java.util.Vector: int size()>
<javax.microedition.lcdui.Alert: void setString(java.lang.String)>	<javax.microedition.lcdui.Alert: void setString(java.lang.String)>
<java.lang.StringBuffer: void <init>()>	<java.lang.StringBuffer: void <init>()>
<javax.microedition.lcdui.Graphics: void drawRect(int,int,int,int)>	<javax.microedition.lcdui.Graphics: void drawRect(int,int,int,int)>
<java.lang.Exception: void <init>()>	<java.lang.Exception: void <init>()>
<lancs.mobilemedia.core.ui.controller.MediaController: boolean playMultiMedia(java.lang.String)>	<lancs.mobilemedia.core.ui.controller.MediaController: boolean playMultiMedia(java.lang.String)>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void resetRecordStore()>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: void resetRecordStore()>
<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: void <init>(java.lang.Throwable)>	<lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException: void <init>(java.lang.Throwable)>
<javax.microedition.media.control.RecordControl: void stopRecord()>	<javax.microedition.media.control.RecordControl: void stopRecord()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData[] loadMediaDataFromRMS(java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: lancs.mobilemedia.core.ui.datamodel.MediaData[] loadMediaDataFromRMS(java.lang.String)>
<lancs.mobilemedia.core.ui.controller.BaseController: void init(lancs.mobilemedia.core.ui.datamodel.AlbumData)>	<lancs.mobilemedia.core.ui.controller.BaseController: void init(lancs.mobilemedia.core.ui.datamodel.AlbumData)>
<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void <init>()>	<lancs.mobilemedia.core.ui.controller.ScreenSingleton: void <init>()>
Capture video	Capture video
Save Item	Save Item
<javax.microedition.rms.RecordEnumeration: boolean hasNextElement()>	<javax.microedition.rms.RecordEnumeration: boolean hasNextElement()>
<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: boolean deleteSingleMediaFromRMS(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.MediaAccessor: boolean deleteSingleMediaFromRMS(java.lang.String,java.lang.String)>
<lancs.mobilemedia.core.ui.datamodel.VideoAlbumData: java.io.InputStream getVideoFromRecordStore(java.lang.String,java.lang.String)>	<lancs.mobilemedia.core.ui.datamodel.VideoAlbumData: java.io.InputStream getVideoFromRecordStore(java.lang.String,java.lang.String)>
<<\\"<* PlayVideoController.handleCommand() *> \\">>	<<\\"<* PlayVideoController.handleCommand() *> \\">>
View Favorites	View Favorites
<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void itemStateChanged(javax.microedition.lcdui.Item)>	<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void itemStateChanged(javax.microedition.lcdui.Item)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>	<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<lancs.mobilemedia.lib.exceptions.InvalidPhotoAlbumNameException: void <init>()>	<lancs.mobilemedia.lib.exceptions.InvalidPhotoAlbumNameException: void <init>()>
<lancs.mobilemedia.core.ui.controller.MediaController: void setScreen(lancs.mobilemedia.core.ui.screens.NewLabelScreen)>	<lancs.mobilemedia.core.ui.controller.MediaController: void setScreen(lancs.mobilemedia.core.ui.screens.NewLabelScreen)>
<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void <init>(java.lang.String)>	<lancs.mobilemedia.core.ui.screens.AddMediaToAlbum: void <init>(java.lang.String)>
<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void pausePlay()>	<lancs.mobilemedia.core.ui.screens.PlayMediaScreen: void pausePlay()>
<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: byte[] getByteArrays()>	<lancs.mobilemedia.core.ui.screens.CaptureVideoScreen: byte[] getByteArrays()>
AlbumListScreen	AlbumListScreen
<javax.microedition.rms.RecordStore: javax.microedition.rms.RecordStore openRecordStore(java.lang.String,boolean)>	<javax.microedition.rms.RecordStore: javax.microedition.rms.RecordStore openRecordStore(java.lang.String,boolean)>
<java.io.ByteArrayOutputStream: void <init>()>	<java.io.ByteArrayOutputStream: void <init>()>

<Neighbor: void <init>()>/assign/instruction3	3	<Neighbor: void <init>()>/$null0	<Neighbor: void <init>()>
<Edge: Vertex getOtherVertex(Vertex)>/return/instruction11	11	<Edge: Vertex getOtherVertex(Vertex)>/$null0	<Edge: Vertex getOtherVertex(Vertex)>
<Vertex: EdgeIter getEdges()>/invoke/instruction4	4	<Vertex: EdgeIter getEdges()>/$null0	<Vertex: EdgeIter getEdges()>
<Graph: Vertex findsVertex(java.lang.String)>/return/instruction4	4	<Graph: Vertex findsVertex(java.lang.String)>/$null0	<Graph: Vertex findsVertex(java.lang.String)>
<Graph: Graph kruskal()>/invoke/instruction22	22	<Graph: Graph kruskal()>/$null0	<Graph: Graph kruskal()>
<Graph: Vertex findsVertex(java.lang.String)>/return/instruction15	15	<Graph: Vertex findsVertex(java.lang.String)>/$null1	<Graph: Vertex findsVertex(java.lang.String)>
<Vertex: VertexIter getNeighbors()>/invoke/instruction4	4	<Vertex: VertexIter getNeighbors()>/$null0	<Vertex: VertexIter getNeighbors()>
<Neighbor: void <init>()>/assign/instruction5	5	<Neighbor: void <init>()>/$null1	<Neighbor: void <init>()>
<Neighbor: Vertex getStart()>/return/instruction2	2	<Neighbor: Vertex getStart()>/$null0	<Neighbor: Vertex getStart()>
<EdgeIter: EdgeIfc next()>/return/instruction2	2	<EdgeIter: EdgeIfc next()>/$null0	<EdgeIter: EdgeIfc next()>
<Vertex: void <init>()>/assign/instruction3	3	<Vertex: void <init>()>/$null0	<Vertex: void <init>()>
<Neighbor: void <init>()>/assign/instruction7	7	<Neighbor: void <init>()>/$null2	<Neighbor: void <init>()>
<Graph: EdgeIfc findsEdge(Vertex,Vertex)>/return/instruction28	28	<Graph: EdgeIfc findsEdge(Vertex,Vertex)>/$null0	<Graph: EdgeIfc findsEdge(Vertex,Vertex)>
<Vertex: Vertex getEnd()>/return/instruction2	2	<Vertex: Vertex getEnd()>/$null0	<Vertex: Vertex getEnd()>
<Graph: Graph prim(Vertex)>/invoke/instruction76	76	<Graph: Graph prim(Vertex)>/$null2	<Graph: Graph prim(Vertex)>
<Graph: EdgeIter getEdges()>/invoke/instruction4	4	<Graph: EdgeIter getEdges()>/$null0	<Graph: EdgeIter getEdges()>
<Graph: Graph prim(Vertex)>/assign/instruction17	17	<Graph: Graph prim(Vertex)>/$null1	<Graph: Graph prim(Vertex)>
<Graph: Graph prim(Vertex)>/assign/instruction7	7	<Graph: Graph prim(Vertex)>/$null0	<Graph: Graph prim(Vertex)>
<Graph: Graph strongComponents()>/invoke/instruction8	8	<Graph: Graph strongComponents()>/$null0	<Graph: Graph strongComponents()>

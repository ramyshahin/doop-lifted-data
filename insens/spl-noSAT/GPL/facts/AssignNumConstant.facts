<Graph: Graph prim(Vertex)>/assign/instruction15	15	0	<Graph: Graph prim(Vertex)>/$numconstant1	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph: void <init>()>/assign/instruction3	3	1	<Graph: void <init>()>/$numconstant0	<Graph: void <init>()>	@EdgeObjects
<Graph: Graph prim(Vertex)>/assign/instruction55	55	0	<Graph: Graph prim(Vertex)>/isNeighborInQueue_$$A_3#_587	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph: void <clinit>()>/assign/instruction1	1	0L	<Graph: void <clinit>()>/$numconstant0	<Graph: void <clinit>()>	@Benchmark
<CycleWorkSpace: void <init>()>/assign/instruction5	5	0	<CycleWorkSpace: void <init>()>/$numconstant1	<CycleWorkSpace: void <init>()>	@Cycle
<CycleWorkSpace: void postVisitAction(Vertex)>/assign/instruction3	3	2	<CycleWorkSpace: void postVisitAction(Vertex)>/$numconstant0	<CycleWorkSpace: void postVisitAction(Vertex)>	@(Cycle) /\ (Cycle)
<Main: void main(java.lang.String[])>/assign/instruction12	12	0	<Main: void main(java.lang.String[])>/num_edges#_27	<Main: void main(java.lang.String[])>	@(Prog) /\ (Prog)
<Main: void main(java.lang.String[])>/assign/instruction11	11	0	<Main: void main(java.lang.String[])>/num_vertices_$$A_1#_26	<Main: void main(java.lang.String[])>	@(Prog) /\ (Prog)
<EdgeIter: boolean hasNext()>/return/instruction2	2	0	<EdgeIter: boolean hasNext()>/$numconstant0	<EdgeIter: boolean hasNext()>
<Vertex: void <init>()>/assign/instruction17	17	0	<Vertex: void <init>()>/$numconstant0	<Vertex: void <init>()>	@SearchBase
<Graph: Graph kruskal()>/assign/instruction70	70	0	<Graph: Graph kruskal()>/j_$$A_4#_460	<Graph: Graph kruskal()>	@MSTKruskal
<Graph: Graph kruskal()>/assign/instruction127	127	0	<Graph: Graph kruskal()>/i#_497	<Graph: Graph kruskal()>	@MSTKruskal
<Graph: Graph prim(Vertex)>/assign/instruction9	9	2147483647	<Graph: Graph prim(Vertex)>/$numconstant0	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph: Graph computeTranspose(Graph)>/invoke/instruction34	34	0	<Graph: Graph computeTranspose(Graph)>/$numconstant0	<Graph: Graph computeTranspose(Graph)>	@(Transpose) /\ (Transpose)
<Vertex: void display()>/assign/instruction5	5	0	<Vertex: void display()>/vxiter#_259	<Vertex: void display()>	@Weighted /\ G_NoEdges
<Graph: Graph prim(Vertex)>/assign/instruction126	126	0	<Graph: Graph prim(Vertex)>/$numconstant2	<Graph: Graph prim(Vertex)>	@MSTPrim
<Main: void main(java.lang.String[])>/assign/instruction36	36	0	<Main: void main(java.lang.String[])>/i_$$A_2#_44	<Main: void main(java.lang.String[])>	@(Prog) /\ (Prog)
<Graph: void <clinit>()>/assign/instruction3	3	0L	<Graph: void <clinit>()>/$numconstant1	<Graph: void <clinit>()>	@Benchmark
<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>/return/instruction14	14	1	<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>/$numconstant2	<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>	@(MSTKruskal) /\ (MSTKruskal)
<CycleWorkSpace: void preVisitAction(Vertex)>/assign/instruction9	9	1	<CycleWorkSpace: void preVisitAction(Vertex)>/$numconstant0	<CycleWorkSpace: void preVisitAction(Vertex)>	@Cycle
<RegionWorkSpace: void init_vertex(Vertex)>/assign/instruction3	3	-1	<RegionWorkSpace: void init_vertex(Vertex)>/$numconstant0	<RegionWorkSpace: void init_vertex(Vertex)>	@(Connected) /\ (Connected)
<Graph: void display()>/assign/instruction8	8	0	<Graph: void display()>/edgeiter#_173	<Graph: void display()>
<Main: void main(java.lang.String[])>/assign/instruction55	55	0	<Main: void main(java.lang.String[])>/i_$$A_2_$$A_3#_51	<Main: void main(java.lang.String[])>	@(Prog) /\ (Prog)
<Graph: Graph prim(Vertex)>/assign/instruction48	48	0	<Graph: Graph prim(Vertex)>/vxiter_$$A_2_$$A_1#_579	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph: int readNumber()>/assign/instruction2	2	0	<Graph: int readNumber()>/index#_207	<Graph: int readNumber()>	@(Benchmark) /\ (Benchmark)
<Graph: Graph kruskal()>/assign/instruction43	43	0	<Graph: Graph kruskal()>/j_$$A_1_$$A_1#_448	<Graph: Graph kruskal()>	@MSTKruskal
<Vertex: int getWeight()>/return/instruction2	2	0	<Vertex: int getWeight()>/$numconstant0	<Vertex: int getWeight()>	@(G_NoEdges) /\ (G_NoEdges)
<Graph$Comparator1: int compare(Vertex,Vertex)>/return/instruction12	12	0	<Graph$Comparator1: int compare(Vertex,Vertex)>/$numconstant1	<Graph$Comparator1: int compare(Vertex,Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<CycleWorkSpace: void <init>()>/assign/instruction3	3	0	<CycleWorkSpace: void <init>()>/$numconstant0	<CycleWorkSpace: void <init>()>	@Cycle
<Vertex: void init_vertex(WorkSpace)>/assign/instruction3	3	0	<Vertex: void init_vertex(WorkSpace)>/$numconstant0	<Vertex: void init_vertex(WorkSpace)>	@(SearchBase) /\ (SearchBase)
<NumberWorkSpace: void <init>()>/assign/instruction3	3	0	<NumberWorkSpace: void <init>()>/$numconstant0	<NumberWorkSpace: void <init>()>	@Number
<Graph: void <clinit>()>/assign/instruction5	5	0L	<Graph: void <clinit>()>/$numconstant2	<Graph: void <clinit>()>	@Benchmark
<CycleWorkSpace: void init_vertex(Vertex)>/assign/instruction5	5	0	<CycleWorkSpace: void init_vertex(Vertex)>/$numconstant1	<CycleWorkSpace: void init_vertex(Vertex)>	@(Cycle) /\ (Cycle)
<Vertex: void nodeSearch(WorkSpace)>/assign/instruction7	7	1	<Vertex: void nodeSearch(WorkSpace)>/$numconstant0	<Vertex: void nodeSearch(WorkSpace)>	@SearchBase
<Graph: int readNumber()>/assign/instruction4	4	0	<Graph: int readNumber()>/ch#_209	<Graph: int readNumber()>	@(Benchmark) /\ (Benchmark)
<Graph: Graph prim(Vertex)>/assign/instruction41	41	0	<Graph: Graph prim(Vertex)>/isNeighborInQueue#_565	<Graph: Graph prim(Vertex)>	@MSTPrim
<CycleWorkSpace: void init_vertex(Vertex)>/assign/instruction3	3	2147483647	<CycleWorkSpace: void init_vertex(Vertex)>/$numconstant0	<CycleWorkSpace: void init_vertex(Vertex)>	@(Cycle) /\ (Cycle)
<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/assign/instruction8	8	1	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/$numconstant0	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>	@Cycle /\ Directed
<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>/return/instruction12	12	0	<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>/$numconstant1	<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>	@(MSTKruskal) /\ (MSTKruskal)
<Graph$Comparator2: int compare(Vertex,Vertex)>/return/instruction14	14	1	<Graph$Comparator2: int compare(Vertex,Vertex)>/$numconstant2	<Graph$Comparator2: int compare(Vertex,Vertex)>	@(MSTPrim) /\ (MSTPrim)
<Graph$Comparator1: int compare(Vertex,Vertex)>/return/instruction7	7	-1	<Graph$Comparator1: int compare(Vertex,Vertex)>/$numconstant0	<Graph$Comparator1: int compare(Vertex,Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>/return/instruction7	7	-1	<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>/$numconstant0	<Graph$Comparator3: int compare(EdgeIfc,EdgeIfc)>	@(MSTKruskal) /\ (MSTKruskal)
<Main: void main(java.lang.String[])>/assign/instruction79	79	0	<Main: void main(java.lang.String[])>/i_$$A_2_$$A_6#_67	<Main: void main(java.lang.String[])>	@(Prog) /\ (Prog)
<Main: EdgeIfc addEdge(Graph,int)>/assign/instruction12	12	0	<Main: EdgeIfc addEdge(Graph,int)>/$numconstant0	<Main: EdgeIfc addEdge(Graph,int)>	@(Prog) /\ (Prog)
<Graph$Comparator1: int compare(Vertex,Vertex)>/return/instruction14	14	1	<Graph$Comparator1: int compare(Vertex,Vertex)>/$numconstant2	<Graph$Comparator1: int compare(Vertex,Vertex)>	@(StronglyConnected) /\ (StronglyConnected)
<Main: void main(java.lang.String[])>/assign/instruction35	35	0	<Main: void main(java.lang.String[])>/i_$$A_1#_43	<Main: void main(java.lang.String[])>	@(Prog) /\ (Prog)
<Graph: int readNumber()>/assign/instruction27	27	0	<Graph: int readNumber()>/$numconstant0	<Graph: int readNumber()>	@(Benchmark) /\ (Benchmark)
<Graph: void startProfile()>/assign/instruction1	1	0L	<Graph: void startProfile()>/$numconstant0	<Graph: void startProfile()>	@(Benchmark) /\ (Benchmark)
<FinishTimeWorkSpace: void <init>()>/assign/instruction3	3	1	<FinishTimeWorkSpace: void <init>()>/$numconstant0	<FinishTimeWorkSpace: void <init>()>	@StronglyConnected
<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/assign/instruction18	18	1	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>/$numconstant1	<CycleWorkSpace: void checkNeighborAction(Vertex,Vertex)>	@Cycle /\ Undirected
<WorkSpaceTranspose: void <init>()>/assign/instruction3	3	0	<WorkSpaceTranspose: void <init>()>/$numconstant0	<WorkSpaceTranspose: void <init>()>	@StronglyConnected
<RegionWorkSpace: void <init>()>/assign/instruction3	3	0	<RegionWorkSpace: void <init>()>/$numconstant0	<RegionWorkSpace: void <init>()>	@Connected
<Vertex: void nodeSearch(WorkSpace)>/invoke/instruction37	37	0	<Vertex: void nodeSearch(WorkSpace)>/$numconstant1	<Vertex: void nodeSearch(WorkSpace)>	@SearchBase /\ BFS
<Graph$Comparator2: int compare(Vertex,Vertex)>/return/instruction7	7	-1	<Graph$Comparator2: int compare(Vertex,Vertex)>/$numconstant0	<Graph$Comparator2: int compare(Vertex,Vertex)>	@(MSTPrim) /\ (MSTPrim)
<Graph: Graph prim(Vertex)>/assign/instruction59	59	1	<Graph: Graph prim(Vertex)>/isNeighborInQueue_$$A_4#_591	<Graph: Graph prim(Vertex)>	@MSTPrim
<Graph$Comparator2: int compare(Vertex,Vertex)>/return/instruction12	12	0	<Graph$Comparator2: int compare(Vertex,Vertex)>/$numconstant1	<Graph$Comparator2: int compare(Vertex,Vertex)>	@(MSTPrim) /\ (MSTPrim)

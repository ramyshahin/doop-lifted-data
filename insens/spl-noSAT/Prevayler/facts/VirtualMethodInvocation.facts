<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/1	13	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	8	<org.prevayler.foundation.serialization.Serializer: void writeObject(java.io.OutputStream,java.lang.Object)>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/$r1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.prepare/0	11	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.publishing.CentralPublisher.notifySubscribers/0	8	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/this#_0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.labelContainer/1	21	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Clock.time/0	13	<org.prevayler.Clock: java.util.Date time()>	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/$r5	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	4	<org.prevayler.foundation.network.ObjectReceiver: void receive(java.lang.Object)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>/$r0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.name/0	31	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String name()>	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/this#_0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>
<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	3	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/$r0	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.resume/0	31	<org.prevayler.implementation.clock.PausableClock: void resume()>	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$r11	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>
<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	5	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/bank#_0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject.isConsistent/0	15	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/subject#_63	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/java.io.FileInputStream.close/0	32	<java.io.FileInputStream: void close()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/in#_96	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.ObjectReceiver.close/0	9	<org.prevayler.foundation.network.ObjectReceiver: void close()>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/$r0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountEditFrame.setBounds/0	21	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>/org.prevayler.implementation.TransactionWithQueryCapsule.result/0	8	<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>/capsule#_144	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.Prevayler.execute/0	8	<org.prevayler.Prevayler: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/$r3	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>
<org.prevayler.implementation.replication.ServerConnection: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.cancelSubscription/0	6	<org.prevayler.implementation.publishing.TransactionPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>	<org.prevayler.implementation.replication.ServerConnection: void close()>/$r1	<org.prevayler.implementation.replication.ServerConnection: void close()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornNetworkProxy: void openClientChannel()>/java.lang.Object.notify/0	2	<java.lang.Object: void notify()>	<org.prevayler.foundation.network.StubbornNetworkProxy: void openClientChannel()>/this#_0	<org.prevayler.foundation.network.StubbornNetworkProxy: void openClientChannel()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.PrevaylerDirectory: void renameUnusedFile(java.io.File)>/java.io.File.renameTo/0	12	<java.io.File: boolean renameTo(java.io.File)>	<org.prevayler.implementation.PrevaylerDirectory: void renameUnusedFile(java.io.File)>/journalFile#_0	<org.prevayler.implementation.PrevaylerDirectory: void renameUnusedFile(java.io.File)>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.SessionsManager.add/0	11	<org.prevayler.foundation.network.SessionsManager: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/$r4	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.StubbornNetworkProxy.setClient/0	9	<org.prevayler.foundation.network.StubbornNetworkProxy: void setClient(org.prevayler.foundation.network.ObjectReceiver)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/proxy#_84	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.nextTransaction/0	18	<org.prevayler.implementation.journal.Journal: long nextTransaction()>	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$r4	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	40	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/nextFile#_213	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.insert/0	5	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.deserialize/0	5	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/this#_0	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.create/0	18	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/factory#_43	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/java.io.OutputStream.close/1	14	<java.io.OutputStream: void close()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/out#_77	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.demos.demo2.business.Account.number/1	7	<org.prevayler.demos.demo2.business.Account: long number()>	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$r1	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/2	26	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	14	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/$r2	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	14	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/factory#_16	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.gap/0	4	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>/org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject.createConnection/0	3	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>
<org.prevayler.foundation.network.StubbornNetworkProxy: void waitTillOpen()>/java.lang.Object.wait/0	2	<java.lang.Object: void wait()>	<org.prevayler.foundation.network.StubbornNetworkProxy: void waitTillOpen()>/this#_0	<org.prevayler.foundation.network.StubbornNetworkProxy: void waitTillOpen()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	49	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/nextFile#_213	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	4	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/transactionTimestamp#_0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>	@(Censor) /\ (Censor)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/1	21	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.justExecute/0	8	<org.prevayler.implementation.Capsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/this#_0	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	4	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/transactionTimestamp#_0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/java.lang.Object.notify/0	11	<java.lang.Object: void notify()>	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/this#_0	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>
<org.prevayler.implementation.replication.ServerListener: void run()>/java.io.IOException.printStackTrace/0	10	<java.io.IOException: void printStackTrace()>	<org.prevayler.implementation.replication.ServerListener: void run()>/iox#_33	<org.prevayler.implementation.replication.ServerListener: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/org.prevayler.Prevayler.execute/0	14	<org.prevayler.Prevayler: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/$r4	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>/org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream.write/0	4	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>/this#_0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@(GZip) /\ (GZip)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.labelContainer/0	6	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>/org.prevayler.implementation.PrevalentSystemGuard.prevalentSystem/0	3	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>/$r0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@(Snapshot) /\ (Snapshot)
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.create/0	12	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/factory#_133	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/org.prevayler.implementation.PrevaylerDirectory.createTempFile/0	11	<org.prevayler.implementation.PrevaylerDirectory: java.io.File createTempFile(java.lang.String,java.lang.String)>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/$r1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.clock.PausableClock.advanceTo/0	6	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/$r0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.next/0	6	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/newRecords#_0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	11	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/factory#_13	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.journal.PersistentJournal.handle/1	52	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/this#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	4	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/$r0	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>
<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/java.util.Set.add/0	4	<java.util.Set: boolean add(java.lang.Object)>	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/$r0	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>
<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	2	<java.lang.Object: void wait()>	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/object#_0	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate1/0	25	<org.prevayler.demos.scalability.Record: java.util.Date getDate1()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configureTransientMode/0	8	<org.prevayler.PrevaylerFactory: void configureTransientMode(boolean)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/factory#_173	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>	@Snapshot
<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/org.prevayler.implementation.replication.ServerConnection.setDaemon/0	9	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/this#_0	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>	@Replication
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.prepare/0	43	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/this#_0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountDeleted(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.removeAccountListener/0	3	<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountDeleted(org.prevayler.demos.demo2.business.Account)>/a#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountDeleted(org.prevayler.demos.demo2.business.Account)>
<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.replication.ServerConnection.publishRemoteTransaction/0	15	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>	<org.prevayler.implementation.replication.ServerConnection: void run()>/this#_0	<org.prevayler.implementation.replication.ServerConnection: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.QueryConnection.queryByName/0	11	<org.prevayler.demos.scalability.QueryConnection: java.util.List queryByName(java.lang.String)>	<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>/$r1	<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>
<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/com.thoughtworks.xstream.XStream.toXML/0	16	<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/$r2	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/1	24	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/$r4	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/java.lang.Thread.start/0	9	<java.lang.Thread: void start()>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/reader#_45	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/java.util.Map.put/0	13	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/$r2	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	33	<java.lang.Object: void notifyAll()>	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$r12	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Bank.accounts/0	8	<org.prevayler.demos.demo2.business.Bank: java.util.List accounts()>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/bank#_80	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	34	<org.prevayler.demos.scalability.Record: long getId()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.business.transactions.Withdrawal: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/org.prevayler.demos.demo2.business.Account.withdraw/0	5	<org.prevayler.demos.demo2.business.Account: void withdraw(long,java.util.Date)>	<org.prevayler.demos.demo2.business.transactions.Withdrawal: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/account#_0	<org.prevayler.demos.demo2.business.transactions.Withdrawal: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/0	28	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r10	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notifyAll/1	48	<java.lang.Object: void notifyAll()>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/this#_0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/org.prevayler.foundation.StopWatch.millisEllapsed/0	2	<org.prevayler.foundation.StopWatch: long millisEllapsed()>	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/this#_0	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>
<org.prevayler.demos.demo2.business.transactions.AccountDeletion: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.deleteAccount/0	5	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/bank#_0	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/org.prevayler.foundation.gzip.ContinuableGZIPInputStream.remainingInput/0	10	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/$r2	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>	@(GZip) /\ (GZip)
<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>/org.prevayler.foundation.serialization.SkaringaSerializer.createTransformer/0	3	<org.prevayler.foundation.serialization.SkaringaSerializer: com.skaringa.javaxml.ObjectTransformer createTransformer()>	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>/this#_0	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/org.prevayler.foundation.network.SessionsManager.find/0	4	<org.prevayler.foundation.network.SessionsManager: org.prevayler.foundation.network.StubbornNetworkProxy find(org.prevayler.foundation.network.NetworkSessionId)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/$r0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/java.lang.Exception.printStackTrace/0	10	<java.lang.Exception: void printStackTrace()>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/ex#_51	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>	@(Censor) /\ (Censor)
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Query.query/0	17	<org.prevayler.Query: java.lang.Object query(java.lang.Object,java.util.Date)>	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/sensitiveQuery#_0	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>
<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.createAccount/0	5	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>	<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/bank#_0	<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	3	<java.lang.Thread: void interrupt()>	<org.prevayler.implementation.replication.ServerConnection: void close()>/$r0	<org.prevayler.implementation.replication.ServerConnection: void close()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.ObjectReceiver.close/0	9	<org.prevayler.foundation.network.ObjectReceiver: void close()>	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/$r2	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>	@Replication
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/0	3	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/0	5	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/javax.swing.JPanel.add/0	10	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/result#_69	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>
<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>/org.prevayler.implementation.TransactionWithQueryCapsule.serialized/0	3	<org.prevayler.implementation.Capsule: byte[] serialized()>	<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>/this#_0	<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/1	8	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/2	28	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/$r7	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>/org.prevayler.demos.scalability.prevayler.QuerySystem.queryByName/0	4	<org.prevayler.demos.scalability.prevayler.QuerySystem: java.util.List queryByName(java.lang.String)>	<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>/$r0	<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/1	14	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/buttonPanel#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>
<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>/org.prevayler.foundation.monitor.Monitor.notify/0	7	<org.prevayler.foundation.monitor.Monitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>/$r0	<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>	@Monitor
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/1	9	<java.sql.PreparedStatement: void setString(int,java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r2	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>/java.lang.Thread.setDaemon/0	5	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>/clockRefresher#_34	<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/org.prevayler.implementation.PrevaylerImpl.clock/0	4	<org.prevayler.implementation.PrevaylerImpl: org.prevayler.Clock clock()>	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/this#_0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.table/0	7	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/javax.swing.JTextField.setText/0	5	<javax.swing.JTextField: void setText(java.lang.String)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r1	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThread(long,int)>/org.prevayler.demos.scalability.ScalabilityTestRun$1.start/0	6	<java.lang.Thread: void start()>	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThread(long,int)>/$r0	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThread(long,int)>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/4	34	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r9	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.clock.BrokenClock.advanceTo/1	39	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/java.io.PrintStream.println/0	16	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/$r3	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>	@Replication
<org.prevayler.foundation.Turn: void alwaysSkip()>/org.prevayler.foundation.Turn.next/0	5	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>	<org.prevayler.foundation.Turn: void alwaysSkip()>/this#_0	<org.prevayler.foundation.Turn: void alwaysSkip()>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/java.awt.Container.add/0	33	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/$r9	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/1	16	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.JTextField.setEnabled/0	28	<javax.swing.JTextField: void setEnabled(boolean)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/$r14	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/java.io.ObjectOutputStream.reset/0	6	<java.io.ObjectOutputStream: void reset()>	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/$r1	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@Replication
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.capsule/0	3	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/transactionTimestamp#_0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.resume/1	49	<org.prevayler.implementation.clock.PausableClock: void resume()>	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$r2	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>
<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	8	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()>	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/$r0	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>	@Snapshot
<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/java.lang.Exception.printStackTrace/0	10	<java.lang.Exception: void printStackTrace()>	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/ex#_22	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>
<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.NewAccountFrame.dispose/0	10	<javax.swing.JInternalFrame: void dispose()>	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/$r6	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.prepare/0	19	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>
<org.prevayler.implementation.PrevaylerImpl: void takeSnapshot()>/org.prevayler.implementation.PrevalentSystemGuard.takeSnapshot/0	4	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>	<org.prevayler.implementation.PrevaylerImpl: void takeSnapshot()>/$r1	<org.prevayler.implementation.PrevaylerImpl: void takeSnapshot()>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Clock.time/0	16	<org.prevayler.Clock: java.util.Date time()>	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/clock#_0	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>
<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/java.io.IOException.printStackTrace/0	18	<java.io.IOException: void printStackTrace()>	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/iox#_82	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.lang.Exception.printStackTrace/0	12	<java.lang.Exception: void printStackTrace()>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/ex#_19	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.getResult/0	50	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String getResult()>	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/this#_0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>
<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.io.ObjectInputStream.close/0	5	<java.io.ObjectInputStream: void close()>	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/$r1	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.endTurn/0	8	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/guide#_0	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>
<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	3	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>	<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>/$r0	<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>
<org.prevayler.foundation.Guided: void startTurn()>/org.prevayler.foundation.Turn.start/0	3	<org.prevayler.foundation.Turn: void start()>	<org.prevayler.foundation.Guided: void startTurn()>/$r0	<org.prevayler.foundation.Guided: void startTurn()>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void wakeUpSleepingClient()>/java.lang.Object.notify/0	4	<java.lang.Object: void notify()>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void wakeUpSleepingClient()>/this#_0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void wakeUpSleepingClient()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/org.prevayler.Prevayler.prevalentSystem/0	3	<org.prevayler.Prevayler: java.lang.Object prevalentSystem()>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/$r0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal1/0	16	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal1()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/0	8	<org.prevayler.foundation.Chunk: byte[] getBytes()>	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/java.lang.Object.wait/0	4	<java.lang.Object: void wait()>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/this#_0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void dealWithSQLException(java.sql.SQLException,java.lang.String)>/java.sql.SQLException.printStackTrace/0	3	<java.sql.SQLException: void printStackTrace()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void dealWithSQLException(java.sql.SQLException,java.lang.String)>/sqlx#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void dealWithSQLException(java.sql.SQLException,java.lang.String)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/javax.swing.table.DefaultTableModel.setRowCount/0	3	<javax.swing.table.DefaultTableModel: void setRowCount(int)>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$r0	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/java.awt.Container.setLayout/0	12	<java.awt.Container: void setLayout(java.awt.LayoutManager)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/$r0	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>/org.prevayler.Prevayler.prevalentSystem/0	4	<org.prevayler.Prevayler: java.lang.Object prevalentSystem()>	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>/$r1	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/java.lang.Thread.setName/0	5	<java.lang.Thread: void setName(java.lang.String)>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/reader#_45	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void <init>(org.prevayler.demos.demo2.gui.AllAccountsFrame,java.lang.String)>/javax.swing.JList.addListSelectionListener/0	8	<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void <init>(org.prevayler.demos.demo2.gui.AllAccountsFrame,java.lang.String)>/$r0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void <init>(org.prevayler.demos.demo2.gui.AllAccountsFrame,java.lang.String)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/java.io.PrintStream.println/0	27	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/out#_0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/5	31	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/java.io.PrintStream.println/0	53	<java.io.PrintStream: void println(java.lang.Object)>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$r15	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Account.transactionHistory/0	41	<org.prevayler.demos.demo2.business.Account: java.util.List transactionHistory()>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/matchedAccount#_98	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.capsule/0	40	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/clockTick_$$A_2#_129	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.PrevalentSystemGuard.receive/0	7	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/royalFoodTaster#_28	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>	@(Censor) /\ (Censor)
<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>/java.io.OutputStream.write/0	4	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>/$r0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@(GZip) /\ (GZip)
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/org.prevayler.demos.demo2.business.BankListener.accountCreated/0	17	<org.prevayler.demos.demo2.business.BankListener: void accountCreated(org.prevayler.demos.demo2.business.Account)>	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/$r5	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void <init>(org.prevayler.foundation.network.ObjectSocket,org.prevayler.foundation.network.Service)>/org.prevayler.foundation.network.Service.serverFor/0	6	<org.prevayler.foundation.network.Service: org.prevayler.foundation.network.ObjectReceiver serverFor(org.prevayler.foundation.network.ObjectReceiver)>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void <init>(org.prevayler.foundation.network.ObjectSocket,org.prevayler.foundation.network.Service)>/service#_0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void <init>(org.prevayler.foundation.network.ObjectSocket,org.prevayler.foundation.network.Service)>	@Replication
<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setBackground/0	21	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>
<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	14	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/factory#_13	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	68	<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/subscriber#_0	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/org.prevayler.foundation.network.OldNetwork.openSocket/0	18	<org.prevayler.foundation.network.OldNetwork: org.prevayler.foundation.network.ObjectSocket openSocket(java.lang.String,int)>	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/network#_0	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>	@Replication
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/5	52	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/2	59	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.PrevaylerDirectory.journalFile/0	71	<org.prevayler.implementation.PrevaylerDirectory: java.io.File journalFile(long,java.lang.String)>	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$r20	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.Prevayler.execute/0	21	<org.prevayler.Prevayler: void execute(org.prevayler.Transaction)>	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$r3	<org.prevayler.demos.demo1.PrimeCalculator: void start()>
<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setContentPane/0	11	<javax.swing.JFrame: void setContentPane(java.awt.Container)>	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>/org.prevayler.demos.scalability.jdbc.JDBCQuerySubject.createConnection/0	3	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>	<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/javax.swing.JPanel.add/2	22	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/result#_69	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.holder/0	4	<org.prevayler.demos.demo2.business.Account: java.lang.String holder()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	63	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/entry#_46	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.info/0	6	<org.prevayler.foundation.monitor.LoggingMonitor: void info(java.lang.Class,java.lang.String)>	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/this#_0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>	@Monitor
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/1	6	<org.prevayler.foundation.Chunk: java.lang.String getParameter(java.lang.String)>	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.info/0	13	<org.prevayler.foundation.monitor.LoggingMonitor: void info(java.lang.Class,java.lang.String)>	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/this#_0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>	@Monitor
<org.prevayler.demos.scalability.Main: void out(java.lang.Object)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.Object)>	<org.prevayler.demos.scalability.Main: void out(java.lang.Object)>/$r0	<org.prevayler.demos.scalability.Main: void out(java.lang.Object)>
<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.foundation.network.OldNetwork.openObjectServerSocket/0	6	<org.prevayler.foundation.network.OldNetwork: org.prevayler.foundation.network.ObjectServerSocket openObjectServerSocket(int)>	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/network#_0	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>	@Replication
<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/java.io.OutputStreamWriter.flush/0	17	<java.io.OutputStreamWriter: void flush()>	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/writer#_58	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/java.util.Set.remove/0	4	<java.util.Set: boolean remove(java.lang.Object)>	<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/$r0	<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>
<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setContentPane/0	9	<javax.swing.JInternalFrame: void setContentPane(java.awt.Container)>	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>
<org.prevayler.foundation.DeepCopier$Receiver: void <init>(java.io.InputStream,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.DeepCopier$Receiver.start/0	7	<java.lang.Thread: void start()>	<org.prevayler.foundation.DeepCopier$Receiver: void <init>(java.io.InputStream,org.prevayler.foundation.serialization.Serializer)>/this#_0	<org.prevayler.foundation.DeepCopier$Receiver: void <init>(java.io.InputStream,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.demo2.MainReplicaServer: void out(java.lang.String)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo2.MainReplicaServer: void out(java.lang.String)>/$r0	<org.prevayler.demos.demo2.MainReplicaServer: void out(java.lang.String)>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	6	<org.prevayler.foundation.network.ObjectReceiver: void receive(java.lang.Object)>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/$r0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.replaceAllRecords/0	5	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>/$r1	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/org.prevayler.foundation.network.StubbornNetworkProxy.connect/0	18	<org.prevayler.foundation.network.StubbornNetworkProxy: void connect(org.prevayler.foundation.network.ObjectReceiver,org.prevayler.foundation.network.StubbornNetworkClientConnector)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/$r3	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo1.Main: void printMessage()>/java.io.PrintStream.println/0	2	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo1.Main: void printMessage()>/$r0	<org.prevayler.demos.demo1.Main: void printMessage()>
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.parse/0	6	<org.prevayler.demos.demo2.gui.AccountFrame: long parse(java.lang.String)>	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r1	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>
<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/org.prevayler.implementation.journal.PersistentJournal.handle/0	11	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/this#_0	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/1	45	<org.prevayler.foundation.Guided: void startTurn()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.DeepCopier$Receiver.getResult/0	19	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/receiver#_51	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.lastNumber/0	5	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$r0	<org.prevayler.demos.demo1.PrimeCalculator: void start()>
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notifyAll/0	39	<java.lang.Object: void notifyAll()>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/this#_0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/6	54	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/3	64	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/4	23	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.table/0	29	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/java.io.OutputStream.flush/0	9	<java.io.OutputStream: void flush()>	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/$r1	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>	@(GZip) /\ (GZip)
<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/java.io.ObjectOutputStream.writeObject/0	7	<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/objects#_27	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>/java.util.HashMap.put/0	11	<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>/$r1	<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>	@(Replication) /\ (Replication)
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.File.mkdirs/0	17	<java.io.File: boolean mkdirs()>	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r5	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.Clock.time/0	11	<org.prevayler.Clock: java.util.Date time()>	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r6	<org.prevayler.implementation.replication.ServerConnection$1: void run()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.foundation.DurableInputStream.readChunk/0	20	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/input_$$A_1#_197	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/org.prevayler.implementation.PrevalentSystemGuard.deepCopy/0	5	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/$r1	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>	@(Censor) /\ (Censor)
<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	9	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/factory#_20	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>/org.prevayler.foundation.monitor.LoggingMonitor.error/0	12	<org.prevayler.foundation.monitor.LoggingMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>/this#_0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@(Monitor) /\ (Monitor)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/1	34	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Account.balance/0	37	<org.prevayler.demos.demo2.business.Account: long balance()>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/matchedAccount#_98	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	15	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/factory#_13	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.publishing.AbstractPublisher: void addSubscriber(org.prevayler.implementation.publishing.TransactionSubscriber)>/java.util.List.add/0	4	<java.util.List: boolean add(java.lang.Object)>	<org.prevayler.implementation.publishing.AbstractPublisher: void addSubscriber(org.prevayler.implementation.publishing.TransactionSubscriber)>/$r0	<org.prevayler.implementation.publishing.AbstractPublisher: void addSubscriber(org.prevayler.implementation.publishing.TransactionSubscriber)>
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.realTime/0	9	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/$r2	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.holderText/0	4	<org.prevayler.demos.demo2.gui.AccountFrame: java.lang.String holderText()>	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r0	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.File.createNewFile/0	19	<java.io.File: boolean createNewFile()>	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r6	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>
<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.io.PrintStream.println/0	11	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/$r1	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	@(Monitor) /\ (Monitor)
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/7	33	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.foundation.Turn: void end()>/org.prevayler.foundation.Turn.next/0	2	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>	<org.prevayler.foundation.Turn: void end()>/this#_0	<org.prevayler.foundation.Turn: void end()>
<org.prevayler.foundation.FileLocker: void release()>/java.io.RandomAccessFile.close/1	11	<java.io.RandomAccessFile: void close()>	<org.prevayler.foundation.FileLocker: void release()>/$r1	<org.prevayler.foundation.FileLocker: void release()>
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.foundation.Turn.next/0	16	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/$r5	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void forwardToProvider(java.lang.Object)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	4	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void forwardToProvider(java.lang.Object)>/$r0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void forwardToProvider(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	4	<org.prevayler.foundation.network.ObjectReceiver: void receive(java.lang.Object)>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/$r0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>/org.prevayler.foundation.monitor.Monitor.notify/0	13	<org.prevayler.foundation.monitor.Monitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>/$r3	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>	@Monitor
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.pause/0	9	<org.prevayler.implementation.clock.PausableClock: void pause()>	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$r4	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.configureTransientMode/0	10	<org.prevayler.PrevaylerFactory: void configureTransientMode(boolean)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/factory#_133	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>	@Snapshot
<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/com.skaringa.javaxml.ObjectTransformer.serialize/0	7	<com.skaringa.javaxml.ObjectTransformer: void serialize(java.lang.Object,javax.xml.transform.Result)>	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/$r0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
<org.prevayler.implementation.clock.PausableClock: void <init>(org.prevayler.Clock)>/org.prevayler.implementation.clock.PausableClock.resume/0	8	<org.prevayler.implementation.clock.PausableClock: void resume()>	<org.prevayler.implementation.clock.PausableClock: void <init>(org.prevayler.Clock)>/this#_0	<org.prevayler.implementation.clock.PausableClock: void <init>(org.prevayler.Clock)>
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/org.prevayler.foundation.network.NetworkServerObjectReceiverImpl.setDaemon/0	13	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/this#_0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>	@Replication
<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	8	<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/$r2	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.net.Socket.close/0	7	<java.net.Socket: void close()>	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/$r2	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/1	22	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r3	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.lang.Exception)>/org.prevayler.foundation.monitor.LoggingMonitor.error/0	5	<org.prevayler.foundation.monitor.LoggingMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.lang.Exception)>/this#_0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.lang.Exception)>	@(Monitor) /\ (Monitor)
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/java.util.Map.put/0	11	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/$r2	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>
<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>/java.io.OutputStream.write/0	6	<java.io.OutputStream: void write(byte[],int,int)>	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>/$r0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>	@(GZip) /\ (GZip)
<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.implementation.replication.ServerListener.start/0	11	<java.lang.Thread: void start()>	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/this#_0	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>	@Replication
<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	6	<org.prevayler.foundation.serialization.Serializer: java.lang.Object readObject(java.io.InputStream)>	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/journalSerializer#_0	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.demo2.business.transactions.Transfer: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.transfer/0	7	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>	<org.prevayler.demos.demo2.business.transactions.Transfer: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/bank#_0	<org.prevayler.demos.demo2.business.transactions.Transfer: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.lastNumber/1	10	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$r1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>
<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.endTurn/1	10	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/guide#_0	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	46	<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r8	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.create/0	10	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/factory#_173	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.implementation.journal.PersistentJournal: void close()>/org.prevayler.foundation.DurableOutputStream.close/0	5	<org.prevayler.foundation.DurableOutputStream: void close()>	<org.prevayler.implementation.journal.PersistentJournal: void close()>/$r1	<org.prevayler.implementation.journal.PersistentJournal: void close()>
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.create/0	20	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/factory#_15	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>
<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.Clock.time/0	3	<org.prevayler.Clock: java.util.Date time()>	<org.prevayler.implementation.clock.PausableClock: void pause()>/$r0	<org.prevayler.implementation.clock.PausableClock: void pause()>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.balance/0	13	<org.prevayler.demos.demo2.business.Account: long balance()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r7	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/com.thoughtworks.xstream.XStream.alias/1	8	<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/xstream#_21	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.demo2.business.transactions.HolderChange: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/org.prevayler.demos.demo2.business.Account.holder/0	5	<org.prevayler.demos.demo2.business.Account: void holder(java.lang.String)>	<org.prevayler.demos.demo2.business.transactions.HolderChange: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/account#_0	<org.prevayler.demos.demo2.business.transactions.HolderChange: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>
<org.prevayler.foundation.DurableInputStream: void close()>/java.io.InputStream.close/0	3	<java.io.InputStream: void close()>	<org.prevayler.foundation.DurableInputStream: void close()>/$r0	<org.prevayler.foundation.DurableInputStream: void close()>
<org.prevayler.foundation.network.BaseNetworkImpl: void markPortAsUsed(int,org.prevayler.foundation.network.NetworkServerObjectReceiver)>/java.util.Map.put/0	7	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.foundation.network.BaseNetworkImpl: void markPortAsUsed(int,org.prevayler.foundation.network.NetworkServerObjectReceiver)>/$r1	<org.prevayler.foundation.network.BaseNetworkImpl: void markPortAsUsed(int,org.prevayler.foundation.network.NetworkServerObjectReceiver)>	@(Replication) /\ (Replication)
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/org.prevayler.foundation.gzip.MultiMemberGZIPInputStream.read/0	4	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/this#_0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>	@(GZip) /\ (GZip)
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.executionTime/0	5	<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	15	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/factory#_15	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	8	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/newRecords#_0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/org.prevayler.demos.demo2.gui.MatchFrame.setBounds/0	2	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/this#_0	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JTextField.requestFocus/0	42	<javax.swing.JTextField: void requestFocus()>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r13	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.replication.ClientPublisher: void close()>/org.prevayler.foundation.network.ObjectSocket.close/0	3	<org.prevayler.foundation.network.ObjectSocket: void close()>	<org.prevayler.implementation.replication.ClientPublisher: void close()>/$r0	<org.prevayler.implementation.replication.ClientPublisher: void close()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.reportResourcesUsed/0	23	<org.prevayler.demos.scalability.ScalabilityTestSubject: void reportResourcesUsed(java.io.PrintStream)>	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/$r5	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.NetworkClientObjectReceiverImpl.close/0	2	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/this#_0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.transactionHistory/0	8	<org.prevayler.demos.demo2.business.Account: java.util.List transactionHistory()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r3	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.capsule/1	51	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/clockTick_$$A_2#_129	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	3	<org.prevayler.demos.demo2.gui.RobustAction: void action()>	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/this#_0	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.configureTransactionFiltering/0	18	<org.prevayler.PrevaylerFactory: void configureTransactionFiltering(boolean)>	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/factory#_15	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.Capsule.executeOn/0	32	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/capsule#_53	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setBounds/0	22	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.foundation.Chunk.setParameter/0	6	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/chunk#_47	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/java.lang.Thread.setDaemon/0	7	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/reader#_45	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>/java.sql.SQLException.printStackTrace/0	9	<java.sql.SQLException: void printStackTrace()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>/sqlx#_45	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>
<org.prevayler.foundation.network.ObjectServerSocketImpl: void close()>/java.net.ServerSocket.close/0	3	<java.net.ServerSocket: void close()>	<org.prevayler.foundation.network.ObjectServerSocketImpl: void close()>/$r0	<org.prevayler.foundation.network.ObjectServerSocketImpl: void close()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/org.prevayler.foundation.serialization.SkaringaSerializer.createTransformer/0	4	<org.prevayler.foundation.serialization.SkaringaSerializer: com.skaringa.javaxml.ObjectTransformer createTransformer()>	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/this#_0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>/javax.swing.Box.add/1	9	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>/box#_65	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	36	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/clockTick_$$A_2#_129	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	11	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/factory#_16	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.replication.ClientPublisher: void startListening()>/java.lang.Thread.setDaemon/0	5	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.implementation.replication.ClientPublisher: void startListening()>/listener#_45	<org.prevayler.implementation.replication.ClientPublisher: void startListening()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	5	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/transactionTimestamp#_0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	5	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/daemon#_29	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/1	31	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r12	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/org.prevayler.foundation.Turn.next/0	5	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/this#_0	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configureTransactionFiltering/0	16	<org.prevayler.PrevaylerFactory: void configureTransactionFiltering(boolean)>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/factory#_43	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	15	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.file/1	51	<org.prevayler.foundation.DurableOutputStream: java.io.File file()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/outputJournalToClose_$$A_2#_88	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	10	<java.lang.Object: void notify()>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r13	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	31	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/newRecords#_55	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/2	44	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.demos.demo2.MainTransient: void out(java.lang.String)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo2.MainTransient: void out(java.lang.String)>/$r0	<org.prevayler.demos.demo2.MainTransient: void out(java.lang.String)>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.table.DefaultTableModel.setColumnIdentifiers/0	48	<javax.swing.table.DefaultTableModel: void setColumnIdentifiers(java.lang.Object[])>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/$r12	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	9	<org.prevayler.demos.scalability.ScalabilityTestSubject: java.lang.Object createTestConnection()>	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/$r3	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.insert/0	27	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/org.prevayler.demos.demo2.gui.AccountEditFrame.parse/0	8	<org.prevayler.demos.demo2.gui.AccountFrame: long parse(java.lang.String)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	7	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/factory#_112	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/org.prevayler.Clock.time/0	3	<org.prevayler.Clock: java.util.Date time()>	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/$r0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>/java.sql.PreparedStatement.setLong/0	4	<java.sql.PreparedStatement: void setLong(int,long)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>/$r0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>
<org.prevayler.demos.scalability.prevayler.TransactionSystem: java.lang.Object put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	4	<org.prevayler.demos.scalability.Record: long getId()>	<org.prevayler.demos.scalability.prevayler.TransactionSystem: java.lang.Object put(org.prevayler.demos.scalability.Record)>/newRecord#_0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: java.lang.Object put(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.publishing.AbstractPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>/java.util.List.remove/0	4	<java.util.List: boolean remove(java.lang.Object)>	<org.prevayler.implementation.publishing.AbstractPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>/$r0	<org.prevayler.implementation.publishing.AbstractPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	5	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/factory#_133	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevaylerDirectory.produceDirectory/0	31	<org.prevayler.implementation.PrevaylerDirectory: void produceDirectory()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/$r2	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>	@Snapshot
<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/java.util.Map$Entry.setValue/0	11	<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/entry#_51	<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.ByteArrayOutputStream.reset/0	31	<java.io.ByteArrayOutputStream: void reset()>	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$r5	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JList.setSelectionMode/0	12	<javax.swing.JList: void setSelectionMode(int)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/$r1	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>/javax.swing.Box.add/0	7	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>/box#_65	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.JPanel buttonPanel()>/org.prevayler.demos.demo2.gui.AccountFrame.addButtons/0	5	<org.prevayler.demos.demo2.gui.AccountFrame: void addButtons(javax.swing.JPanel)>	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.JPanel buttonPanel()>/this#_0	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.JPanel buttonPanel()>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/3	20	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal1/0	12	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal1()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.MatchFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.MatchFrame.setVisible/0	8	<javax.swing.JInternalFrame: void setVisible(boolean)>	<org.prevayler.demos.demo2.gui.MatchFrame: void <init>(org.prevayler.Prevayler)>/this#_0	<org.prevayler.demos.demo2.gui.MatchFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.sync/0	35	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/myOutputJournal#_92	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.implementation.Capsule.toChunk/0	3	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/$r0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>
<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>/java.awt.Container.add/0	9	<java.awt.Container: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>/$r1	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>
<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/org.prevayler.Clock.time/0	3	<org.prevayler.Clock: java.util.Date time()>	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/$r0	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>/java.sql.PreparedStatement.execute/0	7	<java.sql.PreparedStatement: boolean execute()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>/$r1	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>
<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.publishing.POBox.waitToEmpty/0	11	<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>	<org.prevayler.implementation.replication.ServerConnection: void run()>/poBox#_43	<org.prevayler.implementation.replication.ServerConnection: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.Main: void createPropertiesFile(java.io.File)>/java.io.PrintStream.println/0	61	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.scalability.Main: void createPropertiesFile(java.io.File)>/stream#_106	<org.prevayler.demos.scalability.Main: void createPropertiesFile(java.io.File)>
<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	2	<java.lang.Object: void wait()>	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/monitor#_0	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevalentSystemGuard.subscribeTo/0	12	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/$r3	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>	@Snapshot
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/org.prevayler.Prevayler.execute/0	8	<org.prevayler.Prevayler: void execute(org.prevayler.Transaction)>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/$r1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.cleanCopy/0	3	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/transactionTimestamp#_0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>	@(Censor) /\ (Censor)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.JList.setEnabled/0	13	<javax.swing.JList: void setEnabled(boolean)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/$r5	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/org.prevayler.Prevayler.prevalentSystem/1	7	<org.prevayler.Prevayler: java.lang.Object prevalentSystem()>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/$r2	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>
<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>/org.prevayler.implementation.clock.BrokenClock.advanceTo/0	4	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>/$r0	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/1	35	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r13	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.gap/1	24	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.timestamp/0	17	<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp timestamp()>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/org.prevayler.foundation.network.ObjectReceiver.close/0	3	<org.prevayler.foundation.network.ObjectReceiver: void close()>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/$r0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate2/0	28	<org.prevayler.demos.scalability.Record: java.util.Date getDate2()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.execute/0	38	<java.sql.PreparedStatement: boolean execute()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r15	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.setBackground/0	19	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	3	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/this#_0	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.gap/1	19	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	7	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/factory#_173	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	7	<org.prevayler.implementation.publishing.TransactionPublisher: org.prevayler.Clock clock()>	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/$r0	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	19	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/factory#_32	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/org.prevayler.Prevayler.execute/0	6	<org.prevayler.Prevayler: void execute(org.prevayler.Transaction)>	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/$r1	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	11	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.JPanel.add/0	31	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/buttonPanel#_58	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/5	25	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.Prevayler.prevalentSystem/0	6	<org.prevayler.Prevayler: java.lang.Object prevalentSystem()>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$r1	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void <init>(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.number/0	4	<org.prevayler.demos.demo2.business.Account: long number()>	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void <init>(org.prevayler.demos.demo2.business.Account)>/account#_0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void <init>(org.prevayler.demos.demo2.business.Account)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void refreshAccounts()>/javax.swing.JList.setListData/0	5	<javax.swing.JList: void setListData(java.lang.Object[])>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void refreshAccounts()>/$r0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void refreshAccounts()>
<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>/org.prevayler.implementation.TransactionTimestamp.toChunk/0	4	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>	<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>/$r0	<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.update/0	13	<org.prevayler.implementation.journal.Journal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$r2	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.prevayler.QuerySystem.queryByName/0	4	<org.prevayler.demos.scalability.prevayler.QuerySystem: java.util.List queryByName(java.lang.String)>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/this#_0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	4	<org.prevayler.demos.scalability.Record: long getId()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	9	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/factory#_43	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/java.lang.Exception.printStackTrace/0	16	<java.lang.Exception: void printStackTrace()>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/e#_141	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/java.io.OutputStream.close/0	12	<java.io.OutputStream: void close()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/out#_77	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	11	<org.prevayler.foundation.serialization.Serializer: java.lang.Object readObject(java.io.InputStream)>	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/serializer#_0	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.foundation.FileLocker: void release()>/java.nio.channels.FileLock.release/0	3	<java.nio.channels.FileLock: void release()>	<org.prevayler.foundation.FileLocker: void release()>/$r0	<org.prevayler.foundation.FileLocker: void release()>
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.FileDescriptor.sync/0	35	<java.io.FileDescriptor: void sync()>	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$r7	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>
<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setVisible/0	27	<javax.swing.JInternalFrame: void setVisible(boolean)>	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	18	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/factory#_32	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/0	3	<org.prevayler.foundation.Chunk: java.lang.String getParameter(java.lang.String)>	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>
<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notify/0	5	<java.lang.Object: void notify()>	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>/this#_0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	3	<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/$r0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionTimestamp.cleanCopy/0	18	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r2	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.MainSkaringa: void out(java.lang.String)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo2.MainSkaringa: void out(java.lang.String)>/$r0	<org.prevayler.demos.demo2.MainSkaringa: void out(java.lang.String)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/1	25	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/0	3	<org.prevayler.foundation.Guided: void startTurn()>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>/org.prevayler.foundation.serialization.XStreamSerializer.createXStream/0	3	<org.prevayler.foundation.serialization.XStreamSerializer: com.thoughtworks.xstream.XStream createXStream()>	<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>/$r0	<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/0	23	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.lang.Exception.printStackTrace/0	61	<java.lang.Exception: void printStackTrace()>	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/ex#_44	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>
<org.prevayler.implementation.PrevaylerImpl: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.close/0	3	<org.prevayler.implementation.publishing.TransactionPublisher: void close()>	<org.prevayler.implementation.PrevaylerImpl: void close()>/$r0	<org.prevayler.implementation.PrevaylerImpl: void close()>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal2/0	20	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal2()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.dispose/0	21	<javax.swing.JInternalFrame: void dispose()>	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r14	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>
<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	6	<org.prevayler.TransactionWithQuery: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/$r0	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>
<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.JavaSerializer)>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	3	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.JavaSerializer)>/this#_0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.JavaSerializer)>
<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.numberString/0	9	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/account#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.DurableOutputStream: void close()>/java.io.FileOutputStream.close/0	15	<java.io.FileOutputStream: void close()>	<org.prevayler.foundation.DurableOutputStream: void close()>/$r2	<org.prevayler.foundation.DurableOutputStream: void close()>
<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.writeTo/0	13	<org.prevayler.foundation.Guided: void writeTo(java.io.OutputStream)>	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/guide#_0	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.holderText/1	17	<org.prevayler.demos.demo2.gui.AccountFrame: java.lang.String holderText()>	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r10	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	51	<java.lang.Object: void notifyAll()>	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$r3	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	8	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/tt#_0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>	@Replication
<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	3	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>/this#_0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	6	<java.lang.Object: void notify()>	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/$r1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/java.io.PipedOutputStream.close/1	18	<java.io.PipedOutputStream: void close()>	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/outputStream#_48	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	38	<org.prevayler.demos.scalability.ScalabilityTestSubject: java.lang.String name()>	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/subject#_0	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.next/0	6	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/newRecords#_0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/2	26	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r5	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/0	3	<org.prevayler.foundation.Chunk: byte[] getBytes()>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/java.io.ObjectOutputStream.close/0	8	<java.io.ObjectOutputStream: void close()>	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/objects#_27	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	3	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>/this#_0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.table/1	16	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/0	9	<java.sql.PreparedStatement: void setString(int,java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r1	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	8	<org.prevayler.demos.scalability.Record: java.lang.String getName()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.business.Account: void <init>(long,java.lang.String)>/org.prevayler.demos.demo2.business.Account.holder/0	11	<org.prevayler.demos.demo2.business.Account: void holder(java.lang.String)>	<org.prevayler.demos.demo2.business.Account: void <init>(long,java.lang.String)>/this#_0	<org.prevayler.demos.demo2.business.Account: void <init>(long,java.lang.String)>
<org.prevayler.demos.demo2.business.Account: java.lang.String toString()>/org.prevayler.demos.demo2.business.Account.numberString/0	3	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>	<org.prevayler.demos.demo2.business.Account: java.lang.String toString()>/this#_0	<org.prevayler.demos.demo2.business.Account: java.lang.String toString()>
<org.prevayler.demos.demo2.business.transactions.Deposit: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/org.prevayler.demos.demo2.business.Account.deposit/0	5	<org.prevayler.demos.demo2.business.Account: void deposit(long,java.util.Date)>	<org.prevayler.demos.demo2.business.transactions.Deposit: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/account#_0	<org.prevayler.demos.demo2.business.transactions.Deposit: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	4	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/snapshotManager#_0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>	@Censor
<org.prevayler.implementation.replication.ClientPublisher: void startListening()>/java.lang.Thread.start/0	7	<java.lang.Thread: void start()>	<org.prevayler.implementation.replication.ClientPublisher: void startListening()>/listener#_45	<org.prevayler.implementation.replication.ClientPublisher: void startListening()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.journal.PersistentJournal.handle/0	41	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/this#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	14	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/factory#_43	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/0	8	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	8	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/newRecords#_0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/0	24	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r9	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.RandomAccessFile.close/0	33	<java.io.RandomAccessFile: void close()>	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r19	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>
<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/java.io.ObjectOutputStream.flush/0	8	<java.io.ObjectOutputStream: void flush()>	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/$r2	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@Replication
<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>/org.prevayler.foundation.network.BaseNetworkImpl.newReceiver/0	5	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>/this#_0	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	16	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/factory#_15	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/javax.swing.table.DefaultTableModel.addRow/0	46	<javax.swing.table.DefaultTableModel: void addRow(java.lang.Object[])>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$r13	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/org.prevayler.foundation.DurableOutputStream.file/0	6	<org.prevayler.foundation.DurableOutputStream: java.io.File file()>	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$r0	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/java.io.PrintStream.println/0	34	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$r7	<org.prevayler.demos.demo1.PrimeCalculator: void start()>
<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.NewAccountFrame.holderText/0	6	<org.prevayler.demos.demo2.gui.AccountFrame: java.lang.String holderText()>	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/$r2	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/7	56	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/1	14	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.foundation.monitor.Log4jMonitor: void log(java.lang.Class,org.apache.log4j.Level,java.lang.String,java.lang.Exception)>/org.apache.log4j.Logger.log/0	9	<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>	<org.prevayler.foundation.monitor.Log4jMonitor: void log(java.lang.Class,org.apache.log4j.Level,java.lang.String,java.lang.Exception)>/$r0	<org.prevayler.foundation.monitor.Log4jMonitor: void log(java.lang.Class,org.apache.log4j.Level,java.lang.String,java.lang.Exception)>	@(Monitor) /\ (Monitor)
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Account.deposit/0	15	<org.prevayler.demos.demo2.business.Account: void deposit(long,java.util.Date)>	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/destination#_50	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	54	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/entry#_46	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
<org.prevayler.demos.demo2.business.transactions.AccountDeletion: void <init>(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.number/0	4	<org.prevayler.demos.demo2.business.Account: long number()>	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: void <init>(org.prevayler.demos.demo2.business.Account)>/account#_0	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: void <init>(org.prevayler.demos.demo2.business.Account)>
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/java.io.PipedOutputStream.close/0	16	<java.io.PipedOutputStream: void close()>	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/outputStream#_48	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/0	5	<java.sql.PreparedStatement: void setString(int,java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setLong/0	35	<java.sql.PreparedStatement: void setLong(int,long)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r14	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	6	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/factory#_112	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.censorship.TransactionCensor.approve/0	13	<org.prevayler.implementation.publishing.censorship.TransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/$r4	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>	@Censor
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.setEnabled/0	11	<javax.swing.AbstractAction: void setEnabled(boolean)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/this#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>
<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	14	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/factory#_20	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/java.io.ObjectOutputStream.writeObject/0	4	<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/$r0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@Replication
<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	17	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$r3	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getString1/0	12	<org.prevayler.demos.scalability.Record: java.lang.String getString1()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.NewAccountFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/0	8	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.NewAccountFrame: void addButtons(javax.swing.JPanel)>/buttonPanel#_0	<org.prevayler.demos.demo2.gui.NewAccountFrame: void addButtons(javax.swing.JPanel)>
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.business.Account.number/0	17	<org.prevayler.demos.demo2.business.Account: long number()>	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r12	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate1/0	21	<org.prevayler.demos.scalability.Record: java.util.Date getDate1()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.numberString/0	8	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/account#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.PrevaylerImpl: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.TransactionPublisher.publish/0	4	<org.prevayler.implementation.publishing.TransactionPublisher: void publish(org.prevayler.implementation.Capsule)>	<org.prevayler.implementation.PrevaylerImpl: void publish(org.prevayler.implementation.Capsule)>/$r0	<org.prevayler.implementation.PrevaylerImpl: void publish(org.prevayler.implementation.Capsule)>
<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/com.thoughtworks.xstream.XStream.alias/0	5	<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/xstream#_21	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/1	12	<org.prevayler.foundation.Chunk: byte[] getBytes()>	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/java.util.List.add/0	19	<java.util.List: boolean add(java.lang.Object)>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r1	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	7	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/factory#_13	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/java.util.ArrayList.add/0	20	<java.util.ArrayList: boolean add(java.lang.Object)>	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/list#_27	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	4	<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/$r0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>	@(Replication) /\ (Replication)
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.create/0	8	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/factory#_112	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/1	7	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/this#_0	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>
<org.prevayler.demos.scalability.prevayler.TestTransaction: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.scalability.prevayler.TransactionSystem.performTransaction/0	8	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>	<org.prevayler.demos.scalability.prevayler.TestTransaction: void executeOn(java.lang.Object,java.util.Date)>/$r2	<org.prevayler.demos.scalability.prevayler.TestTransaction: void executeOn(java.lang.Object,java.util.Date)>
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/java.util.zip.GZIPOutputStream.close/0	5	<java.util.zip.GZIPOutputStream: void close()>	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/$r2	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>	@(GZip) /\ (GZip)
<org.prevayler.demos.demo2.gui.NewAccountFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.NewAccountFrame.setBounds/0	6	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.NewAccountFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.NewAccountFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/javax.swing.JPanel.add/1	16	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/result#_69	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>
<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/1	7	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/java.io.IOException.printStackTrace/0	8	<java.io.IOException: void printStackTrace()>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/unExpected#_83	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/org.prevayler.implementation.PrevaylerImpl.execute/0	3	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/this#_0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureReplicationClient/0	21	<org.prevayler.PrevaylerFactory: void configureReplicationClient(java.lang.String,int)>	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/factory#_32	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/4	23	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	3	<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>	<org.prevayler.implementation.replication.ServerConnection: void run()>/$r0	<org.prevayler.implementation.replication.ServerConnection: void run()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	54	<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/subscriber#_0	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>
<org.prevayler.implementation.publishing.CentralPublisher: void close()>/org.prevayler.implementation.journal.Journal.close/0	3	<org.prevayler.implementation.journal.Journal: void close()>	<org.prevayler.implementation.publishing.CentralPublisher: void close()>/$r0	<org.prevayler.implementation.publishing.CentralPublisher: void close()>
<org.prevayler.foundation.monitor.SimpleMonitor: void info(java.lang.Class,java.lang.String)>/java.io.PrintStream.println/0	10	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.foundation.monitor.SimpleMonitor: void info(java.lang.Class,java.lang.String)>/$r1	<org.prevayler.foundation.monitor.SimpleMonitor: void info(java.lang.Class,java.lang.String)>	@(Monitor) /\ (Monitor)
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/org.prevayler.foundation.gzip.MultiMemberGZIPInputStream.read/0	3	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/this#_0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>	@(GZip) /\ (GZip)
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.show/0	35	<javax.swing.JInternalFrame: void show()>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/0	19	<java.awt.Container: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/container#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	7	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/tt#_0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>	@Replication
<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	15	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/factory#_16	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.util.LinkedList.add/0	4	<java.util.LinkedList: boolean add(java.lang.Object)>	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	4	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>/$r0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.business.Account.holder/0	7	<org.prevayler.demos.demo2.business.Account: java.lang.String holder()>	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r3	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	10	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/$r2	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/1	17	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r6	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/1	53	<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r4	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>/java.lang.Thread.start/0	7	<java.lang.Thread: void start()>	<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>/clockRefresher#_34	<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>
<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.PrevaylerDirectory.findInitialJournalFile/0	5	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$r0	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.AccountTransaction.executeAndQuery/0	6	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/this#_0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/org.prevayler.foundation.network.StubbornNetworkProxy.disconnect/0	7	<org.prevayler.foundation.network.StubbornNetworkProxy: void disconnect()>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/$r1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>	@Replication
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	3	<org.prevayler.demos.scalability.Record: java.lang.String getName()>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/newRecord#_0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.checkSystemVersion/0	12	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	7	<java.lang.Object: void notify()>	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/$r2	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>
<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/org.prevayler.implementation.publishing.TransactionPublisher.publish/0	8	<org.prevayler.implementation.publishing.TransactionPublisher: void publish(org.prevayler.implementation.Capsule)>	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/$r4	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/org.prevayler.demos.demo2.business.Bank.accounts/0	3	<org.prevayler.demos.demo2.business.Bank: java.util.List accounts()>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/$r0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>
<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/org.prevayler.demos.demo2.business.BankListener.accountDeleted/0	11	<org.prevayler.demos.demo2.business.BankListener: void accountDeleted(org.prevayler.demos.demo2.business.Account)>	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/$r4	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/0	2	<org.prevayler.foundation.Chunk: java.lang.String getParameter(java.lang.String)>	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>
<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/java.util.Map.remove/0	7	<java.util.Map: java.lang.Object remove(java.lang.Object)>	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/$r1	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.capsule/0	3	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/tt#_0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>	@Replication
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/java.util.List.add/0	15	<java.util.List: boolean add(java.lang.Object)>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/tmp$171856778	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.TransferFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/0	8	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addButtons(javax.swing.JPanel)>/buttonPanel#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addButtons(javax.swing.JPanel)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/0	5	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.executeOperation/0	7	<org.prevayler.demos.scalability.ScalabilityTestRun: void executeOperation(java.lang.Object,long)>	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$r2	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>
<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.JavaSerializer)>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	3	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.JavaSerializer)>/this#_0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.JavaSerializer)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	6	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.foundation.serialization.Serializer primarySerializer()>	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/snapshotManager#_0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>	@Censor
<org.prevayler.foundation.Turn: void alwaysSkip()>/org.prevayler.foundation.Turn.end/0	2	<org.prevayler.foundation.Turn: void end()>	<org.prevayler.foundation.Turn: void alwaysSkip()>/this#_0	<org.prevayler.foundation.Turn: void alwaysSkip()>
<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.writeSnapshot/0	16	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/snapshotManager#_0	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	7	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/$r1	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	3	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>/this#_0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/3	18	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/java.util.Map.clear/0	4	<java.util.Map: void clear()>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$r0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.startTurn/0	3	<org.prevayler.foundation.Guided: void startTurn()>	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/guide#_0	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.RandomAccessFile.close/1	38	<java.io.RandomAccessFile: void close()>	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r13	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>
<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/org.prevayler.Prevayler.execute/0	14	<org.prevayler.Prevayler: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/$r4	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>
<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	5	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/this#_0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/0	13	<java.awt.Container: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/container#_0	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	3	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>/this#_0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/java.io.FileInputStream.close/1	36	<java.io.FileInputStream: void close()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/in#_96	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.io.ObjectOutputStream.close/0	3	<java.io.ObjectOutputStream: void close()>	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/$r0	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/org.prevayler.demos.demo2.business.Account.addAccountListener/0	7	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/$r2	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	3	<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r0	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate2/0	32	<org.prevayler.demos.scalability.Record: java.util.Date getDate2()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/recordToInsert#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.checkSystemVersion/0	15	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.prepare/1	20	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.setBounds/0	30	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.network.BaseNetworkImpl: void releasePortForReuse(int)>/java.util.Map.remove/0	6	<java.util.Map: java.lang.Object remove(java.lang.Object)>	<org.prevayler.foundation.network.BaseNetworkImpl: void releasePortForReuse(int)>/$r1	<org.prevayler.foundation.network.BaseNetworkImpl: void releasePortForReuse(int)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/0	13	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/$r4	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	6	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/factory#_173	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/java.sql.Statement.execute/0	14	<java.sql.Statement: boolean execute(java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$r2	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/2	15	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	5	<org.prevayler.foundation.monitor.LoggingMonitor: boolean isInfoEnabled(java.lang.Class)>	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/this#_0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>	@(Monitor) /\ (Monitor)
<org.prevayler.implementation.clock.MachineClock: void update()>/org.prevayler.implementation.clock.MachineClock.advanceTo/0	8	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	<org.prevayler.implementation.clock.MachineClock: void update()>/this#_0	<org.prevayler.implementation.clock.MachineClock: void update()>
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/org.prevayler.foundation.DeepCopier$Receiver.join/0	2	<java.lang.Thread: void join()>	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/this#_0	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.Prevayler.execute/0	19	<org.prevayler.Prevayler: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r11	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/javax.swing.JList.setListData/0	10	<javax.swing.JList: void setListData(java.lang.Object[])>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r4	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/0	5	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.TransferFrame.setBounds/0	11	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/java.io.IOException.printStackTrace/0	11	<java.io.IOException: void printStackTrace()>	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/e#_124	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.demos.demo2.business.Account.number/0	5	<org.prevayler.demos.demo2.business.Account: long number()>	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$r0	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/java.lang.Exception.printStackTrace/0	14	<java.lang.Exception: void printStackTrace()>	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/e#_179	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/org.prevayler.Prevayler.execute/0	10	<org.prevayler.Prevayler: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/$r1	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>
<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.journal.Journal.append/0	5	<org.prevayler.implementation.journal.Journal: void append(org.prevayler.implementation.TransactionGuide)>	<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>/$r0	<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>
<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/javax.swing.JDesktopPane.add/0	17	<javax.swing.JDesktopPane: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/desktop#_21	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/org.prevayler.foundation.StopWatch.millisEllapsed/0	6	<org.prevayler.foundation.StopWatch: long millisEllapsed()>	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$r0	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/0	8	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/buttonPanel#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>
<org.prevayler.demos.scalability.RecordIterator: void out(java.lang.Object)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.Object)>	<org.prevayler.demos.scalability.RecordIterator: void out(java.lang.Object)>/$r0	<org.prevayler.demos.scalability.RecordIterator: void out(java.lang.Object)>
<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/org.prevayler.demos.demo2.business.AccountListener.accountChanged/0	7	<org.prevayler.demos.demo2.business.AccountListener: void accountChanged()>	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/$r2	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/1	53	<org.prevayler.foundation.Chunk: byte[] getBytes()>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/java.sql.Connection.commit/0	34	<java.sql.Connection: void commit()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$r8	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.demos.demo2.Main: void out(java.lang.String)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo2.Main: void out(java.lang.String)>/$r0	<org.prevayler.demos.demo2.Main: void out(java.lang.String)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/java.sql.Connection.setAutoCommit/0	5	<java.sql.Connection: void setAutoCommit(boolean)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/connection#_0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>
<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.Transaction.executeOn/0	6	<org.prevayler.Transaction: void executeOn(java.lang.Object,java.util.Date)>	<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/$r0	<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>
<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.demos.demo2.gui.BankFrame.setTitle/0	17	<javax.swing.JFrame: void setTitle(java.lang.String)>	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/$r2	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.numbers/0	24	<org.prevayler.demos.demo1.NumberKeeper: java.util.List numbers()>	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$r4	<org.prevayler.demos.demo1.PrimeCalculator: void start()>
<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.implementation.clock.PausableClock.advanceTo/0	4	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>	<org.prevayler.implementation.clock.PausableClock: void pause()>/this#_0	<org.prevayler.implementation.clock.PausableClock: void pause()>
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.timestamp/0	7	<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp timestamp()>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/org.prevayler.implementation.replication.ServerConnection.start/0	11	<java.lang.Thread: void start()>	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/this#_0	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>	@Replication
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.prepare/0	11	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setLong/0	5	<java.sql.PreparedStatement: void setLong(int,long)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountCreated(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.addAccountListener/0	3	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountCreated(org.prevayler.demos.demo2.business.Account)>/a#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountCreated(org.prevayler.demos.demo2.business.Account)>
<org.prevayler.foundation.FileLocker: void release()>/java.io.RandomAccessFile.close/0	8	<java.io.RandomAccessFile: void close()>	<org.prevayler.foundation.FileLocker: void release()>/$r8	<org.prevayler.foundation.FileLocker: void release()>
<org.prevayler.demos.demo1.Main: void main(java.lang.String[])>/org.prevayler.demos.demo1.PrimeCalculator.start/0	9	<org.prevayler.demos.demo1.PrimeCalculator: void start()>	<org.prevayler.demos.demo1.Main: void main(java.lang.String[])>/$r1	<org.prevayler.demos.demo1.Main: void main(java.lang.String[])>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/java.lang.Exception.printStackTrace/0	12	<java.lang.Exception: void printStackTrace()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/ex#_22	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.JButton.addActionListener/0	29	<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/$r6	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	12	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r3	<org.prevayler.implementation.replication.ServerConnection$1: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountFrame.labelContainer/0	3	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.RecordIterator.next/0	26	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/newRecords#_55	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.table/0	7	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/this#_0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>
<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.lang.Exception.printStackTrace/0	13	<java.lang.Exception: void printStackTrace(java.io.PrintStream)>	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/ex#_0	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	@(Monitor) /\ (Monitor)
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/java.io.File.delete/0	15	<java.io.File: boolean delete()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/permanent#_70	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/0	17	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r5	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.file/0	40	<org.prevayler.foundation.DurableOutputStream: java.io.File file()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$r5	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/com.thoughtworks.xstream.XStream.alias/2	11	<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/xstream#_21	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.StubbornNetworkClientConnector.disconnect/0	5	<org.prevayler.foundation.network.StubbornNetworkClientConnector: void disconnect()>	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/$r3	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>	@Replication
<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/java.util.List.add/0	10	<java.util.List: boolean add(java.lang.Object)>	<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/$r1	<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/java.util.Map.clear/0	4	<java.util.Map: void clear()>	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$r0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
<org.prevayler.demos.scalability.ScalabilityTestRun: void out(java.lang.Object)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.Object)>	<org.prevayler.demos.scalability.ScalabilityTestRun: void out(java.lang.Object)>/$r0	<org.prevayler.demos.scalability.ScalabilityTestRun: void out(java.lang.Object)>
<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/org.prevayler.implementation.PrevalentSystemGuard.executeQuery/0	5	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/$r0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/java.io.InputStream.close/0	26	<java.io.InputStream: void close()>	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/$r6	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.ByteArrayOutputStream.writeTo/0	29	<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$r4	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>/org.prevayler.implementation.Capsule.cleanCopy/0	4	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule cleanCopy()>	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>/$r1	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/java.awt.Container.add/1	57	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/$r15	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevaylerDirectory.latestSnapshot/0	33	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/$r3	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>	@Snapshot
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	6	<org.prevayler.foundation.network.ObjectReceiver: void receive(java.lang.Object)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/$r0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.foundation.Chunk.setParameter/1	10	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/chunk#_47	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	4	<org.prevayler.foundation.monitor.LoggingMonitor: boolean isInfoEnabled(java.lang.Class)>	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/this#_0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>	@(Monitor) /\ (Monitor)
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/6	28	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/org.prevayler.foundation.serialization.Serializer.readObject/0	4	<org.prevayler.foundation.serialization.Serializer: java.lang.Object readObject(java.io.InputStream)>	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/$r1	<org.prevayler.foundation.DeepCopier$Receiver: void run()>
<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.parse/1	11	<org.prevayler.demos.demo2.gui.AccountFrame: long parse(java.lang.String)>	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/$r5	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>
<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.subscribe/0	10	<org.prevayler.implementation.publishing.TransactionPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	<org.prevayler.implementation.replication.ServerConnection: void run()>/$r4	<org.prevayler.implementation.replication.ServerConnection: void run()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void shutdown()>/org.prevayler.foundation.network.ObjectServerSocket.close/0	5	<org.prevayler.foundation.network.ObjectServerSocket: void close()>	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void shutdown()>/$r0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void shutdown()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/java.util.Map.put/0	26	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/parameters#_66	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.FileOutputStream.flush/0	33	<java.io.FileOutputStream: void flush()>	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$r6	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>
<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	6	<java.lang.Thread: void start()>	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/$r1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitToResend(java.lang.Object)>/java.lang.Object.wait/0	3	<java.lang.Object: void wait()>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitToResend(java.lang.Object)>/this#_0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitToResend(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	37	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/clockTick_$$A_2#_129	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/org.prevayler.foundation.network.ObjectServerSocket.accept/0	6	<org.prevayler.foundation.network.ObjectServerSocket: org.prevayler.foundation.network.ObjectSocket accept()>	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/$r0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AllAccountsFrame: org.prevayler.demos.demo2.business.Bank bank()>/org.prevayler.Prevayler.prevalentSystem/0	3	<org.prevayler.Prevayler: java.lang.Object prevalentSystem()>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: org.prevayler.demos.demo2.business.Bank bank()>/$r0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: org.prevayler.demos.demo2.business.Bank bank()>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.io.File snapshotFile(long)>/org.prevayler.implementation.PrevaylerDirectory.snapshotFile/0	5	<org.prevayler.implementation.PrevaylerDirectory: java.io.File snapshotFile(long,java.lang.String)>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.io.File snapshotFile(long)>/$r1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.io.File snapshotFile(long)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/2	18	<javax.swing.Box: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/fieldBox#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notifyAll/2	50	<java.lang.Object: void notifyAll()>	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/this#_0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/org.prevayler.foundation.network.NetworkServerObjectReceiverImpl.setName/0	11	<java.lang.Thread: void setName(java.lang.String)>	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/this#_0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>	@Replication
<org.prevayler.demos.demo2.MainXStream: void out(java.lang.String)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo2.MainXStream: void out(java.lang.String)>/$r0	<org.prevayler.demos.demo2.MainXStream: void out(java.lang.String)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setBounds/0	22	<javax.swing.JFrame: void setBounds(int,int,int,int)>	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.foundation.Chunk.setParameter/0	8	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>/chunk#_71	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>
<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/java.util.Map.put/0	6	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/$r0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/java.io.ByteArrayOutputStream.write/0	15	<java.io.ByteArrayOutputStream: void write(int)>	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/header#_95	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>
<org.prevayler.demos.demo1.Main: void printMessage()>/java.io.BufferedReader.readLine/0	9	<java.io.BufferedReader: java.lang.String readLine()>	<org.prevayler.demos.demo1.Main: void printMessage()>/$r1	<org.prevayler.demos.demo1.Main: void printMessage()>
<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>/javax.swing.JLabel.setAlignmentX/0	6	<javax.swing.JLabel: void setAlignmentX(float)>	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>/label#_66	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>
<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Prevayler.clock/0	12	<org.prevayler.Prevayler: org.prevayler.Clock clock()>	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/$r4	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.clock.BrokenClock.advanceTo/0	21	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r11	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/5	38	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r11	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo2.MainReplica: void out(java.lang.String)>/java.io.PrintStream.println/0	3	<java.io.PrintStream: void println(java.lang.String)>	<org.prevayler.demos.demo2.MainReplica: void out(java.lang.String)>/$r0	<org.prevayler.demos.demo2.MainReplica: void out(java.lang.String)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	8	<org.prevayler.foundation.serialization.Serializer: void writeObject(java.io.OutputStream,java.lang.Object)>	<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/journalSerializer#_0	<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.demos.demo2.Main: void startSnapshots(org.prevayler.Prevayler)>/org.prevayler.Prevayler.takeSnapshot/0	5	<org.prevayler.Prevayler: void takeSnapshot()>	<org.prevayler.demos.demo2.Main: void startSnapshots(org.prevayler.Prevayler)>/prevayler#_0	<org.prevayler.demos.demo2.Main: void startSnapshots(org.prevayler.Prevayler)>
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/java.util.zip.GZIPOutputStream.write/0	12	<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/$r1	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>	@(GZip) /\ (GZip)
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.JTextField.setEnabled/0	10	<javax.swing.JTextField: void setEnabled(boolean)>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/$r3	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/1	10	<org.prevayler.demos.scalability.Record: java.lang.String getName()>	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/newRecord#_0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal2/0	16	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal2()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>/org.prevayler.demos.demo2.gui.AccountFrame.addFields/0	3	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>/this#_0	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>
<org.prevayler.implementation.publishing.POBox: void run()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	4	<org.prevayler.implementation.publishing.TransactionSubscriber: void receive(org.prevayler.implementation.TransactionTimestamp)>	<org.prevayler.implementation.publishing.POBox: void run()>/$r0	<org.prevayler.implementation.publishing.POBox: void run()>
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/org.prevayler.foundation.network.NetworkServerObjectReceiverImpl.start/0	15	<java.lang.Thread: void start()>	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/this#_0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>	@Replication
<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/2	20	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/buttonPanel#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>/org.prevayler.foundation.network.ObjectSocket.close/0	5	<org.prevayler.foundation.network.ObjectSocket: void close()>	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>/$r0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/javax.swing.JDesktopPane.add/1	21	<javax.swing.JDesktopPane: java.awt.Component add(java.awt.Component)>	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/desktop#_21	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountEditFrame.accountChanged/0	14	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	4	<org.prevayler.demos.scalability.ScalabilityTestSubject: void replaceAllRecords(int)>	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/$r0	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.sql.Connection.commit/0	9	<java.sql.Connection: void commit()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/$r0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setVisible/0	27	<javax.swing.JFrame: void setVisible(boolean)>	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	23	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/factory#_32	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setDefaultCloseOperation/0	6	<javax.swing.JFrame: void setDefaultCloseOperation(int)>	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/this#_0	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>
<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>/java.io.ObjectInputStream.close/0	8	<java.io.ObjectInputStream: void close()>	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>/objects#_33	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>
<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.gap/0	14	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/this#_0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureReplicationServer/0	12	<org.prevayler.PrevaylerFactory: void configureReplicationServer(int)>	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/factory#_20	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Account.withdraw/0	8	<org.prevayler.demos.demo2.business.Account: void withdraw(long,java.util.Date)>	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/source#_49	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/org.prevayler.foundation.serialization.Serializer.readObject/0	31	<org.prevayler.foundation.serialization.Serializer: java.lang.Object readObject(java.io.InputStream)>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/serializer#_95	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/1	13	<java.sql.PreparedStatement: void setString(int,java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r3	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	12	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/$r3	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>
<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/org.prevayler.foundation.network.BaseNetworkImpl.createService/0	5	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver createService(org.prevayler.foundation.network.Service,int)>	<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/this#_0	<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>	@(Replication) /\ (Replication)
<org.prevayler.foundation.Guided: void endTurn()>/org.prevayler.foundation.Turn.end/0	3	<org.prevayler.foundation.Turn: void end()>	<org.prevayler.foundation.Guided: void endTurn()>/$r0	<org.prevayler.foundation.Guided: void endTurn()>
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.util.Map.remove/0	13	<java.util.Map: java.lang.Object remove(java.lang.Object)>	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/$r4	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.show/0	40	<javax.swing.JInternalFrame: void show()>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/this#_0	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	7	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/factory#_43	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.Service.serverFor/0	6	<org.prevayler.foundation.network.Service: org.prevayler.foundation.network.ObjectReceiver serverFor(org.prevayler.foundation.network.ObjectReceiver)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/$r1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/0	32	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo1.PrimeCalculator: void <init>(org.prevayler.Prevayler)>/org.prevayler.Prevayler.prevalentSystem/0	5	<org.prevayler.Prevayler: java.lang.Object prevalentSystem()>	<org.prevayler.demos.demo1.PrimeCalculator: void <init>(org.prevayler.Prevayler)>/prevayler#_0	<org.prevayler.demos.demo1.PrimeCalculator: void <init>(org.prevayler.Prevayler)>
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.util.Properties.load/0	26	<java.util.Properties: void load(java.io.InputStream)>	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$r6	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>/org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream.write/0	6	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>/this#_0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>	@(GZip) /\ (GZip)
<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.foundation.StopWatch.secondsEllapsed/0	8	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/stopWatch#_88	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.Prevayler.execute/0	19	<org.prevayler.Prevayler: java.lang.Object execute(org.prevayler.TransactionWithQuery)>	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$r8	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>
<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>/java.io.OutputStream.flush/0	3	<java.io.OutputStream: void flush()>	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>/$r0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>	@(GZip) /\ (GZip)
<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	10	<org.prevayler.implementation.publishing.TransactionPublisher: org.prevayler.Clock clock()>	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/$r5	<org.prevayler.implementation.replication.ServerConnection$1: void run()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	12	<org.prevayler.foundation.serialization.Serializer: void writeObject(java.io.OutputStream,java.lang.Object)>	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/serializer#_0	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	3	<org.prevayler.foundation.network.ObjectSocket: java.lang.Object readObject()>	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/$r0	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo1.NumberKeeper: void keep(int)>/java.util.List.add/0	6	<java.util.List: boolean add(java.lang.Object)>	<org.prevayler.demos.demo1.NumberKeeper: void keep(int)>/$r1	<org.prevayler.demos.demo1.NumberKeeper: void keep(int)>
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void disconnect()>/org.prevayler.foundation.network.SessionsManager.remove/0	4	<org.prevayler.foundation.network.SessionsManager: void remove(org.prevayler.foundation.network.NetworkSessionId)>	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void disconnect()>/$r1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void disconnect()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/javax.swing.JTextField.setText/1	15	<javax.swing.JTextField: void setText(java.lang.String)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/$r8	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	10	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/factory#_20	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/java.util.List.add/0	22	<java.util.List: boolean add(java.lang.Object)>	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$r6	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>
<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.implementation.replication.ServerListener.setDaemon/0	9	<java.lang.Thread: void setDaemon(boolean)>	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/this#_0	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>	@Replication
<org.prevayler.implementation.replication.ClientPublisher$1: void run()>/java.lang.Exception.printStackTrace/0	7	<java.lang.Exception: void printStackTrace()>	<org.prevayler.implementation.replication.ClientPublisher$1: void run()>/ex#_49	<org.prevayler.implementation.replication.ClientPublisher$1: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	7	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/factory#_16	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>	@(Snapshot) /\ (Snapshot)
<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.TransactionConnection.performTransaction/0	18	<org.prevayler.demos.scalability.TransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/$r2	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>
<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JTextField.setText/0	10	<javax.swing.JTextField: void setText(java.lang.String)>	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/$r0	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.implementation.journal.PersistentJournal: void <init>(org.prevayler.implementation.PrevaylerDirectory,long,long,java.lang.String)>/org.prevayler.implementation.PrevaylerDirectory.produceDirectory/0	12	<org.prevayler.implementation.PrevaylerDirectory: void produceDirectory()>	<org.prevayler.implementation.journal.PersistentJournal: void <init>(org.prevayler.implementation.PrevaylerDirectory,long,long,java.lang.String)>/$r0	<org.prevayler.implementation.journal.PersistentJournal: void <init>(org.prevayler.implementation.PrevaylerDirectory,long,long,java.lang.String)>
<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	6	<org.prevayler.foundation.serialization.Serializer: void writeObject(java.io.OutputStream,java.lang.Object)>	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/serializer#_0	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>
<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>/java.io.OutputStream.write/0	4	<java.io.OutputStream: void write(int)>	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>/$r0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>	@(GZip) /\ (GZip)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.close/0	47	<org.prevayler.foundation.DurableOutputStream: void close()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/outputJournalToClose_$$A_2#_88	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void sendSessionKey()>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	4	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void sendSessionKey()>/$r1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void sendSessionKey()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/java.sql.PreparedStatement.setString/0	7	<java.sql.PreparedStatement: void setString(int,java.lang.String)>	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/$r1	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>
<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/0	12	<org.prevayler.foundation.Guided: void endTurn()>	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/net.sourceforge.javamatch.query.QuerySet.addPreferred/0	18	<net.sourceforge.javamatch.query.QuerySet: void addPreferred(net.sourceforge.javamatch.query.MatchQuery)>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/query#_88	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.foundation.network.BaseNetworkImpl: void terminateService(org.prevayler.foundation.network.NetworkServerObjectReceiver)>/org.prevayler.foundation.network.NetworkServerObjectReceiver.shutdown/0	3	<org.prevayler.foundation.network.NetworkServerObjectReceiver: void shutdown()>	<org.prevayler.foundation.network.BaseNetworkImpl: void terminateService(org.prevayler.foundation.network.NetworkServerObjectReceiver)>/stubbornService#_0	<org.prevayler.foundation.network.BaseNetworkImpl: void terminateService(org.prevayler.foundation.network.NetworkServerObjectReceiver)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	4	<org.prevayler.demos.scalability.Record: java.lang.String getName()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.JPanel.setLayout/0	21	<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/buttonPanel#_58	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>
<org.prevayler.implementation.replication.ServerConnection: void close()>/org.prevayler.implementation.replication.ServerConnection.interrupt/0	4	<java.lang.Thread: void interrupt()>	<org.prevayler.implementation.replication.ServerConnection: void close()>/this#_0	<org.prevayler.implementation.replication.ServerConnection: void close()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/org.prevayler.foundation.network.NetworkReceiverFactory.newReceiver/0	7	<org.prevayler.foundation.network.NetworkReceiverFactory: org.prevayler.foundation.network.ObjectReceiver newReceiver(org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectSocket)>	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/$r1	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.execute/0	38	<java.sql.PreparedStatement: boolean execute()>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r15	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getString1/0	8	<org.prevayler.demos.scalability.Record: java.lang.String getString1()>	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/recordToUpdate#_0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/net.sourceforge.javamatch.query.QuerySet.addPreferred/1	22	<net.sourceforge.javamatch.query.QuerySet: void addPreferred(net.sourceforge.javamatch.query.MatchQuery)>	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/query#_88	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>
<org.prevayler.implementation.replication.ServerListener: void run()>/org.prevayler.foundation.network.ObjectServerSocket.accept/0	5	<org.prevayler.foundation.network.ObjectServerSocket: org.prevayler.foundation.network.ObjectSocket accept()>	<org.prevayler.implementation.replication.ServerListener: void run()>/$r0	<org.prevayler.implementation.replication.ServerListener: void run()>	@(Replication) /\ (Replication)
<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>/org.prevayler.implementation.publishing.TransactionPublisher.subscribe/0	11	<org.prevayler.implementation.publishing.TransactionPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>/publisher#_0	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>
<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/java.util.Map.put/0	11	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/$r3	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.AllRecordsReplacement: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.scalability.prevayler.ScalabilitySystem.replaceAllRecords/0	8	<org.prevayler.demos.scalability.prevayler.ScalabilitySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>	<org.prevayler.demos.scalability.prevayler.AllRecordsReplacement: void executeOn(java.lang.Object,java.util.Date)>/$r1	<org.prevayler.demos.scalability.prevayler.AllRecordsReplacement: void executeOn(java.lang.Object,java.util.Date)>
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	7	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.foundation.serialization.Serializer primarySerializer()>	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/this#_0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>	@(Snapshot) /\ (Snapshot)
<org.prevayler.foundation.network.SessionsManagerImpl: void remove(org.prevayler.foundation.network.NetworkSessionId)>/java.util.HashMap.remove/0	4	<java.util.HashMap: java.lang.Object remove(java.lang.Object)>	<org.prevayler.foundation.network.SessionsManagerImpl: void remove(org.prevayler.foundation.network.NetworkSessionId)>/$r0	<org.prevayler.foundation.network.SessionsManagerImpl: void remove(org.prevayler.foundation.network.NetworkSessionId)>	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/0	10	<org.prevayler.foundation.Guided: void startTurn()>	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/3	30	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/$r7	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/3	45	<java.io.OutputStream: void write(int)>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	8	<org.prevayler.foundation.network.ObjectReceiver: void receive(java.lang.Object)>	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/$r1	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>	@(Replication) /\ (Replication)
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/1	41	<java.io.OutputStream: void write(int)>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>/java.util.Map.put/0	5	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>/$r0	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>
<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.addAccountListener/0	13	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/account#_0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.StubbornClientReceiverImpl.networkRequestToReceive/0	5	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/this#_0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	7	<java.lang.Thread: void start()>	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/daemon#_29	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/0	9	<org.prevayler.foundation.Guided: void startTurn()>	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/guide#_0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	6	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/this#_0	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/1	21	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/$r7	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	18	<org.prevayler.foundation.network.ObjectSocket: void writeObject(java.lang.Object)>	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r3	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>	@Replication
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/4	48	<java.io.OutputStream: void write(byte[])>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/stream#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void closeForReconnect()>/org.prevayler.foundation.network.ObjectSocket.close/0	3	<org.prevayler.foundation.network.ObjectSocket: void close()>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void closeForReconnect()>/$r0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void closeForReconnect()>	@(Replication) /\ (Replication)
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameters/0	9	<org.prevayler.foundation.Chunk: java.util.Map getParameters()>	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/chunk#_0	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>
<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/org.prevayler.implementation.PrevaylerDirectory.journalFile/0	5	<org.prevayler.implementation.PrevaylerDirectory: java.io.File journalFile(long,java.lang.String)>	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/$r1	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Bank.setBankListener/0	15	<org.prevayler.demos.demo2.business.Bank: void setBankListener(org.prevayler.demos.demo2.business.BankListener)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/$r2	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo1.NumberStorageTransaction: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo1.NumberKeeper.keep/0	6	<org.prevayler.demos.demo1.NumberKeeper: void keep(int)>	<org.prevayler.demos.demo1.NumberStorageTransaction: void executeOn(java.lang.Object,java.util.Date)>/$r0	<org.prevayler.demos.demo1.NumberStorageTransaction: void executeOn(java.lang.Object,java.util.Date)>
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/org.prevayler.foundation.network.StubbornNetwork.newInstance/0	6	<org.prevayler.foundation.network.StubbornNetwork: org.prevayler.foundation.network.ObjectSocket newInstance(java.lang.String,int)>	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/$r1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JTextField.addFocusListener/0	20	<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/$r5	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.action/0	6	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action(org.prevayler.demos.demo2.business.Account)>	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>/this#_0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>

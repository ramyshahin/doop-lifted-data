0	<Graph: Graph kruskal()>/Graph.addVertex/0	<Graph: Graph kruskal()>/$r27	@MSTKruskal
0	<Graph: Graph prim(Vertex)>/Graph.findsVertex/2	<Graph: Graph prim(Vertex)>/$r18	@MSTPrim
0	<Graph: Graph strongComponents()>/Graph$Comparator1.<init>/0	<Graph: Graph strongComponents()>/this#_0	@StronglyConnected
0	<Graph: Graph prim(Vertex)>/java.util.LinkedList.add/1	<Graph: Graph prim(Vertex)>/x_$$A_3#_546	@MSTPrim
1	<Graph: Graph prim(Vertex)>/java.util.LinkedList.set/0	<Graph: Graph prim(Vertex)>/vn#_581	@MSTPrim
0	<Graph: Graph prim(Vertex)>/Graph$Comparator2.<init>/0	<Graph: Graph prim(Vertex)>/this#_0	@MSTPrim
0	<Edge: void display()>/java.lang.StringBuilder.<init>/0	<Edge: void display()>/$stringconstant0	@(EdgeObjects) /\ (EdgeObjects /\ Weighted)
0	<Graph: Graph kruskal()>/EdgeIfc.adjustAdorns/0	<Graph: Graph kruskal()>/theEdge#_499	@MSTKruskal
2	<Graph: Graph computeTranspose(Graph)>/Graph.addEdge/0	<Graph: Graph computeTranspose(Graph)>/$numconstant0	@(Transpose) /\ (Transpose)
0	<Graph: boolean cycleCheck()>/Graph.graphSearch/0	<Graph: boolean cycleCheck()>/c#_393	@(Cycle) /\ (Cycle)
1	<Graph: EdgeIter getEdges()>/Graph$EdgeIter1.<init>/0	<Graph: EdgeIter getEdges()>/$null0	@EdgeObjects
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/4	<Vertex: void display()>/$stringconstant5	@Connected
0	<Graph: void display()>/java.io.PrintStream.println/1	<Graph: void display()>/$stringconstant1
0	<Vertex: void addWeight(int)>/java.util.LinkedList.add/0	<Vertex: void addWeight(int)>/$r0	@(Weighted) /\ (Weighted /\ G_NoEdges)
0	<Main: void main(java.lang.String[])>/Graph.run/0	<Main: void main(java.lang.String[])>/$r17	@(Prog) /\ (Prog)
0	<Graph: Graph strongComponents()>/Graph.computeTranspose/0	<Graph: Graph strongComponents()>/this#_0	@StronglyConnected
0	<Graph: Graph prim(Vertex)>/java.util.Set.add/2	<Graph: Graph prim(Vertex)>/$r12	@MSTPrim
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/2	<Vertex: void display()>/$r19
0	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/Graph$Comparator1.compare/0	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/$r1
0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/Vertex.setWeight/0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/weight#_0	@Weighted /\ G_NoEdges
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/2	<Graph: Graph kruskal()>/v_$$A_3#_432	@MSTKruskal
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/0	<Graph: Graph kruskal()>/e1#_430	@MSTKruskal
0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/Vertex.addWeight/0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/weight#_0	@Undirected /\ Weighted /\ G_NoEdges
0	<Graph: Graph computeTranspose(Graph)>/Graph.addVertex/0	<Graph: Graph computeTranspose(Graph)>/v_$$A_1#_355	@(Transpose) /\ (Transpose)
0	<Graph: Graph computeTranspose(Graph)>/Vertex.assignName/0	<Graph: Graph computeTranspose(Graph)>/theName#_354	@(Transpose) /\ (Transpose)
0	<Vertex: void addEdge(Neighbor)>/java.util.LinkedList.add/0	<Vertex: void addEdge(Neighbor)>/n#_0	@(GN_OnlyNeighbors) /\ (GN_OnlyNeighbors)
0	<Vertex: void adjustAdorns(Vertex,int)>/java.lang.Integer.<init>/0	<Vertex: void adjustAdorns(Vertex,int)>/the_weight#_97	@(G_NoEdges) /\ (Weighted /\ G_NoEdges)
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/1	<Vertex: void display()>/$stringconstant1
0	<Graph: Graph kruskal()>/Graph.addEdge/0	<Graph: Graph kruskal()>/j_$$A_1#_504	@MSTKruskal
0	<Vertex: void setWeight(int)>/Vertex.addWeight/1	<Vertex: void setWeight(int)>/weight#_0	@(Weighted /\ G_NoEdges) /\ (Weighted /\ G_NoEdges)
0	<Main: void main(java.lang.String[])>/Graph.runBenchmark/0	<Main: void main(java.lang.String[])>/$r1	@(Prog) /\ (Prog)
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/8	<Vertex: void display()>/$stringconstant10	@MSTPrim
0	<Vertex: void adjustAdorns(Vertex,int)>/java.util.LinkedList.add/0	<Vertex: void adjustAdorns(Vertex,int)>/$r3	@(G_NoEdges) /\ (Weighted /\ G_NoEdges)
0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/Vertex.addAdjacent/0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/end#_0	@G_NoEdges
0	<Vertex: void display()>/java.io.PrintStream.print/2	<Vertex: void display()>/$r15
0	<Graph: void connectedComponents()>/Graph.graphSearch/0	<Graph: void connectedComponents()>/$r0	@(Connected) /\ (Connected)
0	<Graph$Comparator1: void <init>(Graph,Graph$Comparator1)>/Graph$Comparator1.<init>/0	<Graph$Comparator1: void <init>(Graph,Graph$Comparator1)>/l1#_0	@StronglyConnected
0	<Graph: Graph kruskal()>/Vertex.assignName/0	<Graph: Graph kruskal()>/edgeiter_$$A_1#_485	@MSTKruskal
0	<Graph: Graph prim(Vertex)>/Graph.addVertex/0	<Graph: Graph prim(Vertex)>/$r15	@MSTPrim
0	<Neighbor: void display()>/java.io.PrintStream.print/0	<Neighbor: void display()>/$r6	@(GN_OnlyNeighbors) /\ (GN_OnlyNeighbors)
0	<Graph: void run(Vertex)>/Graph.prim/0	<Graph: void run(Vertex)>/v#_0	@MSTPrim /\ Prog
0	<Graph: void endProfile()>/java.lang.StringBuilder.<init>/0	<Graph: void endProfile()>/$stringconstant0	@(Benchmark) /\ (Benchmark)
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/7	<Vertex: void display()>/$stringconstant9	@MSTKruskal
1	<Graph: Graph prim(Vertex)>/java.util.LinkedList.add/3	<Graph: Graph prim(Vertex)>/v#_584	@MSTPrim
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/6	<Graph: Graph kruskal()>/urep#_440	@MSTKruskal
0	<Graph: void runBenchmark(java.lang.String)>/java.io.FileReader.<init>/0	<Graph: void runBenchmark(java.lang.String)>/FileName#_0	@(Benchmark) /\ (Benchmark)
0	<Vertex: void init_vertex(WorkSpace)>/WorkSpace.init_vertex/0	<Vertex: void init_vertex(WorkSpace)>/this#_0	@(SearchBase) /\ (SearchBase)
1	<Main: void main(java.lang.String[])>/Main.readWeights/0	<Main: void main(java.lang.String[])>/num_edges_$$A_3#_35	@(Prog) /\ (Prog)
0	<Graph: Graph prim(Vertex)>/java.util.Set.add/0	<Graph: Graph prim(Vertex)>/$r2	@MSTPrim
0	<Vertex: void display()>/java.io.PrintStream.print/8	<Vertex: void display()>/$r43	@Cycle
1	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/Graph$Comparator3.compare/0	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/$r0
0	<Graph: Graph prim(Vertex)>/java.util.LinkedList.remove/0	<Graph: Graph prim(Vertex)>/residue#_604	@MSTPrim
0	<Graph: Graph prim(Vertex)>/EdgeIfc.adjustAdorns/0	<Graph: Graph prim(Vertex)>/e#_664	@MSTPrim
1	<Vertex: void nodeSearch(WorkSpace)>/WorkSpace.checkNeighborAction/0	<Vertex: void nodeSearch(WorkSpace)>/v_$$A_1#_208	@DFS /\ SearchBase
1	<Main: EdgeIfc addEdge(Graph,int)>/Graph.addEdge/0	<Main: EdgeIfc addEdge(Graph,int)>/v2#_88	@(Prog) /\ (Prog)
0	<Graph: void addEdge(Vertex,Neighbor)>/Vertex.addEdge/1	<Graph: void addEdge(Vertex,Neighbor)>/$r0	@(GN_OnlyNeighbors) /\ (Undirected /\ GN_OnlyNeighbors)
0	<Vertex$VertexIter1: void <init>(Vertex,Vertex$VertexIter1)>/Vertex$VertexIter1.<init>/0	<Vertex$VertexIter1: void <init>(Vertex,Vertex$VertexIter1)>/l1#_0	@G_NoEdges
0	<Main: void main(java.lang.String[])>/Main.addEdge/0	<Main: void main(java.lang.String[])>/g#_16	@(Prog) /\ (Prog)
0	<Main: EdgeIfc addEdge(Graph,int)>/Graph.addEdge/0	<Main: EdgeIfc addEdge(Graph,int)>/v1#_87	@(Prog) /\ (Prog)
0	<Graph: Graph prim(Vertex)>/java.util.LinkedList.add/0	<Graph: Graph prim(Vertex)>/root#_522	@MSTPrim
0	<Edge: void display()>/java.io.PrintStream.println/0	<Edge: void display()>/$r13	@(EdgeObjects) /\ (EdgeObjects)
0	<Graph: Graph strongComponents()>/Graph.graphSearch/0	<Graph: Graph strongComponents()>/FTWS#_324	@StronglyConnected
1	<Graph: void addEdge(Vertex,Neighbor)>/Neighbor.<init>/0	<Graph: void addEdge(Vertex,Neighbor)>/$i0	@(GN_OnlyNeighbors) /\ (Undirected /\ Weighted /\ GN_OnlyNeighbors)
2	<Graph: Graph kruskal()>/Graph.addEdge/0	<Graph: Graph kruskal()>/$i5	@MSTKruskal
1	<Graph: Graph prim(Vertex)>/java.util.LinkedList.add/2	<Graph: Graph prim(Vertex)>/v#_584	@MSTPrim
1	<Graph: Graph kruskal()>/Graph$Comparator3.<init>/0	<Graph: Graph kruskal()>/$null0	@MSTKruskal
0	<Graph: Graph prim(Vertex)>/java.util.Set.add/1	<Graph: Graph prim(Vertex)>/$r3	@MSTPrim
0	<Vertex: void addAdjacent(Vertex)>/java.util.LinkedList.add/0	<Vertex: void addAdjacent(Vertex)>/n#_0	@(G_NoEdges) /\ (G_NoEdges)
0	<Vertex: void display()>/java.io.PrintStream.print/7	<Vertex: void display()>/$r38	@StronglyConnected
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/6	<Vertex: void display()>/$stringconstant7	@Cycle
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/1	<Graph: Graph kruskal()>/vaux_$$A_2#_449	@MSTKruskal
1	<Graph: Graph prim(Vertex)>/Graph.findsEdge/0	<Graph: Graph prim(Vertex)>/vxiter_$$A_4#_648	@MSTPrim
1	<Graph: Graph computeTranspose(Graph)>/java.util.Map.put/0	<Graph: Graph computeTranspose(Graph)>/v_$$A_1#_355	@(Transpose) /\ (Transpose)
0	<Graph: void addVertex(Vertex)>/java.util.LinkedList.add/0	<Graph: void addVertex(Vertex)>/v#_0
0	<Graph: Graph prim(Vertex)>/Graph.findsEdge/0	<Graph: Graph prim(Vertex)>/vtx_$$A_3#_650	@MSTPrim
0	<Vertex: void nodeSearch(WorkSpace)>/Vertex.nodeSearch/1	<Vertex: void nodeSearch(WorkSpace)>/w#_0	@SearchBase /\ BFS
0	<Vertex: EdgeIter getEdges()>/Vertex$EdgeIter1.<init>/0	<Vertex: EdgeIter getEdges()>/this#_0	@(EdgeObjects /\ G_NoEdges) /\ (EdgeObjects /\ G_NoEdges)
0	<Graph$EdgeIter1: void <init>(Graph)>/Graph.access$0/0	<Graph$EdgeIter1: void <init>(Graph)>/l1#_0	@EdgeObjects
0	<Vertex: void addWeight(int)>/java.lang.Integer.<init>/0	<Vertex: void addWeight(int)>/weight#_0	@(Weighted) /\ (Weighted /\ G_NoEdges)
0	<Main: void main(java.lang.String[])>/Main.readWeights/0	<Main: void main(java.lang.String[])>/g#_16	@(Prog) /\ (Prog)
0	<Graph: Graph prim(Vertex)>/java.util.Set.remove/1	<Graph: Graph prim(Vertex)>/$r10	@MSTPrim
0	<Edge: void adjustAdorns(EdgeIfc)>/Edge.setWeight/0	<Edge: void adjustAdorns(EdgeIfc)>/$i0	@(EdgeObjects) /\ (EdgeObjects /\ Weighted)
0	<Graph: void addEdge(Vertex,Neighbor)>/Vertex.addEdge/0	<Graph: void addEdge(Vertex,Neighbor)>/theNeighbor#_0	@(GN_OnlyNeighbors) /\ (GN_OnlyNeighbors)
0	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/Graph$Comparator3.compare/0	<Graph$Comparator3: int compare(java.lang.Object,java.lang.Object)>/$r1
0	<Graph$EdgeIter1: void <init>(Graph,Graph$EdgeIter1)>/Graph$EdgeIter1.<init>/0	<Graph$EdgeIter1: void <init>(Graph,Graph$EdgeIter1)>/l1#_0	@EdgeObjects
0	<Graph: void sortVertices(java.util.Comparator)>/java.util.Collections.sort/0	<Graph: void sortVertices(java.util.Comparator)>/$r0
0	<Main: void main(java.lang.String[])>/java.lang.StringBuilder.<init>/0	<Main: void main(java.lang.String[])>/$stringconstant0	@(Prog) /\ (Prog)
0	<Neighbor: void display()>/java.lang.StringBuilder.<init>/0	<Neighbor: void display()>/$r4	@(GN_OnlyNeighbors) /\ (GN_OnlyNeighbors)
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/0	<Vertex: void display()>/$r7	@Weighted /\ G_NoEdges
0	<Graph: VertexIter getVertices()>/VertexIter.<init>/0	<Graph: VertexIter getVertices()>/this#_0
0	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/Vertex.addAdjacent/1	<Graph: EdgeIfc addEdge(Vertex,Vertex,int)>/start#_0	@Undirected /\ G_NoEdges
0	<Main: void main(java.lang.String[])>/java.lang.StringBuilder.<init>/1	<Main: void main(java.lang.String[])>/$stringconstant1	@(Prog) /\ (Prog)
1	<Graph: Graph prim(Vertex)>/Graph.addEdge/0	<Graph: Graph prim(Vertex)>/theNewVertex#_658	@MSTPrim
0	<Vertex: void setWeight(int)>/Vertex.addWeight/0	<Vertex: void setWeight(int)>/weight#_0	@(Weighted /\ G_NoEdges) /\ (Weighted /\ G_NoEdges)
0	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/Graph$Comparator2.compare/0	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/$r1
0	<Graph: Graph prim(Vertex)>/java.util.LinkedList.set/0	<Graph: Graph prim(Vertex)>/vxiter_$$A_2_$$A_2#_581	@MSTPrim
1	<Vertex: EdgeIter getEdges()>/Vertex$EdgeIter1.<init>/0	<Vertex: EdgeIter getEdges()>/$null0	@(EdgeObjects /\ G_NoEdges) /\ (EdgeObjects /\ G_NoEdges)
0	<Graph: Graph kruskal()>/Graph$Comparator3.<init>/0	<Graph: Graph kruskal()>/this#_0	@MSTKruskal
0	<Graph: Graph prim(Vertex)>/EdgeIfc.getOtherVertex/0	<Graph: Graph prim(Vertex)>/u#_573	@MSTPrim
1	<Vertex: VertexIter getNeighbors()>/Vertex$VertexIter1.<init>/0	<Vertex: VertexIter getNeighbors()>/$null0	@(G_NoEdges) /\ (G_NoEdges)
0	<Vertex: void display()>/java.io.PrintStream.print/4	<Vertex: void display()>/$stringconstant2	@SearchBase
0	<Vertex: void addNeighbor(Neighbor)>/java.util.LinkedList.add/0	<Vertex: void addNeighbor(Neighbor)>/n#_0	@(GEN_Edges) /\ (GEN_Edges)
0	<Vertex: void nodeSearch(WorkSpace)>/WorkSpace.preVisitAction/0	<Vertex: void nodeSearch(WorkSpace)>/this#_0	@SearchBase
0	<Graph: int readNumber()>/java.lang.String.<init>/1	<Graph: int readNumber()>/$r5	@(Benchmark) /\ (Benchmark)
0	<Graph: void run(Vertex)>/java.lang.StringBuilder.<init>/0	<Graph: void run(Vertex)>/$stringconstant0	@Cycle /\ Prog
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/5	<Graph: Graph kruskal()>/vxiter_$$A_2_$$A_1#_431	@MSTKruskal
0	<Graph: Graph prim(Vertex)>/Graph.addEdge/0	<Graph: Graph prim(Vertex)>/theNewPred#_659	@MSTPrim
0	<Graph: Graph strongComponents()>/Graph.sortVertices/0	<Graph: Graph strongComponents()>/$r1	@StronglyConnected
0	<Graph: void runBenchmark(java.lang.String)>/java.lang.StringBuilder.<init>/0	<Graph: void runBenchmark(java.lang.String)>/$stringconstant0	@(Benchmark) /\ (Benchmark)
0	<Vertex: void display()>/java.io.PrintStream.print/10	<Vertex: void display()>/$r51	@MSTKruskal
2	<Main: EdgeIfc addEdge(Graph,int)>/Graph.addEdge/0	<Main: EdgeIfc addEdge(Graph,int)>/$numconstant0	@(Prog) /\ (Prog)
0	<Main: void main(java.lang.String[])>/Vertex.assignName/0	<Main: void main(java.lang.String[])>/$r9	@(Prog) /\ (Prog)
0	<Graph: Graph prim(Vertex)>/java.util.Set.remove/0	<Graph: Graph prim(Vertex)>/$r5	@MSTPrim
0	<Vertex: void nodeSearch(WorkSpace)>/Vertex.nodeSearch/0	<Vertex: void nodeSearch(WorkSpace)>/w#_0	@DFS /\ SearchBase
0	<Graph: Graph kruskal()>/Graph.findsVertex/0	<Graph: Graph kruskal()>/$r29	@MSTKruskal
0	<Vertex: VertexIter getNeighbors()>/Vertex$VertexIter1.<init>/0	<Vertex: VertexIter getNeighbors()>/this#_0	@(G_NoEdges) /\ (G_NoEdges)
0	<Vertex: void display()>/java.io.PrintStream.print/1	<Vertex: void display()>/$r9	@Weighted /\ G_NoEdges
0	<Vertex: void nodeSearch(WorkSpace)>/java.util.LinkedList.remove/0	<Vertex: void nodeSearch(WorkSpace)>/$numconstant1	@SearchBase /\ BFS
0	<Vertex$EdgeIter1: void <init>(Vertex,Vertex$EdgeIter1)>/Vertex$EdgeIter1.<init>/0	<Vertex$EdgeIter1: void <init>(Vertex,Vertex$EdgeIter1)>/l1#_0	@EdgeObjects /\ G_NoEdges
0	<Graph: void graphSearch(WorkSpace)>/Vertex.init_vertex/0	<Graph: void graphSearch(WorkSpace)>/w#_0	@SearchBase
0	<Graph: void numberVertices()>/Graph.graphSearch/0	<Graph: void numberVertices()>/$r0	@(Number) /\ (Number)
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/5	<Vertex: void display()>/$stringconstant6	@StronglyConnected
0	<Vertex: void nodeSearch(WorkSpace)>/WorkSpace.checkNeighborAction/0	<Vertex: void nodeSearch(WorkSpace)>/this#_0	@DFS /\ SearchBase
0	<Graph$Comparator3: void <init>(Graph,Graph$Comparator3)>/Graph$Comparator3.<init>/0	<Graph$Comparator3: void <init>(Graph,Graph$Comparator3)>/l1#_0	@MSTKruskal
0	<Main: void main(java.lang.String[])>/java.io.PrintStream.println/0	<Main: void main(java.lang.String[])>/$r21	@(Prog) /\ (Prog)
0	<Graph: void run(Vertex)>/java.io.PrintStream.println/0	<Graph: void run(Vertex)>/$r3	@Cycle /\ Prog
2	<Graph: Graph prim(Vertex)>/Graph.addEdge/0	<Graph: Graph prim(Vertex)>/$numconstant2	@MSTPrim
0	<Main: void main(java.lang.String[])>/Graph.findsVertex/0	<Main: void main(java.lang.String[])>/$r16	@(Prog) /\ (Prog)
0	<Graph: Graph computeTranspose(Graph)>/java.util.Map.put/0	<Graph: Graph computeTranspose(Graph)>/theName#_354	@(Transpose) /\ (Transpose)
0	<Graph: Graph prim(Vertex)>/Graph.findsVertex/0	<Graph: Graph prim(Vertex)>/$r16	@MSTPrim
0	<Graph$Comparator2: void <init>(Graph,Graph$Comparator2)>/Graph$Comparator2.<init>/0	<Graph$Comparator2: void <init>(Graph,Graph$Comparator2)>/l1#_0	@MSTPrim
0	<Graph: void display()>/java.io.PrintStream.println/0	<Graph: void display()>/$stringconstant0
0	<Graph: Graph strongComponents()>/Graph.graphSearch/1	<Graph: Graph strongComponents()>/WST#_337	@StronglyConnected
0	<Vertex: void display()>/java.io.PrintStream.print/6	<Vertex: void display()>/$r32	@Connected
0	<Graph: int readNumber()>/java.lang.String.<init>/0	<Graph: int readNumber()>/word#_208	@(Benchmark) /\ (Benchmark)
1	<Graph: Graph prim(Vertex)>/Graph$Comparator2.<init>/0	<Graph: Graph prim(Vertex)>/$null2	@MSTPrim
1	<Graph: void sortVertices(java.util.Comparator)>/java.util.Collections.sort/0	<Graph: void sortVertices(java.util.Comparator)>/c#_0
1	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/Graph$Comparator2.compare/0	<Graph$Comparator2: int compare(java.lang.Object,java.lang.Object)>/$r0
0	<Vertex: void nodeSearch(WorkSpace)>/WorkSpace.postVisitAction/0	<Vertex: void nodeSearch(WorkSpace)>/this#_0	@SearchBase
0	<Graph: void display()>/java.io.PrintStream.println/4	<Graph: void display()>/$stringconstant4	@GEN_Edges
0	<Graph: Graph prim(Vertex)>/java.util.LinkedList.add/2	<Graph: Graph prim(Vertex)>/$i4	@MSTPrim
1	<Main: void main(java.lang.String[])>/Main.addEdge/0	<Main: void main(java.lang.String[])>/i_$$A_2_$$A_7#_68	@(Prog) /\ (Prog)
0	<Graph: Graph kruskal()>/Graph.sortEdges/0	<Graph: Graph kruskal()>/$r3	@MSTKruskal
0	<Graph: EdgeIfc findsEdge(Vertex,Vertex)>/EdgeIfc.getOtherVertex/0	<Graph: EdgeIfc findsEdge(Vertex,Vertex)>/v1#_278	@(EdgeObjects) /\ (EdgeObjects)
0	<Graph: Graph prim(Vertex)>/Graph.findsVertex/1	<Graph: Graph prim(Vertex)>/$r17	@MSTPrim
0	<Vertex: void display()>/java.io.PrintStream.print/5	<Vertex: void display()>/$r27	@Number
0	<Graph: void display()>/java.io.PrintStream.println/2	<Graph: void display()>/$stringconstant2
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/3	<Graph: Graph kruskal()>/vrep#_441	@MSTKruskal
0	<Graph: EdgeIter getEdges()>/Graph$EdgeIter1.<init>/0	<Graph: EdgeIter getEdges()>/this#_0	@EdgeObjects
1	<Graph: Graph computeTranspose(Graph)>/Graph.addEdge/0	<Graph: Graph computeTranspose(Graph)>/newAdjacent#_372	@(Transpose) /\ (Transpose)
1	<Graph: void sortEdges(java.util.Comparator)>/java.util.Collections.sort/0	<Graph: void sortEdges(java.util.Comparator)>/c#_0	@(EdgeObjects) /\ (EdgeObjects)
0	<Vertex: void display()>/java.io.PrintStream.print/0	<Vertex: void display()>/$stringconstant0	@Weighted /\ G_NoEdges
0	<Main: void main(java.lang.String[])>/Graph.addVertex/0	<Main: void main(java.lang.String[])>/$r12	@(Prog) /\ (Prog)
0	<Graph: Graph prim(Vertex)>/java.util.LinkedList.add/3	<Graph: Graph prim(Vertex)>/vxiter_$$A_3#_611	@MSTPrim
0	<Vertex: void display()>/java.io.PrintStream.print/9	<Vertex: void display()>/$stringconstant8	@MSTKruskal
1	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/Graph$Comparator1.compare/0	<Graph$Comparator1: int compare(java.lang.Object,java.lang.Object)>/$r0
1	<Graph: Graph strongComponents()>/Graph$Comparator1.<init>/0	<Graph: Graph strongComponents()>/$null0	@StronglyConnected
0	<Graph: void endProfile()>/java.io.PrintStream.println/0	<Graph: void endProfile()>/$r4	@(Benchmark) /\ (Benchmark)
0	<Graph: Graph computeTranspose(Graph)>/Graph.addEdge/0	<Graph: Graph computeTranspose(Graph)>/v_$$A_4#_381	@(Transpose) /\ (Transpose)
1	<Graph: Graph kruskal()>/Graph.addEdge/0	<Graph: Graph kruskal()>/theNewEnd#_505	@MSTKruskal
0	<Edge: void display()>/java.lang.StringBuilder.<init>/1	<Edge: void display()>/$stringconstant1	@(EdgeObjects) /\ (EdgeObjects)
0	<Graph: void addEdge(Vertex,Neighbor)>/Neighbor.<init>/0	<Graph: void addEdge(Vertex,Neighbor)>/start#_0	@(GN_OnlyNeighbors) /\ (Undirected /\ Weighted /\ GN_OnlyNeighbors)
0	<Graph: void sortEdges(java.util.Comparator)>/java.util.Collections.sort/0	<Graph: void sortEdges(java.util.Comparator)>/$r0	@(EdgeObjects) /\ (EdgeObjects)
0	<Vertex: void display()>/java.io.PrintStream.print/3	<Vertex: void display()>/$r21
0	<Vertex: void display()>/java.io.PrintStream.print/11	<Vertex: void display()>/$r59	@MSTPrim
0	<Vertex: void nodeSearch(WorkSpace)>/java.util.LinkedList.add/0	<Vertex: void nodeSearch(WorkSpace)>/v_$$A_3#_219	@SearchBase /\ BFS
0	<Graph: void runBenchmark(java.lang.String)>/java.io.PrintStream.println/0	<Graph: void runBenchmark(java.lang.String)>/$r6	@(Benchmark) /\ (Benchmark)
0	<Graph: Graph prim(Vertex)>/Vertex.assignName/0	<Graph: Graph prim(Vertex)>/edgeiter_$$A_1#_635	@MSTPrim
0	<Graph: void display()>/java.io.PrintStream.println/3	<Graph: void display()>/$stringconstant3	@GEN_Edges
0	<Graph: void graphSearch(WorkSpace)>/Vertex.nodeSearch/0	<Graph: void graphSearch(WorkSpace)>/w#_0	@SearchBase
0	<Graph: Graph kruskal()>/java.util.LinkedList.add/4	<Graph: Graph kruskal()>/vaux_$$A_4#_461	@MSTKruskal
0	<Graph: void graphSearch(WorkSpace)>/WorkSpace.nextRegionAction/0	<Graph: void graphSearch(WorkSpace)>/v_$$A_3#_306	@SearchBase
0	<Vertex: void display()>/java.lang.StringBuilder.<init>/3	<Vertex: void display()>/$stringconstant4	@Number
0	<Graph: Graph kruskal()>/Graph.findsVertex/1	<Graph: Graph kruskal()>/$r30	@MSTKruskal
0	<Vertex: void display()>/java.io.PrintStream.println/0	<Vertex: void display()>/$stringconstant3	@SearchBase
0	<Edge: void display()>/java.io.PrintStream.print/0	<Edge: void display()>/$r3	@(EdgeObjects) /\ (EdgeObjects /\ Weighted)

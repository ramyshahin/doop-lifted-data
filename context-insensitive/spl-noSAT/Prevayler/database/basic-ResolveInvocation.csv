org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.configureTransactionFiltering/0	<org.prevayler.PrevaylerFactory: void configureTransactionFiltering(boolean)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@ Snapshot
javax.swing.JList	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void <init>(org.prevayler.demos.demo2.gui.AllAccountsFrame,java.lang.String)>/javax.swing.JList.addListSelectionListener/0	<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>
org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.setEnabled/0	<javax.swing.AbstractAction: void setEnabled(boolean)>
org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountEditAction	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.setEnabled/0	<javax.swing.AbstractAction: void setEnabled(boolean)>
org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.setEnabled/0	<javax.swing.AbstractAction: void setEnabled(boolean)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JTextField.setText/0	<javax.swing.JTextField: void setText(java.lang.String)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>
org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountEditAction	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.action/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountEditAction: void action(org.prevayler.demos.demo2.business.Account)>
org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>/org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction.action/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Account.addAccountListener/0	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.TransferFrame.setBounds/0	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountEditFrame.accountChanged/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JTextField.addFocusListener/0	<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: void <init>(org.prevayler.demos.demo2.business.Account,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountEditFrame.setBounds/0	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/0	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.JTextField.setEnabled/0	<javax.swing.JTextField: void setEnabled(boolean)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/1	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.gap/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/0	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.gap/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/2	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/1	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/1	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/3	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.JList	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.JList.setEnabled/0	<javax.swing.JList: void setEnabled(boolean)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/4	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.gap/1	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/2	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/5	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.gap/1	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Component gap()>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/3	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.TransferFrame.labelContainer/2	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/6	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountEditFrame.labelContainer/1	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/4	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/7	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.JTextField.setEnabled/0	<javax.swing.JTextField: void setEnabled(boolean)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.TransferFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/0	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/5	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.Account: long number()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/org.prevayler.demos.demo2.business.Account.number/1	<org.prevayler.demos.demo2.business.Account: long number()>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/0	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/1	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/2	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.parse/0	<org.prevayler.demos.demo2.gui.AccountFrame: long parse(java.lang.String)>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/org.prevayler.demos.demo2.gui.AccountEditFrame.parse/0	<org.prevayler.demos.demo2.gui.AccountFrame: long parse(java.lang.String)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.holder/0	<org.prevayler.demos.demo2.business.Account: java.lang.String holder()>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/javax.swing.JTextField.setText/0	<javax.swing.JTextField: void setText(java.lang.String)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.transactionHistory/0	<org.prevayler.demos.demo2.business.Account: java.util.List transactionHistory()>
javax.swing.JList	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/javax.swing.JList.setListData/0	<javax.swing.JList: void setListData(java.lang.Object[])>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/org.prevayler.demos.demo2.business.Account.balance/0	<org.prevayler.demos.demo2.business.Account: long balance()>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>/javax.swing.JTextField.setText/1	<javax.swing.JTextField: void setText(java.lang.String)>
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/org.prevayler.foundation.network.BaseNetworkImpl.createService/0	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver createService(org.prevayler.foundation.network.Service,int)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/org.prevayler.foundation.network.BaseNetworkImpl.createService/0	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver createService(org.prevayler.foundation.network.Service,int)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.foundation.network.BaseNetworkImpl: void startService(org.prevayler.foundation.network.Service,int)>/org.prevayler.foundation.network.BaseNetworkImpl.createService/0	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver createService(org.prevayler.foundation.network.Service,int)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.parse/1	<org.prevayler.demos.demo2.gui.AccountFrame: long parse(java.lang.String)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.Account: long number()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.TransferFrame.dispose/0	<javax.swing.JInternalFrame: void dispose()>
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>/org.prevayler.foundation.network.BaseNetworkImpl.newReceiver/0	<org.prevayler.foundation.network.NetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.ObjectReceiver findServer(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>/org.prevayler.foundation.network.BaseNetworkImpl.newReceiver/0	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(java.lang.String,int,org.prevayler.foundation.network.ObjectReceiver)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/java.sql.PreparedStatement.setString/0	<java.sql.PreparedStatement: void setString(int,java.lang.String)>
java.util.Map	<org.prevayler.foundation.network.BaseNetworkImpl: void markPortAsUsed(int,org.prevayler.foundation.network.NetworkServerObjectReceiver)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
java.util.Map	<org.prevayler.foundation.network.BaseNetworkImpl: void releasePortForReuse(int)>/java.util.Map.remove/0	<java.util.Map: java.lang.Object remove(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
java.util.ArrayList	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/java.util.ArrayList.add/0	<java.util.ArrayList: boolean add(java.lang.Object)>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.journal.PersistentJournal: void <init>(org.prevayler.implementation.PrevaylerDirectory,long,long,java.lang.String)>/org.prevayler.implementation.PrevaylerDirectory.produceDirectory/0	<org.prevayler.implementation.PrevaylerDirectory: void produceDirectory()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/org.prevayler.demos.scalability.jdbc.JDBCQueryConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.foundation.network.BaseNetworkImpl: void terminateService(org.prevayler.foundation.network.NetworkServerObjectReceiver)>/org.prevayler.foundation.network.NetworkServerObjectReceiver.shutdown/0	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void shutdown()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.Transfer: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.BankTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/0	<org.prevayler.foundation.Guided: void startTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.checkSystemVersion/0	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/0	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/1	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.sync/0	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.file/0	<org.prevayler.foundation.DurableOutputStream: java.io.File file()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.journal.PersistentJournal.handle/0	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/1	<org.prevayler.foundation.Guided: void startTurn()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.close/0	<org.prevayler.foundation.DurableOutputStream: void close()>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>/org.prevayler.demos.scalability.prevayler.QuerySystem.queryByName/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: java.util.List queryByName(java.lang.String)>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.foundation.DurableOutputStream.file/1	<org.prevayler.foundation.DurableOutputStream: java.io.File file()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.journal.PersistentJournal.handle/1	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/2	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/3	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/org.prevayler.foundation.StopWatch.millisEllapsed/0	<org.prevayler.foundation.StopWatch: long millisEllapsed()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/org.prevayler.foundation.DurableOutputStream.file/0	<org.prevayler.foundation.DurableOutputStream: java.io.File file()>
java.io.ObjectOutputStream	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/java.io.ObjectOutputStream.writeObject/0	<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>	@ Replication
java.io.ObjectOutputStream	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/java.io.ObjectOutputStream.reset/0	<java.io.ObjectOutputStream: void reset()>	@ Replication
java.io.ObjectOutputStream	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>/java.io.ObjectOutputStream.flush/0	<java.io.ObjectOutputStream: void flush()>	@ Replication
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/org.prevayler.implementation.PrevaylerDirectory.journalFile/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File journalFile(long,java.lang.String)>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.journal.PersistentJournal: org.prevayler.foundation.DurableOutputStream createOutputJournal(long)>/org.prevayler.implementation.journal.PersistentJournal.handle/0	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>
java.io.ObjectOutputStream	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.io.ObjectOutputStream.close/0	<java.io.ObjectOutputStream: void close()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.ObjectInputStreamWithClassLoader	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.io.ObjectInputStream.close/0	<java.io.ObjectInputStream: void close()>	@ ((Replication /\ Replication) /\ Replication)
java.io.ObjectInputStream	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.io.ObjectInputStream.close/0	<java.io.ObjectInputStream: void close()>	@ ((Replication /\ Replication) /\ Replication)
java.net.Socket	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>/java.net.Socket.close/0	<java.net.Socket: void close()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.PrevaylerDirectory.findInitialJournalFile/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.foundation.DurableInputStream.readChunk/0	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>
java.io.File	<org.prevayler.implementation.PrevaylerDirectory: void renameUnusedFile(java.io.File)>/java.io.File.renameTo/0	<java.io.File: boolean renameTo(java.io.File)>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/org.prevayler.implementation.PrevaylerDirectory.journalFile/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File journalFile(long,java.lang.String)>
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.NullMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.journal.PersistentJournal: void handle(java.io.IOException,java.io.File,java.lang.String)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.journal.PersistentJournal: void close()>/org.prevayler.foundation.DurableOutputStream.close/0	<org.prevayler.foundation.DurableOutputStream: void close()>
java.util.Map	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.util.Map.remove/0	<java.util.Map: java.lang.Object remove(java.lang.Object)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.prevayler.TransactionSystem: java.lang.Object put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	<org.prevayler.demos.scalability.Record: long getId()>
java.util.Map	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/java.util.Map.clear/0	<java.util.Map: void clear()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.next/0	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>
java.io.PrintStream	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ Replication
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void <init>(org.prevayler.foundation.network.OldNetwork,java.lang.String,int)>/org.prevayler.foundation.network.OldNetwork.openSocket/0	<org.prevayler.foundation.network.OldNetworkImpl: org.prevayler.foundation.network.ObjectSocket openSocket(java.lang.String,int)>	@ Replication
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.implementation.replication.ClientPublisher: void startListening()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.implementation.replication.ClientPublisher: void startListening()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: void execute(org.prevayler.Transaction)>
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.lang.Exception	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
java.io.IOException	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/java.io.IOException.printStackTrace/0	<java.io.IOException: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>/org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject.createConnection/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo1.PrimeCalculator: void <init>(org.prevayler.Prevayler)>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@ Snapshot
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: java.lang.Object readObject()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.lang.Object	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.String[]	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Object[]	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.FileManager	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Cool	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.FileLocker	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Account	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.Main	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Chunk	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.Main	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DeepCopier	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainXStream	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.Main	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Chunking	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.Capsule	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Guided	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainReplica	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainTransient	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.Record	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Turn	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
byte[]	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
char[]	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
java.io.File[]	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.lastNumber/0	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.lastNumber/1	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.clock.BrokenClock.advanceTo/0	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.clock.BrokenClock.advanceTo/0	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: void execute(org.prevayler.Transaction)>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/org.prevayler.demos.demo1.NumberKeeper.numbers/0	<org.prevayler.demos.demo1.NumberKeeper: java.util.List numbers()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.clock.BrokenClock.advanceTo/1	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.clock.BrokenClock.advanceTo/1	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.capsule/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	@ ((Replication /\ Replication) /\ Replication)
java.io.PrintStream	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.TransactionTimestamp.capsule/1	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/1	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/1	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Object	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.String[]	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Object[]	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.FileManager	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Cool	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.FileLocker	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Account	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.Main	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Chunk	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.Main	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DeepCopier	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainXStream	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.Main	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Chunking	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.Capsule	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Guided	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainReplica	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainTransient	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.Record	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Turn	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
byte[]	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
char[]	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
java.io.File[]	<org.prevayler.implementation.replication.ClientPublisher: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Object	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.String[]	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Object[]	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.FileManager	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Cool	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.FileLocker	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Account	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.Main	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Chunk	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.Main	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DeepCopier	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainXStream	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.Main	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Chunking	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.Capsule	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Guided	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainReplica	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainTransient	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.Record	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.Turn	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
byte[]	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
char[]	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
java.io.File[]	<org.prevayler.implementation.replication.ClientPublisher: void notifyMyTransactionMonitor()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ClientPublisher: void close()>/org.prevayler.foundation.network.ObjectSocket.close/0	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.lang.Object	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
java.lang.String[]	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
java.lang.Object[]	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.FileManager	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.Cool	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.FileLocker	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.Main	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.StopWatch	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.Chunk	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo1.Main	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.DeepCopier	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.MainXStream	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.publishing.POBox	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.Main	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.Chunking	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.DurableInputStream	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.Capsule	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.Guided	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.MainReplica	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.MainTransient	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.PrevaylerFactory	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.Record	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
byte[]	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
char[]	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
java.io.File[]	<org.prevayler.foundation.Cool: void wait(java.lang.Object)>/java.lang.Object.wait/0	<java.lang.Object: void wait()>
java.lang.Thread	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.implementation.replication.ServerConnection$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.implementation.replication.ServerListener	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.demos.scalability.ScalabilityTestRun$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
java.lang.Thread	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.implementation.replication.ServerConnection$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.implementation.replication.ServerListener	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.demos.scalability.ScalabilityTestRun$1	<org.prevayler.foundation.Cool: void startDaemon(java.lang.Runnable)>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void closeForReconnect()>/org.prevayler.foundation.network.ObjectSocket.close/0	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/org.prevayler.implementation.replication.ServerConnection.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ Replication
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.ObjectSocket)>/org.prevayler.implementation.replication.ServerConnection.start/0	<java.lang.Thread: void start()>	@ Replication
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: java.lang.Object readObject()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.subscribe/0	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.subscribe/0	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.publishing.POBox.waitToEmpty/0	<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void run()>/org.prevayler.implementation.replication.ServerConnection.publishRemoteTransaction/0	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void forwardToProvider(java.lang.Object)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Thread	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerListener	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.ScalabilityTestRun$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Thread	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerListener	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.ScalabilityTestRun$1	<org.prevayler.implementation.replication.ServerConnection: void startSendingClockTicks()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: java.lang.Object readObject()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/org.prevayler.implementation.publishing.TransactionPublisher.publish/0	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ServerConnection: void publishRemoteTransaction()>/org.prevayler.implementation.publishing.TransactionPublisher.publish/0	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.capsule/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>	@ Replication
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	@ Replication
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>	@ Replication
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ Replication
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/org.prevayler.foundation.network.StubbornNetwork.newInstance/0	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.ObjectSocket newInstance(java.lang.String,int)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.lang.Thread	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher$1	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection$1	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerListener	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.ScalabilityTestRun$1	<org.prevayler.implementation.replication.ServerConnection: void close()>/java.lang.Thread.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.replication.ServerConnection: void close()>/org.prevayler.implementation.replication.ServerConnection.interrupt/0	<java.lang.Thread: void interrupt()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ServerConnection: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.cancelSubscription/0	<org.prevayler.implementation.replication.ClientPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ServerConnection: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.cancelSubscription/0	<org.prevayler.implementation.publishing.AbstractPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.replication.ServerConnection: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.cancelSubscription/0	<org.prevayler.implementation.publishing.AbstractPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void sendSessionKey()>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: java.lang.Object readObject()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.StubbornClientReceiverImpl.networkRequestToReceive/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.io.IOException	<org.prevayler.implementation.replication.ServerConnection: void send(java.lang.Object)>/java.io.IOException.printStackTrace/0	<java.io.IOException: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()>	@ Snapshot
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()>	@ Snapshot
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevalentSystemGuard.subscribeTo/0	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>	@ Snapshot
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.replication.ClientPublisher: org.prevayler.Clock clock()>	@ Replication
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.publishing.AbstractPublisher: org.prevayler.Clock clock()>
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.PrevaylerImpl: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.publishing.AbstractPublisher: org.prevayler.Clock clock()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>/org.prevayler.implementation.PrevalentSystemGuard.prevalentSystem/0	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.PrevaylerImpl: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.TransactionPublisher.publish/0	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>	@ Replication
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.PrevaylerImpl: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.TransactionPublisher.publish/0	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>
java.io.PrintStream	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/org.prevayler.implementation.PrevaylerImpl.clock/0	<org.prevayler.implementation.PrevaylerImpl: org.prevayler.Clock clock()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.Query)>/org.prevayler.implementation.PrevalentSystemGuard.executeQuery/0	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@ Snapshot
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/org.prevayler.Prevayler.prevalentSystem/1	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@ Snapshot
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>/org.prevayler.implementation.TransactionWithQueryCapsule.result/0	<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.SureTransactionWithQuery)>/org.prevayler.implementation.PrevaylerImpl.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.configureTransactionFiltering/0	<org.prevayler.PrevaylerFactory: void configureTransactionFiltering(boolean)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void initializePrevayler()>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevaylerImpl: void takeSnapshot()>/org.prevayler.implementation.PrevalentSystemGuard.takeSnapshot/0	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.PrevaylerImpl: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.close/0	<org.prevayler.implementation.replication.ClientPublisher: void close()>	@ Replication
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.PrevaylerImpl: void close()>/org.prevayler.implementation.publishing.TransactionPublisher.close/0	<org.prevayler.implementation.publishing.CentralPublisher: void close()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/org.prevayler.foundation.serialization.SkaringaSerializer.createTransformer/0	<org.prevayler.foundation.serialization.SkaringaSerializer: com.skaringa.javaxml.ObjectTransformer createTransformer()>
com.skaringa.javaxml.ObjectTransformer	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/com.skaringa.javaxml.ObjectTransformer.serialize/0	<com.skaringa.javaxml.ObjectTransformer: void serialize(java.lang.Object,javax.xml.transform.Result)>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>/org.prevayler.demos.scalability.jdbc.JDBCQuerySubject.createConnection/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>/org.prevayler.foundation.serialization.SkaringaSerializer.createTransformer/0	<org.prevayler.foundation.serialization.SkaringaSerializer: com.skaringa.javaxml.ObjectTransformer createTransformer()>
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>/org.prevayler.implementation.publishing.TransactionPublisher.subscribe/0	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>	@ Replication
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.PrevalentSystemGuard: void subscribeTo(org.prevayler.implementation.publishing.TransactionPublisher)>/org.prevayler.implementation.publishing.TransactionPublisher.subscribe/0	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.capsule/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.Capsule capsule()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.transactions.Transfer: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.transfer/0	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.Capsule.executeOn/0	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.implementation.Capsule	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.Capsule.executeOn/0	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.Capsule.executeOn/0	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notifyAll/2	<java.lang.Object: void notifyAll()>
java.io.File	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.File.mkdirs/0	<java.io.File: boolean mkdirs()>
java.io.File	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.File.createNewFile/0	<java.io.File: boolean createNewFile()>
java.io.RandomAccessFile	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.RandomAccessFile.close/0	<java.io.RandomAccessFile: void close()>
java.io.RandomAccessFile	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/java.io.RandomAccessFile.close/1	<java.io.RandomAccessFile: void close()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.BrokenClock: java.util.Date time()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>
java.nio.channels.FileLock	<org.prevayler.foundation.FileLocker: void release()>/java.nio.channels.FileLock.release/0	<java.nio.channels.FileLock: void release()>
java.io.RandomAccessFile	<org.prevayler.foundation.FileLocker: void release()>/java.io.RandomAccessFile.close/0	<java.io.RandomAccessFile: void close()>
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.writeSnapshot/0	<org.prevayler.implementation.snapshot.NullSnapshotManager: void writeSnapshot(java.lang.Object,long)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.writeSnapshot/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
java.io.RandomAccessFile	<org.prevayler.foundation.FileLocker: void release()>/java.io.RandomAccessFile.close/1	<java.io.RandomAccessFile: void close()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.Account: void <init>(long,java.lang.String)>/org.prevayler.demos.demo2.business.Account.holder/0	<org.prevayler.demos.demo2.business.Account: void holder(java.lang.String)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.Account: java.lang.String toString()>/org.prevayler.demos.demo2.business.Account.numberString/0	<org.prevayler.demos.demo2.business.Account: java.lang.String numberString()>
java.io.PrintStream	<org.prevayler.foundation.monitor.SimpleMonitor: void info(java.lang.Class,java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ ((Monitor /\ Monitor) /\ Monitor)
java.util.List	<org.prevayler.demos.demo2.business.Account: void register(long,java.util.Date)>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
java.io.PrintStream	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ ((Monitor /\ Monitor) /\ Monitor)
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace(java.io.PrintStream)>	@ ((Monitor /\ Monitor) /\ Monitor)
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace(java.io.PrintStream)>	@ ((Monitor /\ Monitor) /\ Monitor)
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace(java.io.PrintStream)>	@ ((Monitor /\ Monitor) /\ Monitor)
java.lang.Exception	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace(java.io.PrintStream)>	@ ((Monitor /\ Monitor) /\ Monitor)
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.implementation.replication.ClientPublisher$1: void run()>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.implementation.replication.ClientPublisher$1: void run()>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.implementation.replication.ClientPublisher$1: void run()>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
java.lang.Exception	<org.prevayler.implementation.replication.ClientPublisher$1: void run()>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
java.util.Set	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/java.util.Set.add/0	<java.util.Set: boolean add(java.lang.Object)>
java.util.Set	<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>/java.util.Set.remove/0	<java.util.Set: boolean remove(java.lang.Object)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/org.prevayler.demos.demo2.business.AccountListener.accountChanged/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void accountChanged()>
org.prevayler.demos.demo2.gui.AllAccountsFrame	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/org.prevayler.demos.demo2.business.AccountListener.accountChanged/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountChanged()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.transactions.HolderChange: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/org.prevayler.demos.demo2.business.Account.holder/0	<org.prevayler.demos.demo2.business.Account: void holder(java.lang.String)>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.transactions.Withdrawal: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/org.prevayler.demos.demo2.business.Account.withdraw/0	<org.prevayler.demos.demo2.business.Account: void withdraw(long,java.util.Date)>
java.net.ServerSocket	<org.prevayler.foundation.network.ObjectServerSocketImpl: void close()>/java.net.ServerSocket.close/0	<java.net.ServerSocket: void close()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>/org.prevayler.implementation.TransactionTimestamp.executionTime/0	<org.prevayler.implementation.TransactionTimestamp: java.util.Date executionTime()>
java.io.ObjectOutputStream	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/java.io.ObjectOutputStream.writeObject/0	<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
java.io.ObjectOutputStream	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/java.io.ObjectOutputStream.close/0	<java.io.ObjectOutputStream: void close()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>/org.prevayler.implementation.TransactionTimestamp.toChunk/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>
org.prevayler.foundation.ObjectInputStreamWithClassLoader	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>/java.io.ObjectInputStream.close/0	<java.io.ObjectInputStream: void close()>
java.util.List	<org.prevayler.demos.demo1.NumberKeeper: void keep(int)>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
java.util.Map	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
org.prevayler.demos.demo2.gui.AllAccountsFrame	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/org.prevayler.demos.demo2.business.BankListener.accountCreated/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountCreated(org.prevayler.demos.demo2.business.Account)>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>
java.util.Map	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/java.util.Map.remove/0	<java.util.Map: java.lang.Object remove(java.lang.Object)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>/org.prevayler.foundation.serialization.XStreamSerializer.createXStream/0	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>	@ Snapshot
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.foundation.serialization.XStreamSerializer$1: java.lang.Object initialValue()>/org.prevayler.foundation.serialization.XStreamSerializer.createXStream/0	<org.prevayler.foundation.serialization.XStreamSerializer: com.thoughtworks.xstream.XStream createXStream()>
org.prevayler.demos.demo2.gui.AllAccountsFrame	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/org.prevayler.demos.demo2.business.BankListener.accountDeleted/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountDeleted(org.prevayler.demos.demo2.business.Account)>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.Main: void startSnapshots(org.prevayler.Prevayler)>/org.prevayler.Prevayler.takeSnapshot/0	<org.prevayler.implementation.PrevaylerImpl: void takeSnapshot()>	@ Snapshot
java.io.PrintStream	<org.prevayler.demos.demo2.Main: void out(java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/1	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Account.withdraw/0	<org.prevayler.demos.demo2.business.Account: void withdraw(long,java.util.Date)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/org.prevayler.demos.demo2.business.Account.deposit/0	<org.prevayler.demos.demo2.business.Account: void deposit(long,java.util.Date)>
org.prevayler.foundation.StopWatch	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>/org.prevayler.foundation.StopWatch.millisEllapsed/0	<org.prevayler.foundation.StopWatch: long millisEllapsed()>
org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>
org.prevayler.demos.demo2.gui.TransferFrame$OKAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.TransferFrame$OKAction: void action()>
org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>
org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>
org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountEditAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>
org.prevayler.demos.demo2.gui.AccountEditFrame$TransferAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.AccountEditFrame$TransferAction: void action()>
org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void action()>
org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction	<org.prevayler.demos.demo2.gui.RobustAction: void actionPerformed(java.awt.event.ActionEvent)>/org.prevayler.demos.demo2.gui.RobustAction.action/0	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.replication.ClientPublisher: org.prevayler.Clock clock()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.publishing.AbstractPublisher: org.prevayler.Clock clock()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.implementation.publishing.TransactionPublisher.clock/0	<org.prevayler.implementation.publishing.AbstractPublisher: org.prevayler.Clock clock()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.BrokenClock: java.util.Date time()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.replication.ServerConnection$1: void run()>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.LoggingMonitor: boolean isInfoEnabled(java.lang.Class)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.LoggingMonitor: boolean isInfoEnabled(java.lang.Class)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.Log4jMonitor: boolean isInfoEnabled(java.lang.Class)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.info/0	<org.prevayler.foundation.monitor.SimpleMonitor: void info(java.lang.Class,java.lang.String)>	@ Monitor
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/org.prevayler.foundation.monitor.LoggingMonitor.info/0	<org.prevayler.foundation.monitor.Log4jMonitor: void info(java.lang.Class,java.lang.String)>	@ Monitor
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.lang.Exception)>/org.prevayler.foundation.monitor.LoggingMonitor.error/0	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.lang.Exception)>/org.prevayler.foundation.monitor.LoggingMonitor.error/0	<org.prevayler.foundation.monitor.Log4jMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.LoggingMonitor: boolean isInfoEnabled(java.lang.Class)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.LoggingMonitor: boolean isInfoEnabled(java.lang.Class)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.isInfoEnabled/0	<org.prevayler.foundation.monitor.Log4jMonitor: boolean isInfoEnabled(java.lang.Class)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.info/0	<org.prevayler.foundation.monitor.SimpleMonitor: void info(java.lang.Class,java.lang.String)>	@ Monitor
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/org.prevayler.foundation.monitor.LoggingMonitor.info/0	<org.prevayler.foundation.monitor.Log4jMonitor: void info(java.lang.Class,java.lang.String)>	@ Monitor
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>/org.prevayler.foundation.monitor.LoggingMonitor.error/0	<org.prevayler.foundation.monitor.SimpleMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>/org.prevayler.foundation.monitor.LoggingMonitor.error/0	<org.prevayler.foundation.monitor.Log4jMonitor: void error(java.lang.Class,java.lang.String,java.lang.Exception)>	@ ((((Monitor /\ Monitor) /\ Monitor) /\ (Monitor /\ Monitor)) /\ Monitor)
java.io.PrintStream	<org.prevayler.demos.scalability.RecordIterator: void out(java.lang.Object)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.Object)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.holderText/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.lang.String holderText()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.business.Account.holder/0	<org.prevayler.demos.demo2.business.Account: java.lang.String holder()>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.demos.demo2.gui.AccountEditFrame.holderText/1	<org.prevayler.demos.demo2.gui.AccountFrame: java.lang.String holderText()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
java.sql.Connection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/java.sql.Connection.setAutoCommit/0	<java.sql.Connection: void setAutoCommit(boolean)>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	<org.prevayler.demos.scalability.Record: long getId()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setLong/0	<java.sql.PreparedStatement: void setLong(int,long)>
java.util.Map	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	<org.prevayler.demos.scalability.Record: java.lang.String getName()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/0	<java.sql.PreparedStatement: void setString(int,java.lang.String)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getString1/0	<org.prevayler.demos.scalability.Record: java.lang.String getString1()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/1	<java.sql.PreparedStatement: void setString(int,java.lang.String)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal1/0	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal1()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/0	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal2/0	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal2()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/1	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate1/0	<org.prevayler.demos.scalability.Record: java.util.Date getDate1()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/0	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate2/0	<org.prevayler.demos.scalability.Record: java.util.Date getDate2()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/1	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.execute/0	<java.sql.PreparedStatement: boolean execute()>
java.util.Map	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/java.util.Map.clear/0	<java.util.Map: void clear()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.next/0	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	<org.prevayler.demos.scalability.Record: java.lang.String getName()>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.prevayler.QuerySystem.queryByName/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: java.util.List queryByName(java.lang.String)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/1	<org.prevayler.demos.scalability.Record: java.lang.String getName()>
java.util.Map	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
java.util.List	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>
java.util.Map$Entry	<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/java.util.Map$Entry.setValue/0	<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>
java.sql.Statement	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/java.sql.Statement.execute/0	<java.sql.Statement: boolean execute(java.lang.String)>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/1	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.lang.String table()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.table/1	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.RecordIterator.next/0	<org.prevayler.demos.scalability.RecordIterator: org.prevayler.demos.scalability.Record next()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.insert/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.insert/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.insert/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/org.prevayler.demos.scalability.RecordIterator.hasNext/0	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>
java.sql.Connection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/java.sql.Connection.commit/0	<java.sql.Connection: void commit()>
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.demos.demo1.Main: void main(java.lang.String[])>/org.prevayler.demos.demo1.PrimeCalculator.start/0	<org.prevayler.demos.demo1.PrimeCalculator: void start()>
java.io.PrintStream	<org.prevayler.demos.demo1.Main: void printMessage()>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>
java.sql.SQLException	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void dealWithSQLException(java.sql.SQLException,java.lang.String)>/java.sql.SQLException.printStackTrace/0	<java.sql.SQLException: void printStackTrace()>
java.io.BufferedReader	<org.prevayler.demos.demo1.Main: void printMessage()>/java.io.BufferedReader.readLine/0	<java.io.BufferedReader: java.lang.String readLine()>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainSkaringa: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.lang.Exception	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.io.PrintStream	<org.prevayler.demos.demo2.MainSkaringa: void out(java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.replaceAllRecords/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.replaceAllRecords/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>/org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection.replaceAllRecords/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>
java.sql.SQLException	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.sql.Connection createConnection()>/java.sql.SQLException.printStackTrace/0	<java.sql.SQLException: void printStackTrace()>
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornNetworkProxy: void waitTillOpen()>/java.lang.Object.wait/0	<java.lang.Object: void wait()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornNetworkProxy: void openClientChannel()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>/org.prevayler.implementation.Capsule.cleanCopy/0	<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>/org.prevayler.implementation.Capsule.cleanCopy/0	<org.prevayler.implementation.TransactionCapsule: org.prevayler.implementation.Capsule cleanCopy()>
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.StubbornNetworkClientConnector.disconnect/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void disconnect()>	@ Replication
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void close()>	@ Replication
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void close()>	@ Replication
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>	@ Replication
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>	@ Replication
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.implementation.Capsule.toChunk/0	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>
org.prevayler.implementation.Capsule	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.implementation.Capsule.toChunk/0	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.implementation.Capsule.toChunk/0	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.foundation.Chunk.setParameter/0	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.foundation.Chunk.setParameter/1	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/0	<org.prevayler.foundation.Chunk: java.lang.String getParameter(java.lang.String)>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/1	<org.prevayler.foundation.Chunk: java.lang.String getParameter(java.lang.String)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/0	<java.awt.Container: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.transactions.Deposit: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>/org.prevayler.demos.demo2.business.Account.deposit/0	<org.prevayler.demos.demo2.business.Account: void deposit(long,java.util.Date)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.setBackground/0	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.setBackground/0	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>
org.prevayler.demos.demo2.gui.AccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.setBackground/0	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.setBackground/0	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/1	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/2	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/3	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/4	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/5	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.show/0	<javax.swing.JInternalFrame: void show()>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.show/0	<javax.swing.JInternalFrame: void show()>
org.prevayler.demos.demo2.gui.AccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.show/0	<javax.swing.JInternalFrame: void show()>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AccountFrame.show/0	<javax.swing.JInternalFrame: void show()>
javax.swing.JTextField	<org.prevayler.demos.demo2.gui.AccountFrame: void <init>(java.lang.String,org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JTextField.requestFocus/0	<javax.swing.JTextField: void requestFocus()>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>/org.prevayler.demos.demo2.gui.AccountFrame.addFields/0	<org.prevayler.demos.demo2.gui.TransferFrame: void addFields(javax.swing.Box)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>/org.prevayler.demos.demo2.gui.AccountFrame.addFields/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addFields(javax.swing.Box)>
org.prevayler.demos.demo2.gui.AccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>/org.prevayler.demos.demo2.gui.AccountFrame.addFields/0	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.Box fieldBox()>/org.prevayler.demos.demo2.gui.AccountFrame.addFields/0	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
org.prevayler.demos.demo2.gui.AccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/org.prevayler.demos.demo2.gui.AccountFrame.labelContainer/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/0	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountFrame: void addFields(javax.swing.Box)>/javax.swing.Box.add/1	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.TransferFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.JPanel buttonPanel()>/org.prevayler.demos.demo2.gui.AccountFrame.addButtons/0	<org.prevayler.demos.demo2.gui.TransferFrame: void addButtons(javax.swing.JPanel)>
org.prevayler.demos.demo2.gui.AccountEditFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.JPanel buttonPanel()>/org.prevayler.demos.demo2.gui.AccountFrame.addButtons/0	<org.prevayler.demos.demo2.gui.AccountEditFrame: void addButtons(javax.swing.JPanel)>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.AccountFrame: javax.swing.JPanel buttonPanel()>/org.prevayler.demos.demo2.gui.AccountFrame.addButtons/0	<org.prevayler.demos.demo2.gui.NewAccountFrame: void addButtons(javax.swing.JPanel)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>/javax.swing.Box.add/0	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
javax.swing.Box	<org.prevayler.demos.demo2.gui.AccountFrame: java.awt.Container labelContainer(java.lang.String)>/javax.swing.Box.add/1	<javax.swing.Box: java.awt.Component add(java.awt.Component)>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.pause/0	<org.prevayler.implementation.clock.PausableClock: void pause()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.resume/0	<org.prevayler.implementation.clock.PausableClock: void resume()>
java.lang.Object	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
java.lang.String[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
java.lang.Object[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.FileManager	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Cool	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.FileLocker	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.Main	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.Main	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.DeepCopier	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainXStream	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.Main	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Chunking	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.Capsule	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Guided	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainReplica	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainTransient	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.PrevaylerFactory	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.Record	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Turn	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
byte[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
char[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
java.io.File[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/0	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.resume/1	<org.prevayler.implementation.clock.PausableClock: void resume()>
java.lang.Object	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
java.lang.String[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
java.lang.Object[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.FileManager	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Cool	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.FileLocker	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.Main	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.Main	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.DeepCopier	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainXStream	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.Main	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Chunking	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.Capsule	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Guided	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainReplica	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainTransient	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.PrevaylerFactory	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.Record	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.foundation.Turn	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
byte[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
char[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
java.io.File[]	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/java.lang.Object.notifyAll/1	<java.lang.Object: void notifyAll()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.journal.Journal.append/0	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.CentralPublisher: void publishWithoutWorryingAboutNewSubscriptions(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.journal.Journal.append/0	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.clock.PausableClock.realTime/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.censorship.TransactionCensor.approve/0	<org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>	@ Censor
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.implementation.publishing.censorship.TransactionCensor.approve/0	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>	@ Censor
org.prevayler.foundation.Turn	<org.prevayler.implementation.publishing.CentralPublisher: org.prevayler.implementation.TransactionGuide approve(org.prevayler.implementation.Capsule)>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>
java.util.HashMap	<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>/java.util.HashMap.put/0	<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/0	<org.prevayler.foundation.Guided: void startTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.executionTime/0	<org.prevayler.implementation.TransactionGuide: java.util.Date executionTime()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.clock.PausableClock.advanceTo/0	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.timestamp/0	<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp timestamp()>
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.publishing.CentralPublisher.notifySubscribers/0	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/0	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.CentralPublisher: void notifySubscribers(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/1	<org.prevayler.foundation.Guided: void endTurn()>
java.util.HashMap	<org.prevayler.foundation.network.SessionsManagerImpl: void remove(org.prevayler.foundation.network.NetworkSessionId)>/java.util.HashMap.remove/0	<java.util.HashMap: java.lang.Object remove(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.update/0	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.update/0	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.nextTransaction/0	<org.prevayler.implementation.journal.PersistentJournal: long nextTransaction()>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.journal.Journal.nextTransaction/0	<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.CentralPublisher: void close()>/org.prevayler.implementation.journal.Journal.close/0	<org.prevayler.implementation.journal.PersistentJournal: void close()>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.CentralPublisher: void close()>/org.prevayler.implementation.journal.Journal.close/0	<org.prevayler.implementation.journal.TransientJournal: void close()>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>/java.io.OutputStream.flush/0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>/java.io.OutputStream.flush/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
java.io.OutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>/java.io.OutputStream.flush/0	<java.io.OutputStream: void flush()>	@ ((GZip /\ GZip) /\ GZip)
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.NewAccountFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.NewAccountFrame.setBounds/0	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
java.io.OutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>/java.io.OutputStream.write/0	<java.io.OutputStream: void write(int)>	@ ((GZip /\ GZip) /\ GZip)
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
java.io.OutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>/java.io.OutputStream.write/0	<java.io.OutputStream: void write(byte[])>	@ ((GZip /\ GZip) /\ GZip)
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.NewAccountFrame: void addButtons(javax.swing.JPanel)>/javax.swing.JPanel.add/0	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
java.io.OutputStream	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[],int,int)>/java.io.OutputStream.write/0	<java.io.OutputStream: void write(byte[],int,int)>	@ ((GZip /\ GZip) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>/org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream.write/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>/org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream.write/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopy(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>
java.util.zip.GZIPOutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/java.util.zip.GZIPOutputStream.write/0	<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>	@ ((GZip /\ GZip) /\ GZip)
java.util.zip.GZIPOutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/java.util.zip.GZIPOutputStream.close/0	<java.util.zip.GZIPOutputStream: void close()>	@ ((GZip /\ GZip) /\ GZip)
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/java.io.OutputStream.flush/0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void flush()>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/java.io.OutputStream.flush/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
java.io.OutputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/java.io.OutputStream.flush/0	<java.io.OutputStream: void flush()>	@ ((GZip /\ GZip) /\ GZip)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
java.io.PipedOutputStream	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/java.io.PipedOutputStream.close/0	<java.io.PipedOutputStream: void close()>
java.io.PipedOutputStream	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/java.io.PipedOutputStream.close/1	<java.io.PipedOutputStream: void close()>
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.foundation.DeepCopier: java.lang.Object deepCopyParallel(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.DeepCopier$Receiver.getResult/0	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>
com.thoughtworks.xstream.XStream	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/com.thoughtworks.xstream.XStream.alias/0	<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.TransactionWithQuery.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.BankTransaction: java.lang.Object executeAndQuery(java.lang.Object,java.util.Date)>
com.thoughtworks.xstream.XStream	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/com.thoughtworks.xstream.XStream.alias/1	<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
com.thoughtworks.xstream.XStream	<org.prevayler.demos.demo2.MainXStream$1: com.thoughtworks.xstream.XStream createXStream()>/com.thoughtworks.xstream.XStream.alias/2	<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.TransactionWithQueryCapsule: org.prevayler.implementation.Capsule cleanCopy()>/org.prevayler.implementation.TransactionWithQueryCapsule.serialized/0	<org.prevayler.implementation.Capsule: byte[] serialized()>
com.thoughtworks.xstream.XStream	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/com.thoughtworks.xstream.XStream.toXML/0	<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>
java.io.OutputStreamWriter	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/java.io.OutputStreamWriter.flush/0	<java.io.OutputStreamWriter: void flush()>
org.apache.log4j.Logger	<org.prevayler.foundation.monitor.Log4jMonitor: void log(java.lang.Class,org.apache.log4j.Level,java.lang.String,java.lang.Exception)>/org.apache.log4j.Logger.log/0	<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>	@ ((Monitor /\ Monitor) /\ Monitor)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.recoveredPrevalentSystem/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.implementation.PrevalentSystemGuard recoveredPrevalentSystem()>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.foundation.serialization.Serializer primarySerializer()>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void <init>(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.foundation.serialization.Serializer primarySerializer()>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setContentPane/0	<javax.swing.JInternalFrame: void setContentPane(java.awt.Container)>
org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setBackground/0	<javax.swing.JInternalFrame: void setBackground(java.awt.Color)>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.cleanCopy/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>	@ ((Censor /\ Censor) /\ Censor)
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>	@ ((Censor /\ Censor) /\ Censor)
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void approve(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.PrevalentSystemGuard.receive/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>	@ ((Censor /\ Censor) /\ Censor)
org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setBounds/0	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>
org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void <init>()>/org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame.setVisible/0	<javax.swing.JInternalFrame: void setVisible(boolean)>
javax.swing.JLabel	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>/javax.swing.JLabel.setAlignmentX/0	<javax.swing.JLabel: void setAlignmentX(float)>
java.awt.Container	<org.prevayler.demos.demo2.gui.BankFrame$RobustnessFrame: void addLine(java.lang.String)>/java.awt.Container.add/0	<java.awt.Container: java.awt.Component add(java.awt.Component)>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/org.prevayler.implementation.PrevalentSystemGuard.deepCopy/0	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>	@ ((Censor /\ Censor) /\ Censor)
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Censor /\ Censor) /\ Censor)
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Censor /\ Censor) /\ Censor)
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Censor /\ Censor) /\ Censor)
java.lang.Exception	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: void produceNewFoodTaster(long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>	@ ((Censor /\ Censor) /\ Censor)
java.util.List	<org.prevayler.implementation.publishing.AbstractPublisher: void addSubscriber(org.prevayler.implementation.publishing.TransactionSubscriber)>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.foundation.network.OldNetwork.openObjectServerSocket/0	<org.prevayler.foundation.network.OldNetworkImpl: org.prevayler.foundation.network.ObjectServerSocket openObjectServerSocket(int)>	@ Replication
org.prevayler.implementation.replication.ServerListener	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.implementation.replication.ServerListener.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ Replication
org.prevayler.implementation.replication.ServerListener	<org.prevayler.implementation.replication.ServerListener: void <init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetwork,int)>/org.prevayler.implementation.replication.ServerListener.start/0	<java.lang.Thread: void start()>	@ Replication
java.util.List	<org.prevayler.implementation.publishing.AbstractPublisher: void cancelSubscription(org.prevayler.implementation.publishing.TransactionSubscriber)>/java.util.List.remove/0	<java.util.List: boolean remove(java.lang.Object)>
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.replication.ServerListener: void run()>/org.prevayler.foundation.network.ObjectServerSocket.accept/0	<org.prevayler.foundation.network.ObjectServerSocketImpl: org.prevayler.foundation.network.ObjectSocket accept()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.io.IOException	<org.prevayler.implementation.replication.ServerListener: void run()>/java.io.IOException.printStackTrace/0	<java.io.IOException: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainXStream: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.io.PrintStream	<org.prevayler.demos.demo2.MainXStream: void out(java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.util.Map	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.demo2.gui.MatchFrame	<org.prevayler.demos.demo2.gui.MatchFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.MatchFrame.setVisible/0	<javax.swing.JInternalFrame: void setVisible(boolean)>
org.prevayler.demos.demo2.gui.MatchFrame	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/org.prevayler.demos.demo2.gui.MatchFrame.setBounds/0	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>
java.awt.Container	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/java.awt.Container.setLayout/0	<java.awt.Container: void setLayout(java.awt.LayoutManager)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.JPanel.setLayout/0	<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>
javax.swing.JButton	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.JButton.addActionListener/0	<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.JPanel.add/0	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
java.awt.Container	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/java.awt.Container.add/0	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
javax.swing.table.DefaultTableModel	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/javax.swing.table.DefaultTableModel.setColumnIdentifiers/0	<javax.swing.table.DefaultTableModel: void setColumnIdentifiers(java.lang.Object[])>
java.awt.Container	<org.prevayler.demos.demo2.gui.MatchFrame: void initUI()>/java.awt.Container.add/1	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.clock.MachineClock: void update()>/org.prevayler.implementation.clock.MachineClock.advanceTo/0	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>
javax.swing.table.DefaultTableModel	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/javax.swing.table.DefaultTableModel.setRowCount/0	<javax.swing.table.DefaultTableModel: void setRowCount(int)>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@ Snapshot
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Bank.accounts/0	<org.prevayler.demos.demo2.business.Bank: java.util.List accounts()>
net.sourceforge.javamatch.query.QuerySet	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/net.sourceforge.javamatch.query.QuerySet.addPreferred/0	<net.sourceforge.javamatch.query.QuerySet: void addPreferred(net.sourceforge.javamatch.query.MatchQuery)>
net.sourceforge.javamatch.query.QuerySet	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/net.sourceforge.javamatch.query.QuerySet.addPreferred/1	<net.sourceforge.javamatch.query.QuerySet: void addPreferred(net.sourceforge.javamatch.query.MatchQuery)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Account.balance/0	<org.prevayler.demos.demo2.business.Account: long balance()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/org.prevayler.demos.demo2.business.Account.transactionHistory/0	<org.prevayler.demos.demo2.business.Account: java.util.List transactionHistory()>
java.util.LinkedList	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.util.LinkedList.add/0	<java.util.LinkedList: boolean add(java.lang.Object)>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
javax.swing.table.DefaultTableModel	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/javax.swing.table.DefaultTableModel.addRow/0	<javax.swing.table.DefaultTableModel: void addRow(java.lang.Object[])>
java.io.PrintStream	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.Object)>
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.publishing.POBox: void run()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.POBox: void run()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.publishing.POBox: void run()>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.demos.demo1.NumberStorageTransaction: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.demo1.NumberKeeper.keep/0	<org.prevayler.demos.demo1.NumberKeeper: void keep(int)>
java.lang.Object	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
java.lang.String[]	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
java.lang.Object[]	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.FileManager	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.AccountEntry	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.Bank$1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.BaseNetworkImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.journal.PersistentJournal	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.PrevaylerDirectory$FileFilter1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.BankTransaction	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.replication.ClientPublisher	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo1.PrimeCalculator	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.Cool	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.NetworkSessionId	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.Transfer	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.FileLocker	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo1.NumberKeeper	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.Main	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.StopWatch	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.gui.MatchFrame$1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.RecordIterator	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo1.Main	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.MainSkaringa	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.publishing.CentralPublisher	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.PrevaylerDirectory$1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.DeepCopier	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.publishing.censorship.LiberalTransactionCensor	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.publishing.censorship.StrictTransactionCensor	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.publishing.AbstractPublisher	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.MainXStream	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevalenceTest	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.Main	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.AccountDeletion	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.Chunking	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.OldNetworkImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.journal.TransientJournal	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.AccountCreation	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.DurableInputStream	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.Capsule	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.Guided	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.MainReplica	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.transactions.AccountTransaction	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.MainTransient	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.PrevaylerFactory	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.DurableOutputStream	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.Record	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.MainReplicaServer	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.Turn	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
byte[]	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
char[]	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
java.io.File[]	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: void <init>(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.Account: long number()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.transactions.AccountDeletion: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.deleteAccount/0	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>
java.util.Properties	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.util.Properties.load/0	<java.util.Properties: void load(java.io.InputStream)>
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.lang.Exception	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject.isConsistent/0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>
org.prevayler.foundation.Chunk	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/0	<org.prevayler.foundation.Chunk: byte[] getBytes()>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/0	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/0	<java.io.OutputStream: void write(byte[])>
org.prevayler.foundation.Chunk	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameters/0	<org.prevayler.foundation.Chunk: java.util.Map getParameters()>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/1	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/1	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/1	<java.io.OutputStream: void write(int)>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/2	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/2	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/2	<java.io.OutputStream: void write(byte[])>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/3	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(int)>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/3	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(int)>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/3	<java.io.OutputStream: void write(int)>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/4	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/4	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/4	<java.io.OutputStream: void write(byte[])>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/5	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/5	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/5	<java.io.OutputStream: void write(byte[])>
org.prevayler.foundation.Chunk	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/1	<org.prevayler.foundation.Chunk: byte[] getBytes()>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/6	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/6	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/6	<java.io.OutputStream: void write(byte[])>
org.prevayler.foundation.gzip.NonCloseableOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/7	<org.prevayler.foundation.gzip.NonCloseableOutputStream: void write(byte[])>	@ GZip
org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/7	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[])>	@ GZip
java.io.OutputStream	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/java.io.OutputStream.write/7	<java.io.OutputStream: void write(byte[])>
java.io.PrintStream	<org.prevayler.demos.scalability.Main: void createPropertiesFile(java.io.File)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>
java.io.ByteArrayOutputStream	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/java.io.ByteArrayOutputStream.write/0	<java.io.ByteArrayOutputStream: void write(int)>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.clock.PausableClock: void <init>(org.prevayler.Clock)>/org.prevayler.implementation.clock.PausableClock.resume/0	<org.prevayler.implementation.clock.PausableClock: void resume()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.BrokenClock: java.util.Date time()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.BrokenClock: java.util.Date time()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.clock.PausableClock: void pause()>/org.prevayler.implementation.clock.PausableClock.advanceTo/0	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>/org.prevayler.implementation.clock.BrokenClock.advanceTo/0	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.clock.PausableClock: void advanceTo(java.util.Date)>/org.prevayler.implementation.clock.BrokenClock.advanceTo/0	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.BrokenClock: java.util.Date time()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.implementation.clock.PausableClock: java.util.Date realTime()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>
org.prevayler.demos.demo2.gui.BankFrame	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setDefaultCloseOperation/0	<javax.swing.JFrame: void setDefaultCloseOperation(int)>
org.prevayler.demos.demo2.gui.BankFrame	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setContentPane/0	<javax.swing.JFrame: void setContentPane(java.awt.Container)>
javax.swing.JDesktopPane	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/javax.swing.JDesktopPane.add/0	<javax.swing.JDesktopPane: java.awt.Component add(java.awt.Component)>
javax.swing.JDesktopPane	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/javax.swing.JDesktopPane.add/1	<javax.swing.JDesktopPane: java.awt.Component add(java.awt.Component)>
org.prevayler.demos.demo2.gui.BankFrame	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setBounds/0	<javax.swing.JFrame: void setBounds(int,int,int,int)>
org.prevayler.demos.demo2.gui.BankFrame	<org.prevayler.demos.demo2.gui.BankFrame: void <init>(org.prevayler.Prevayler)>/org.prevayler.demos.demo2.gui.BankFrame.setVisible/0	<javax.swing.JFrame: void setVisible(boolean)>
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>
org.prevayler.demos.demo2.gui.BankFrame$1	<org.prevayler.demos.demo2.gui.BankFrame: void refreshClock()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>
java.io.PrintStream	<org.prevayler.demos.scalability.Main: void out(java.lang.Object)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.Object)>
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.demos.scalability.prevayler.TestTransaction: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.scalability.prevayler.TransactionSystem.performTransaction/0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.startTurn/0	<org.prevayler.foundation.Guided: void startTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.checkSystemVersion/0	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.timestamp/0	<org.prevayler.implementation.TransactionGuide: org.prevayler.implementation.TransactionTimestamp timestamp()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionTimestamp.cleanCopy/0	<org.prevayler.implementation.TransactionTimestamp: org.prevayler.implementation.TransactionTimestamp cleanCopy()>
java.util.List	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/0	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/org.prevayler.implementation.TransactionGuide.endTurn/1	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.name/0	<org.prevayler.demos.scalability.QueryTestRun: java.lang.String name()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.name/0	<org.prevayler.demos.scalability.TransactionTestRun: java.lang.String name()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: java.lang.String name()>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: java.lang.String name()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.lang.String name()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: java.lang.String name()>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.lang.String name()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.name/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: java.lang.String name()>
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.prepare/0	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.prepare/0	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.prepare/0	<org.prevayler.demos.scalability.TransactionTestRun: void prepare()>
org.prevayler.demos.scalability.ScalabilityTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.getResult/0	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String getResult()>
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.getResult/0	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String getResult()>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/org.prevayler.demos.scalability.ScalabilityTestRun.getResult/0	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.String getResult()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	<org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject: void replaceAllRecords(int)>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: void prepare()>/org.prevayler.demos.scalability.ScalabilityTestSubject.replaceAllRecords/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void replaceAllRecords(int)>
org.prevayler.foundation.StopWatch	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.foundation.StopWatch.secondsEllapsed/0	<org.prevayler.foundation.StopWatch: double secondsEllapsed()>
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.reportResourcesUsed/0	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void reportResourcesUsed(java.io.PrintStream)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.reportResourcesUsed/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void reportResourcesUsed(java.io.PrintStream)>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.reportResourcesUsed/0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.reportResourcesUsed/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void reportResourcesUsed(java.io.PrintStream)>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: double performRound(int)>/org.prevayler.demos.scalability.ScalabilityTestSubject.reportResourcesUsed/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject: void reportResourcesUsed(java.io.PrintStream)>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/0	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.TransactionTimestamp	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.TransactionTimestamp.systemVersion/1	<org.prevayler.implementation.TransactionTimestamp: long systemVersion()>
org.prevayler.implementation.replication.ServerConnection	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.PrevalentSystemGuard	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.implementation.publishing.POBox	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/org.prevayler.implementation.publishing.TransactionSubscriber.receive/0	<org.prevayler.implementation.publishing.POBox: void receive(org.prevayler.implementation.TransactionTimestamp)>
org.prevayler.demos.scalability.ScalabilityTestRun$1	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThread(long,int)>/org.prevayler.demos.scalability.ScalabilityTestRun$1.start/0	<java.lang.Thread: void start()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.transactions.AccountCreation: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.createAccount/0	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>
org.prevayler.foundation.gzip.MultiMemberGZIPInputStream	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/java.io.InputStream.close/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: void close()>	@ GZip
java.io.InputStream	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/java.io.InputStream.close/0	<java.io.InputStream: void close()>
org.prevayler.foundation.monitor.NullMonitor	<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.NullMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.monitor.SimpleMonitor	<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.monitor.LoggingMonitor	<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.foundation.monitor.Log4jMonitor	<org.prevayler.foundation.DurableInputStream: void ignoreStreamCorruption(java.lang.Exception)>/org.prevayler.foundation.monitor.Monitor.notify/0	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File,java.lang.Exception)>	@ Monitor
org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: java.lang.Object createTestConnection()>
org.prevayler.demos.scalability.prevayler.PrevaylerScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<java.lang.Object: java.lang.Object createTestConnection()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionSubject: java.lang.Object createTestConnection()>
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: java.lang.Object createTestConnection()>
org.prevayler.demos.scalability.jdbc.JDBCQuerySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<org.prevayler.demos.scalability.jdbc.JDBCQuerySubject: java.lang.Object createTestConnection()>
org.prevayler.demos.scalability.jdbc.JDBCScalabilitySubject	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/org.prevayler.demos.scalability.ScalabilityTestSubject.createTestConnection/0	<java.lang.Object: java.lang.Object createTestConnection()>
org.prevayler.foundation.gzip.MultiMemberGZIPInputStream	<org.prevayler.foundation.DurableInputStream: void close()>/java.io.InputStream.close/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: void close()>	@ GZip
java.io.InputStream	<org.prevayler.foundation.DurableInputStream: void close()>/java.io.InputStream.close/0	<java.io.InputStream: void close()>
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/org.prevayler.foundation.network.NetworkServerObjectReceiverImpl.setName/0	<java.lang.Thread: void setName(java.lang.String)>	@ Replication
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/org.prevayler.foundation.network.NetworkServerObjectReceiverImpl.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ Replication
org.prevayler.foundation.network.NetworkServerObjectReceiverImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void <init>(org.prevayler.foundation.network.NetworkReceiverFactory,org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectServerSocket)>/org.prevayler.foundation.network.NetworkServerObjectReceiverImpl.start/0	<java.lang.Thread: void start()>	@ Replication
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/org.prevayler.foundation.network.ObjectServerSocket.accept/0	<org.prevayler.foundation.network.ObjectServerSocketImpl: org.prevayler.foundation.network.ObjectSocket accept()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/org.prevayler.foundation.network.NetworkReceiverFactory.newReceiver/0	<org.prevayler.foundation.network.NetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectSocket)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/org.prevayler.foundation.network.NetworkReceiverFactory.newReceiver/0	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.ObjectReceiver newReceiver(org.prevayler.foundation.network.Service,org.prevayler.foundation.network.ObjectSocket)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.ObjectServerSocketImpl	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void shutdown()>/org.prevayler.foundation.network.ObjectServerSocket.close/0	<org.prevayler.foundation.network.ObjectServerSocketImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.io.PrintStream	<org.prevayler.demos.scalability.ScalabilityTestRun: void out(java.lang.Object)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.Object)>
javax.swing.JList	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/javax.swing.JList.setSelectionMode/0	<javax.swing.JList: void setSelectionMode(int)>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.business.Bank.setBankListener/0	<org.prevayler.demos.demo2.business.Bank: void setBankListener(org.prevayler.demos.demo2.business.BankListener)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/0	<java.awt.Container: java.awt.Component add(java.awt.Component)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/1	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
java.awt.Container	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/java.awt.Container.add/2	<java.awt.Container: void add(java.awt.Component,java.lang.Object)>
org.prevayler.demos.demo2.gui.AllAccountsFrame	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.setBounds/0	<javax.swing.JInternalFrame: void setBounds(int,int,int,int)>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.Capsule: void <init>(java.lang.Object,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>
org.prevayler.demos.demo2.gui.AllAccountsFrame	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void <init>(org.prevayler.Prevayler,java.awt.Container)>/org.prevayler.demos.demo2.gui.AllAccountsFrame.show/0	<javax.swing.JInternalFrame: void show()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/org.prevayler.demos.demo2.business.Account.addAccountListener/0	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>
javax.swing.JList	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void refreshAccounts()>/javax.swing.JList.setListData/0	<javax.swing.JList: void setListData(java.lang.Object[])>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.gui.AllAccountsFrame: java.util.List accounts()>/org.prevayler.demos.demo2.business.Bank.accounts/0	<org.prevayler.demos.demo2.business.Bank: java.util.List accounts()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.AllAccountsFrame: org.prevayler.demos.demo2.business.Bank bank()>/org.prevayler.Prevayler.prevalentSystem/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object prevalentSystem()>	@ Snapshot
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountCreated(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.addAccountListener/0	<org.prevayler.demos.demo2.business.Account: void addAccountListener(org.prevayler.demos.demo2.business.AccountListener)>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void accountDeleted(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.removeAccountListener/0	<org.prevayler.demos.demo2.business.Account: void removeAccountListener(org.prevayler.demos.demo2.business.AccountListener)>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.deserialize/0	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>
org.prevayler.implementation.Capsule	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.deserialize/0	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.deserialize/0	<org.prevayler.implementation.Capsule: java.lang.Object deserialize(org.prevayler.foundation.serialization.Serializer)>
org.prevayler.implementation.TransactionWithQueryCapsule	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.justExecute/0	<org.prevayler.implementation.TransactionWithQueryCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>
org.prevayler.implementation.TransactionCapsule	<org.prevayler.implementation.Capsule: void executeOn(java.lang.Object,java.util.Date,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.Capsule.justExecute/0	<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/javax.swing.JPanel.add/0	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/javax.swing.JPanel.add/1	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
javax.swing.JPanel	<org.prevayler.demos.demo2.gui.AllAccountsFrame: javax.swing.JPanel accountButtons()>/javax.swing.JPanel.add/2	<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.Capsule: org.prevayler.foundation.Chunk toChunk()>/org.prevayler.foundation.Chunk.setParameter/0	<org.prevayler.foundation.Chunk: void setParameter(java.lang.String,java.lang.String)>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getParameter/0	<org.prevayler.foundation.Chunk: java.lang.String getParameter(java.lang.String)>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/0	<org.prevayler.foundation.Chunk: byte[] getBytes()>
org.prevayler.foundation.Chunk	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/org.prevayler.foundation.Chunk.getBytes/1	<org.prevayler.foundation.Chunk: byte[] getBytes()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Guided: void startTurn()>/org.prevayler.foundation.Turn.start/0	<org.prevayler.foundation.Turn: void start()>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Guided: void endTurn()>/org.prevayler.foundation.Turn.end/0	<org.prevayler.foundation.Turn: void end()>
org.prevayler.demos.scalability.prevayler.TransactionSystem	<org.prevayler.demos.scalability.prevayler.AllRecordsReplacement: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.scalability.prevayler.ScalabilitySystem.replaceAllRecords/0	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
org.prevayler.demos.scalability.prevayler.QuerySystem	<org.prevayler.demos.scalability.prevayler.AllRecordsReplacement: void executeOn(java.lang.Object,java.util.Date)>/org.prevayler.demos.scalability.prevayler.ScalabilitySystem.replaceAllRecords/0	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/java.lang.Thread.setName/0	<java.lang.Thread: void setName(java.lang.String)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/java.lang.Thread.setDaemon/0	<java.lang.Thread: void setDaemon(boolean)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void startReading()>/java.lang.Thread.start/0	<java.lang.Thread: void start()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/org.prevayler.foundation.network.ObjectSocket.readObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: java.lang.Object readObject()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.NetworkClientObjectReceiverImpl.close/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void closeDown()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
java.io.IOException	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void passToClient(java.lang.Object)>/java.io.IOException.printStackTrace/0	<java.io.IOException: void printStackTrace()>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/org.prevayler.foundation.network.StubbornNetworkProxy.disconnect/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void disconnect()>	@ Replication
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>/org.prevayler.foundation.network.ObjectSocket.writeObject/0	<org.prevayler.foundation.network.ObjectSocketImpl: void writeObject(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.ObjectSocketImpl	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>/org.prevayler.foundation.network.ObjectSocket.close/0	<org.prevayler.foundation.network.ObjectSocketImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/org.prevayler.foundation.network.StubbornNetworkProxy.connect/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void connect(org.prevayler.foundation.network.ObjectReceiver,org.prevayler.foundation.network.StubbornNetworkClientConnector)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.StubbornNetworkProxy.setClient/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void setClient(org.prevayler.foundation.network.ObjectReceiver)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy establishNewSession()>/org.prevayler.foundation.network.SessionsManager.add/0	<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.NetworkSessionId add(org.prevayler.foundation.network.StubbornNetworkProxy)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/org.prevayler.foundation.network.SessionsManager.find/0	<org.prevayler.foundation.network.SessionsManagerImpl: org.prevayler.foundation.network.StubbornNetworkProxy find(org.prevayler.foundation.network.NetworkSessionId)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureReplicationClient/0	<org.prevayler.PrevaylerFactory: void configureReplicationClient(java.lang.String,int)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	@ ((Replication /\ Replication) /\ Replication)
java.io.PrintStream	<org.prevayler.demos.demo2.MainReplica: void out(java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void closeSession()>/org.prevayler.foundation.network.ObjectReceiver.close/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.foundation.DeepCopier$Receiver: void <init>(java.io.InputStream,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.foundation.DeepCopier$Receiver.start/0	<java.lang.Thread: void start()>
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>
org.prevayler.foundation.network.StubbornClientReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornNetworkProxy	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.NetworkClientObjectReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.StubbornServerReceiverImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void send(java.lang.Object)>/org.prevayler.foundation.network.ObjectReceiver.receive/0	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.network.SessionsManagerImpl	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void disconnect()>/org.prevayler.foundation.network.SessionsManager.remove/0	<org.prevayler.foundation.network.SessionsManagerImpl: void remove(org.prevayler.foundation.network.NetworkSessionId)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.foundation.DeepCopier$Receiver	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/org.prevayler.foundation.DeepCopier$Receiver.join/0	<java.lang.Thread: void join()>
org.prevayler.demos.demo2.business.Account	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: void <init>(org.prevayler.demos.demo2.business.Account)>/org.prevayler.demos.demo2.business.Account.number/0	<org.prevayler.demos.demo2.business.Account: long number()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: void execute(org.prevayler.Transaction)>
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.lang.Exception	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.Bank.findAccount/0	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>
org.prevayler.demos.demo2.business.transactions.HolderChange	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.AccountTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.HolderChange: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Withdrawal	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.AccountTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.Withdrawal: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>
org.prevayler.demos.demo2.business.transactions.Deposit	<org.prevayler.demos.demo2.business.transactions.AccountTransaction: java.lang.Object executeAndQuery(org.prevayler.demos.demo2.business.Bank,java.util.Date)>/org.prevayler.demos.demo2.business.transactions.AccountTransaction.executeAndQuery/0	<org.prevayler.demos.demo2.business.transactions.Deposit: void executeAndQuery(org.prevayler.demos.demo2.business.Account,java.util.Date)>
java.io.PrintStream	<org.prevayler.demos.demo2.MainTransient: void out(java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.NewAccountFrame.holderText/0	<org.prevayler.demos.demo2.gui.AccountFrame: java.lang.String holderText()>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.Prevayler.execute/0	<org.prevayler.implementation.PrevaylerImpl: java.lang.Object execute(org.prevayler.TransactionWithQuery)>
org.prevayler.demos.demo2.gui.NewAccountFrame	<org.prevayler.demos.demo2.gui.NewAccountFrame$OKAction: void action()>/org.prevayler.demos.demo2.gui.NewAccountFrame.dispose/0	<javax.swing.JInternalFrame: void dispose()>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevaylerDirectory.produceDirectory/0	<org.prevayler.implementation.PrevaylerDirectory: void produceDirectory()>	@ Snapshot
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/org.prevayler.implementation.PrevaylerDirectory.latestSnapshot/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>	@ Snapshot
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.configureTransientMode/0	<org.prevayler.PrevaylerFactory: void configureTransientMode(boolean)>	@ Snapshot
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.lang.Exception	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createTransientPrevayler(java.io.Serializable)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.configureTransientMode/0	<org.prevayler.PrevaylerFactory: void configureTransientMode(boolean)>	@ Snapshot
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>
org.prevayler.demos.demo2.business.Account$InvalidHolder	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Account$InvalidAmount	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.demos.demo2.business.Bank$AccountNotFound	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
java.lang.Exception	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler createCheckpointPrevayler(java.io.Serializable,java.lang.String)>/java.lang.Exception.printStackTrace/0	<java.lang.Exception: void printStackTrace()>
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/org.prevayler.implementation.PrevaylerDirectory.createTempFile/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File createTempFile(java.lang.String,java.lang.String)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.io.File	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/java.io.File.delete/0	<java.io.File: boolean delete()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.snapshot.NullSnapshotManager	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.foundation.serialization.Serializer primarySerializer()>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.snapshot.GenericSnapshotManager	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.implementation.snapshot.GenericSnapshotManager.primarySerializer/0	<org.prevayler.implementation.snapshot.GenericSnapshotManager: org.prevayler.foundation.serialization.Serializer primarySerializer()>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.JavaSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/org.prevayler.foundation.serialization.Serializer.writeObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.io.FileOutputStream	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/java.io.OutputStream.close/0	<java.io.FileOutputStream: void close()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.io.FileOutputStream	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,java.io.File)>/java.io.OutputStream.close/1	<java.io.FileOutputStream: void close()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.implementation.PrevaylerDirectory	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.io.File snapshotFile(long)>/org.prevayler.implementation.PrevaylerDirectory.snapshotFile/0	<org.prevayler.implementation.PrevaylerDirectory: java.io.File snapshotFile(long,java.lang.String)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.foundation.serialization.SkaringaSerializer	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.SkaringaSerializer: java.lang.Object readObject(java.io.InputStream)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.foundation.serialization.JavaSerializer	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.JavaSerializer: java.lang.Object readObject(java.io.InputStream)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.demo2.MainXStream$1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.foundation.serialization.XStreamSerializer	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/org.prevayler.foundation.serialization.Serializer.readObject/0	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.io.FileInputStream	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/java.io.FileInputStream.close/0	<java.io.FileInputStream: void close()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
java.io.FileInputStream	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/java.io.FileInputStream.close/1	<java.io.FileInputStream: void close()>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.scalability.jdbc.JDBCQueryConnection	<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.QueryConnection.queryByName/0	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>
org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection	<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.QueryConnection.queryByName/0	<org.prevayler.demos.scalability.prevayler.PrevaylerQueryConnection: java.util.List queryByName(java.lang.String)>
org.prevayler.implementation.PrevaylerImpl	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Prevayler.clock/0	<org.prevayler.implementation.PrevaylerImpl: org.prevayler.Clock clock()>
org.prevayler.implementation.clock.BrokenClock	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.BrokenClock: java.util.Date time()>
org.prevayler.implementation.clock.MachineClock	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.MachineClock: java.util.Date time()>
org.prevayler.implementation.clock.PausableClock	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.Clock.time/0	<org.prevayler.implementation.clock.PausableClock: java.util.Date time()>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.JavaSerializer)>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.demos.demo2.gui.BankFrame	<org.prevayler.demos.demo2.gui.BankFrame$1: void run()>/org.prevayler.demos.demo2.gui.BankFrame.setTitle/0	<javax.swing.JFrame: void setTitle(java.lang.String)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>/org.prevayler.PrevaylerFactory.configureJournalSerializer/0	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.table/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.prepare/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.table/1	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: java.lang.String table()>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void <init>(java.sql.Connection)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.prepare/1	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: java.sql.PreparedStatement prepare(java.lang.String)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.JavaSerializer)>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection.insert/0	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void insert(org.prevayler.demos.scalability.Record)>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.XStreamSerializer)>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
java.sql.Connection	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>/java.sql.Connection.commit/0	<java.sql.Connection: void commit()>
org.prevayler.PrevaylerFactory	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(org.prevayler.foundation.serialization.SkaringaSerializer)>/org.prevayler.PrevaylerFactory.configureSnapshotSerializer/0	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>	@ (((Snapshot /\ Snapshot) /\ Snapshot) /\ Snapshot)
java.util.Map	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>	@ ((Snapshot /\ Snapshot) /\ Snapshot)
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getName/0	<org.prevayler.demos.scalability.Record: java.lang.String getName()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/0	<java.sql.PreparedStatement: void setString(int,java.lang.String)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getString1/0	<org.prevayler.demos.scalability.Record: java.lang.String getString1()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setString/1	<java.sql.PreparedStatement: void setString(int,java.lang.String)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal1/0	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal1()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/0	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getBigDecimal2/0	<org.prevayler.demos.scalability.Record: java.math.BigDecimal getBigDecimal2()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setBigDecimal/1	<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate1/0	<org.prevayler.demos.scalability.Record: java.util.Date getDate1()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/0	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getDate2/0	<org.prevayler.demos.scalability.Record: java.util.Date getDate2()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setDate/1	<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>
org.prevayler.demos.scalability.Record	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/org.prevayler.demos.scalability.Record.getId/0	<org.prevayler.demos.scalability.Record: long getId()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.setLong/0	<java.sql.PreparedStatement: void setLong(int,long)>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void update(org.prevayler.demos.scalability.Record)>/java.sql.PreparedStatement.execute/0	<java.sql.PreparedStatement: boolean execute()>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>/java.sql.PreparedStatement.setLong/0	<java.sql.PreparedStatement: void setLong(int,long)>
java.sql.PreparedStatement	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void delete(long)>/java.sql.PreparedStatement.execute/0	<java.sql.PreparedStatement: boolean execute()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.startTurn/0	<org.prevayler.foundation.Guided: void startTurn()>
org.prevayler.foundation.Guided	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.startTurn/0	<org.prevayler.foundation.Guided: void startTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.endTurn/0	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.foundation.Guided	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.endTurn/0	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.endTurn/1	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.foundation.Guided	<org.prevayler.foundation.DurableOutputStream: void sync(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.endTurn/1	<org.prevayler.foundation.Guided: void endTurn()>
org.prevayler.implementation.TransactionGuide	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/org.prevayler.foundation.Guided.writeTo/0	<org.prevayler.implementation.TransactionGuide: void writeTo(java.io.OutputStream)>
java.io.ByteArrayOutputStream	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.ByteArrayOutputStream.writeTo/0	<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>
java.io.ByteArrayOutputStream	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.ByteArrayOutputStream.reset/0	<java.io.ByteArrayOutputStream: void reset()>
java.io.FileOutputStream	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.FileOutputStream.flush/0	<java.io.FileOutputStream: void flush()>
java.io.FileDescriptor	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/java.io.FileDescriptor.sync/0	<java.io.FileDescriptor: void sync()>
java.io.FileOutputStream	<org.prevayler.foundation.DurableOutputStream: void close()>/java.io.FileOutputStream.close/0	<java.io.FileOutputStream: void close()>
org.prevayler.demos.demo1.NumberStorageTransaction	<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.Transaction.executeOn/0	<org.prevayler.demos.demo1.NumberStorageTransaction: void executeOn(java.lang.Object,java.util.Date)>
org.prevayler.demos.scalability.prevayler.TestTransaction	<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.Transaction.executeOn/0	<org.prevayler.demos.scalability.prevayler.TestTransaction: void executeOn(java.lang.Object,java.util.Date)>
org.prevayler.demos.scalability.prevayler.AllRecordsReplacement	<org.prevayler.implementation.TransactionCapsule: void justExecute(java.lang.Object,java.lang.Object,java.util.Date)>/org.prevayler.Transaction.executeOn/0	<org.prevayler.demos.scalability.prevayler.AllRecordsReplacement: void executeOn(java.lang.Object,java.util.Date)>
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalentSystem/0	<org.prevayler.PrevaylerFactory: void configurePrevalentSystem(java.lang.Object)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configurePrevalenceDirectory/0	<org.prevayler.PrevaylerFactory: void configurePrevalenceDirectory(java.lang.String)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.configureReplicationServer/0	<org.prevayler.PrevaylerFactory: void configureReplicationServer(int)>	@ ((((Replication /\ Replication) /\ Replication) /\ (Replication /\ Replication)) /\ Replication)
org.prevayler.PrevaylerFactory	<org.prevayler.demos.demo2.MainReplicaServer: void main(java.lang.String[])>/org.prevayler.PrevaylerFactory.create/0	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>	@ ((Replication /\ Replication) /\ Replication)
java.io.PrintStream	<org.prevayler.demos.demo2.MainReplicaServer: void out(java.lang.String)>/java.io.PrintStream.println/0	<java.io.PrintStream: void println(java.lang.String)>	@ ((Replication /\ Replication) /\ Replication)
org.prevayler.demos.scalability.QueryTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.executeOperation/0	<org.prevayler.demos.scalability.QueryTestRun: void executeOperation(java.lang.Object,long)>
org.prevayler.demos.scalability.TransactionTestRun	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/org.prevayler.demos.scalability.ScalabilityTestRun.executeOperation/0	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>
java.util.List	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
org.prevayler.foundation.gzip.MultiMemberGZIPInputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/org.prevayler.foundation.gzip.MultiMemberGZIPInputStream.read/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.MultiMemberGZIPInputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[])>/org.prevayler.foundation.gzip.MultiMemberGZIPInputStream.read/0	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.foundation.gzip.ContinuableGZIPInputStream	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/org.prevayler.foundation.gzip.ContinuableGZIPInputStream.remainingInput/0	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>	@ (((Replication /\ Replication) /\ Replication) /\ GZip)
org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.TransactionConnection.performTransaction/0	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection	<org.prevayler.demos.scalability.TransactionTestRun: void executeOperation(java.lang.Object,long)>/org.prevayler.demos.scalability.TransactionConnection.performTransaction/0	<org.prevayler.demos.scalability.jdbc.JDBCTransactionConnection: void performTransaction(org.prevayler.demos.scalability.Record,org.prevayler.demos.scalability.Record,long)>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Turn: void end()>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/java.lang.Object.notify/0	<java.lang.Object: void notify()>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Turn: void alwaysSkip()>/org.prevayler.foundation.Turn.end/0	<org.prevayler.foundation.Turn: void end()>
org.prevayler.foundation.Turn	<org.prevayler.foundation.Turn: void alwaysSkip()>/org.prevayler.foundation.Turn.next/0	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>

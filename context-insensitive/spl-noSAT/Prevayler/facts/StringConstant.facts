\\"QueryTest\\"
Invalid holder name.
QueryTest
QueryTest
QueryTest
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
Transfer
<<\\"Account \\">>
From Account
Transaction History
To Account
Amount
Balance
yyyy/MM/dd  hh:mm:ss.SSS
OK
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
Port In Service	@(Replication) /\ (Replication)
<<\\"selecting record from \\">>
Port Not in Service	@(Replication) /\ (Replication)
Journal.update() has to be called at least once before Journal.append().
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
writing to
closing
creating
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
0000000000000000000
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
<<\\"Error reading file list from directory \\">>
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
Create
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
update() must be called at least once
The replication logic is still under development.	@Replication
Prevayler
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
<<\\"Unexpected Exception: \\">>
<<\\"Primes found: \\">>
Unexpected InterruptedException.	@(Replication) /\ (Replication)
Unexpected Exception was thrown.
<<\\"Prevayler Stubborn Client \\">>	@Replication
Withdraw...
Withdrawal
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
SubscriberUpToDate	@(Replication) /\ (Replication)
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
<<\\"Disk space used: \\">>
Unexpected Exception thrown.
journal
<<\\"Unable to serialize with Skaringa: \\">>
<<\\"Unable to deserialize with Skaringa: \\">>
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
<<\\"Unable to start Skaringa: \\">>
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
locked
Already locked internally
rw
<<\\"\\">>
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Already locked externally
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
<<\\"\\">>
<<\\"\\">>
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
00000
\n	@(Monitor) /\ (Monitor)
\n	@(Monitor) /\ (Monitor)
Amount must be greater than zero.
Amount maximum (10000) exceeded.
Deposit...
Deposit
<<\\"Attempted to process \\">>
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2
Runtime Exception simulated for rollback demonstration purposes.
Error
Edit
<<\\"Creating \\">>
setting AutoCommit to false
<<\\"insert into \\">>
inserting record
<<\\"preparing statement: \\">>
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
<<\\"SQLException \\">>
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
<<\\"Exception loading JDBC driver class: \\">>
JDBC
<<\\"Exception while trying to connect: \\">>
systemVersion
executionTime
systemVersion
executionTime
North
East
Transfer...
West
Center
South
Holder
#
New Account
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
Interesting accounts
Refresh
South
Match
Account
Balance
#Entries
Center
balance()
transactionHistory().size()
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
You can edit this file to configure the tests for the next run.\n
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
Invalid parameter name \'
Invalid parameter value \'
ScalabilityTest.properties
Creating the properties file.
<<HASH:1156460636>>
Chunk header corrupted
;=\r\n
Unexpected end of stream in chunk data
NumberOfObjects
ONE_HUNDRED_THOUSAND
Unexpected end of stream in chunk trailer
ONE_MILLION
Chunk trailer corrupted
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
Unexpected end of stream in chunk header
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
Bank
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
Journal.update() has to be called at least once before Journal.journal().
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"Expected \\">>
<<\\"--------- Round Result: \\">>
update() must be called at least once
<<HASH:-279482281>>
Prevayler Network Server Receiver	@Replication
0.00
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
All Accounts
Center
South
Unable to serialize transaction
Unable to deserialize transaction
withQuery
withQuery
Delete
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
<<\\"Unexpected Exception: \\">>
<<HASH:-595253473>>
OK
Primary suffix \'	@Snapshot
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
snapshot	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
Query Test
NAME
hh:mm:ss
<<\\"Bank - \\">>
journal
xstreamjournal
skaringajournal
<<\\"update \\">>
<<\\"delete from \\">>
Read the javadoc to this method.
TRANSACTION_TEST
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
commiting transaction
Prevalence
updating record
The prevalent system must be configured.
deleting record
journal
snapshot	@(Snapshot) /\ (Snapshot)
already closed
already closed
<<\\"Account not found: \\">>
NAME
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
Transaction Test

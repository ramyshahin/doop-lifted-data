<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/if/instruction7	1	<org.prevayler.demos.scalability.prevayler.PrevaylerQuerySubject: void <init>()>/$z0
<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction3	1	<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/$z0
<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction5	1	<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/$z2
<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/if/instruction15	1	<org.prevayler.foundation.FileManager: void produceDirectory(java.io.File)>/$z1
<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/if/instruction5	1	<org.prevayler.demos.demo2.gui.AllAccountsFrame$SelectedAccountAction: void refreshEnabled()>/$r2
<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/if/instruction9	1	<org.prevayler.demos.demo2.business.Bank$1: int compare(java.lang.Object,java.lang.Object)>/$b2
<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/if/instruction4	1	<org.prevayler.demos.demo2.gui.AccountEditFrame: java.lang.Number enterAmount(java.lang.String)>/amountText#_94
<org.prevayler.foundation.network.BaseNetworkImpl: void checkPortNotUsed(int)>/if/instruction7	1	<org.prevayler.foundation.network.BaseNetworkImpl: void checkPortNotUsed(int)>/$r2	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/if/instruction22	1	<org.prevayler.demos.scalability.jdbc.JDBCQueryConnection: java.util.List queryByName(java.lang.String)>/$z0
<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver locateService(int)>/if/instruction8	1	<org.prevayler.foundation.network.BaseNetworkImpl: org.prevayler.foundation.network.NetworkServerObjectReceiver locateService(int)>/service#_70	@(Replication) /\ (Replication)
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction4	1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction14	1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/$z1
<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction46	1	<org.prevayler.implementation.journal.PersistentJournal: void append(org.prevayler.implementation.TransactionGuide)>/outputJournalToClose_$$A_2#_88
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction3	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/$r0
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction5	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/$z0
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/if/instruction7	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalStillValid()>/$z1
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/if/instruction4	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$b1
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/if/instruction9	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooOld()>/$b4
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/if/instruction4	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$b1
<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/if/instruction10	1	<org.prevayler.implementation.journal.PersistentJournal: boolean isOutputJournalTooBig()>/$b4
<org.prevayler.implementation.PrevaylerDirectory: void checkValidSnapshotSuffix(java.lang.String)>/if/instruction3	1	<org.prevayler.implementation.PrevaylerDirectory: void checkValidSnapshotSuffix(java.lang.String)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction6	1	<org.prevayler.implementation.journal.PersistentJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/initialJournal#_152
<org.prevayler.implementation.PrevaylerDirectory: void checkValidJournalSuffix(java.lang.String)>/if/instruction3	1	<org.prevayler.implementation.PrevaylerDirectory: void checkValidJournalSuffix(java.lang.String)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction5	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction8	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$b2
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction24	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$b4
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction36	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$b6
<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/if/instruction44	1	<org.prevayler.implementation.journal.PersistentJournal: void initializeNextTransaction(long,long)>/$b0
<org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>/if/instruction5	1	<org.prevayler.implementation.PrevaylerDirectory: long version(java.io.File,java.lang.String)>/$z0
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction4	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/files#_101
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction21	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/$b0
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction36	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/i_$$A_1#_107
<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/if/instruction36	2	<org.prevayler.implementation.PrevaylerDirectory: java.io.File latestSnapshot()>/$i1
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/if/instruction17	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/$b1
<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/if/instruction22	1	<org.prevayler.implementation.PrevaylerDirectory: java.io.File findInitialJournalFile(long)>/i_$$A_1#_129
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction22	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$b3
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction26	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$z0
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction42	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$b1
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction73	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$z1
<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/if/instruction77	1	<org.prevayler.implementation.journal.PersistentJournal: long recoverPendingTransactions(org.prevayler.implementation.publishing.TransactionSubscriber,long,java.io.File)>/$z2
<org.prevayler.implementation.journal.PersistentJournal: void close()>/if/instruction3	1	<org.prevayler.implementation.journal.PersistentJournal: void close()>/$r0
<org.prevayler.implementation.journal.PersistentJournal: long nextTransaction()>/if/instruction3	1	<org.prevayler.implementation.journal.PersistentJournal: long nextTransaction()>/$z0
<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/if/instruction9	1	<org.prevayler.demos.scalability.prevayler.TransactionSystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$z0
<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction5	1	<org.prevayler.implementation.replication.ClientPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$r0	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction4	1	<org.prevayler.implementation.replication.ClientPublisher: void publish(org.prevayler.implementation.Capsule)>/$r0	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/if/instruction3	1	<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/$r0	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/if/instruction7	1	<org.prevayler.implementation.replication.ClientPublisher: void throwEventualErrors()>/$r1	@(Replication) /\ (Replication)
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction6	1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$i0
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction17	1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/$z0
<org.prevayler.demos.demo1.PrimeCalculator: void start()>/if/instruction38	1	<org.prevayler.demos.demo1.PrimeCalculator: void start()>/primeCandidate_$$A_1#_39
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction5	1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction18	1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$z1	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction24	1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$z2	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction30	1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$z3	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/if/instruction41	1	<org.prevayler.implementation.replication.ClientPublisher: void receiveTransactionFromServer()>/$r2	@(Replication) /\ (Replication)
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction3	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/candidate#_0
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction6	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/candidate#_0
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction10	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/$i0
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction19	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/$i2
<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/if/instruction27	1	<org.prevayler.demos.demo1.PrimeCalculator: boolean isPrime(int)>/$b1
<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/if/instruction5	1	<org.prevayler.demos.demo2.gui.AccountEditFrame$WithdrawAction: void action()>/amount#_87
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/if/instruction4	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void networkRequestToReceive(java.lang.Object)>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/if/instruction7	1	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl$1: void run()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/if/instruction3	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void waitIfNotOpen()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/if/instruction3	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void shutdown()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/if/instruction4	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/$i1	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/if/instruction4	2	<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsOpen()>/$i0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/if/instruction4	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/$i1	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/if/instruction4	2	<org.prevayler.foundation.network.StubbornClientReceiverImpl: boolean sessionIsConnected()>/$i0	@(Replication) /\ (Replication)
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction5	1	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r0	@Replication
<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction5	2	<org.prevayler.implementation.replication.ServerConnection: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r1	@Replication
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/if/instruction17	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void run()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/if/instruction12	1	<org.prevayler.foundation.network.StubbornClientReceiverImpl: void startReading()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction3	1	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/other#_0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction7	1	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction14	1	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/$b2	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction20	1	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/$i4	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/if/instruction20	2	<org.prevayler.foundation.network.NetworkSessionId: boolean equals(java.lang.Object)>/$i3	@(Replication) /\ (Replication)
<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/if/instruction6	1	<org.prevayler.implementation.clock.BrokenClock: void advanceTo(java.util.Date)>/$b1
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void <init>(java.lang.String,java.lang.String)>/if/instruction11	1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void <init>(java.lang.String,java.lang.String)>/$z0
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/if/instruction21	1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/i_$$A_1#_31
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/if/instruction21	2	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: void reportResourcesUsed(java.io.PrintStream)>/$i0
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/if/instruction9	1	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/$i0
<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/if/instruction9	2	<org.prevayler.demos.scalability.prevayler.PrevaylerTransactionSubject: boolean isConsistent()>/expectedResult#_37
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/if/instruction5	1	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object prevalentSystem()>/$r1
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction9	1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/$r1
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction17	1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/$b2
<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/if/instruction37	1	<org.prevayler.implementation.PrevalentSystemGuard: void receive(org.prevayler.implementation.TransactionTimestamp)>/$z0
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/if/instruction10	1	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$z0
<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/if/instruction36	1	<org.prevayler.foundation.FileLocker: void <init>(java.io.File)>/$r12
<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/if/instruction7	1	<org.prevayler.implementation.PrevalentSystemGuard: java.lang.Object executeQuery(org.prevayler.Query,org.prevayler.Clock)>/$r1
<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction6	1	<org.prevayler.implementation.PrevalentSystemGuard: void takeSnapshot(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r1	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction10	1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$b1
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction12	1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$r14
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction14	1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$r1
<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/if/instruction21	1	<org.prevayler.implementation.PrevalentSystemGuard: org.prevayler.implementation.PrevalentSystemGuard deepCopy(long,org.prevayler.foundation.serialization.Serializer)>/$b3
<org.prevayler.demos.demo2.business.Account: void verify(long)>/if/instruction4	1	<org.prevayler.demos.demo2.business.Account: void verify(long)>/$b0
<org.prevayler.demos.demo2.business.Account: void verify(long)>/if/instruction11	1	<org.prevayler.demos.demo2.business.Account: void verify(long)>/$b1
<org.prevayler.demos.demo2.business.Account: java.util.Set listeners()>/if/instruction3	1	<org.prevayler.demos.demo2.business.Account: java.util.Set listeners()>/$r0
<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/if/instruction9	1	<org.prevayler.demos.demo2.business.Account: void notifyListeners()>/$z0
<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/if/instruction3	1	<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/holder#_0
<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/if/instruction5	1	<org.prevayler.demos.demo2.business.Account: void verify(java.lang.String)>/$z0
<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/if/instruction5	1	<org.prevayler.demos.demo2.gui.AccountEditFrame$DepositAction: void action()>/amount#_72
<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/if/instruction6	1	<org.prevayler.implementation.TransactionGuide: void checkSystemVersion(long)>/$b1
<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/if/instruction4	1	<org.prevayler.demos.demo1.NumberKeeper: int lastNumber()>/$z0
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/if/instruction15	1	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account createAccount(java.lang.String)>/$r4
<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/if/instruction9	1	<org.prevayler.demos.demo2.business.Bank: void deleteAccount(long)>/$r3
<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/if/instruction4	1	<org.prevayler.demos.demo2.business.Bank: org.prevayler.demos.demo2.business.Account findAccount(long)>/account#_43
<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/if/instruction10	1	<org.prevayler.demos.demo2.business.Bank: void transfer(long,long,long,java.util.Date)>/$b0
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/if/instruction5	1	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String)>/$z0	@(Monitor) /\ (Monitor)
<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/if/instruction6	1	<org.prevayler.foundation.monitor.LoggingMonitor: void notify(java.lang.Class,java.lang.String,java.io.File)>/$z0	@(Monitor) /\ (Monitor)
<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/if/instruction4	1	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/$i1
<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/if/instruction4	2	<org.prevayler.demos.scalability.RecordIterator: boolean hasNext()>/$i0
<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/if/instruction3	1	<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/$i0
<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/if/instruction15	1	<org.prevayler.demos.scalability.RecordIterator: void indicateProgress()>/$i2
<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/if/instruction9	1	<org.prevayler.demos.demo2.gui.AccountEditFrame$HolderListener: void focusLost(java.awt.event.FocusEvent)>/$z0
<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/if/instruction9	1	<org.prevayler.demos.scalability.prevayler.QuerySystem: void replaceAllRecords(org.prevayler.demos.scalability.RecordIterator)>/$z0
<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/if/instruction5	1	<org.prevayler.demos.scalability.prevayler.QuerySystem: void put(org.prevayler.demos.scalability.Record)>/records#_36
<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/if/instruction13	1	<org.prevayler.demos.scalability.prevayler.QuerySystem: void makeReadOnly()>/$z0
<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/if/instruction32	1	<org.prevayler.demos.scalability.jdbc.JDBCScalabilityConnection: void replaceAllRecords(int)>/$z1
<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/if/instruction4	1	<org.prevayler.foundation.network.StubbornNetworkProxy: void receive(java.lang.Object)>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.ObjectInputStreamWithClassLoader: java.lang.Class resolveClass(java.io.ObjectStreamClass)>/if/instruction4	1	<org.prevayler.foundation.ObjectInputStreamWithClassLoader: java.lang.Class resolveClass(java.io.ObjectStreamClass)>/$r0
<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/if/instruction4	1	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean forwarded(java.lang.Object)>/$r0	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction5	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/$z0
<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction8	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/$z1
<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/if/instruction10	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest$PrevalenceFilter: boolean accept(java.io.File)>/$z2
<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/if/instruction7	1	<org.prevayler.foundation.network.StubbornNetworkProxy: void attemptToForward(java.lang.Object)>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornNetworkProxy: boolean isOpen()>/if/instruction3	1	<org.prevayler.foundation.network.StubbornNetworkProxy: boolean isOpen()>/$r0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/if/instruction3	1	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/$r0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/if/instruction7	1	<org.prevayler.foundation.network.StubbornNetworkProxy: void closeClientChannel()>/$r1	@(Replication) /\ (Replication)
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction7	1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$i0
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction29	1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$i8
<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/if/instruction47	1	<org.prevayler.implementation.publishing.CentralPublisher: void publish(org.prevayler.implementation.Capsule)>/$i5
<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction11	1	<org.prevayler.implementation.publishing.CentralPublisher: void subscribe(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$i0
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/if/instruction6	1	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void write(byte[],int,int)>/$r0	@(GZip) /\ (GZip)
<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/if/instruction3	1	<org.prevayler.foundation.gzip.MultiMemberGZIPOutputStream: void flush()>/$r0	@(GZip) /\ (GZip)
<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>/if/instruction3	1	<org.prevayler.implementation.TransactionWithQueryCapsule: java.lang.Object result()>/$r0
<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/if/instruction5	1	<org.prevayler.foundation.serialization.XStreamSerializer: void writeObject(java.io.OutputStream,java.lang.Object)>/$r0
<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/if/instruction5	1	<org.prevayler.foundation.serialization.XStreamSerializer: java.lang.Object readObject(java.io.InputStream)>/$r1
<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: org.prevayler.implementation.PrevalentSystemGuard royalFoodTaster(long)>/if/instruction4	1	<org.prevayler.implementation.publishing.censorship.StrictTransactionCensor: org.prevayler.implementation.PrevalentSystemGuard royalFoodTaster(long)>/$r0	@(Censor) /\ (Censor)
<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/if/instruction10	1	<org.prevayler.implementation.publishing.AbstractPublisher: void notifySubscribers(org.prevayler.implementation.TransactionTimestamp)>/$z0
<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/if/instruction6	1	<org.prevayler.foundation.network.StubbornNetworkImpl: org.prevayler.foundation.network.SessionsManager getSessionManager(org.prevayler.foundation.network.Service)>/sessionsManager#_41	@(Replication) /\ (Replication)
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/if/instruction3	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/$z0
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/if/instruction6	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void delete(java.io.File)>/$z1
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction6	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/files#_21
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction16	1	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/i_$$A_1#_24
<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/if/instruction16	2	<org.prevayler.demos.scalability.prevayler.PrevalenceTest: void deleteDirectoryContents(java.io.File)>/$i0
<org.prevayler.implementation.clock.MachineClock: void update()>/if/instruction5	1	<org.prevayler.implementation.clock.MachineClock: void update()>/$b1
<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/if/instruction48	1	<org.prevayler.demos.demo2.gui.MatchFrame: void refreshTable()>/$z0
<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/if/instruction16	1	<org.prevayler.implementation.publishing.POBox: org.prevayler.implementation.TransactionTimestamp waitForNotification()>/$i0
<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/if/instruction5	1	<org.prevayler.foundation.gzip.ContinuableGZIPInputStream: java.io.InputStream remainingInput()>/afterTrailer#_16	@(GZip) /\ (GZip)
<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/if/instruction10	1	<org.prevayler.implementation.publishing.POBox: void waitToEmpty()>/$i0
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction28	1	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z0
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction31	1	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z1
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction34	1	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z2
<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/if/instruction37	1	<org.prevayler.demos.scalability.Main: void main(java.lang.String[])>/$z3
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/if/instruction12	1	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$z0
<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/if/instruction16	1	<org.prevayler.demos.scalability.Main: void runPrevaylerTransaction()>/$z1
<org.prevayler.demos.scalability.Main: java.io.File propertiesFile()>/if/instruction6	1	<org.prevayler.demos.scalability.Main: java.io.File propertiesFile()>/$z0
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction20	1	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$z1
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction31	1	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$z2
<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/if/instruction50	1	<org.prevayler.foundation.Chunking: void writeChunk(java.io.OutputStream,org.prevayler.foundation.Chunk)>/$z0
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction3	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/header#_52
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction9	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/$z0
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction5	1	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/$z0
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction28	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/$z1
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction10	1	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/$z1
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction15	1	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/$z2
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction34	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/read_$$A_1#_76
<org.prevayler.demos.scalability.Main: int numberOfObjects()>/if/instruction20	1	<org.prevayler.demos.scalability.Main: int numberOfObjects()>/$z3
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction44	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/value_$$A_1_$$A_1#_81
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction44	2	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/size#_64
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction47	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/read_$$A_2#_83
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction48	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/read_$$A_2#_83
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction49	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/lf#_84
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction54	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/read_$$A_2#_83
<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/if/instruction55	1	<org.prevayler.foundation.Chunking: org.prevayler.foundation.Chunk readChunk(java.io.InputStream)>/lf#_84
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction6	1	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/b#_97
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction8	1	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/$i0
<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/if/instruction16	1	<org.prevayler.foundation.Chunking: java.lang.String readLine(java.io.InputStream)>/b#_97
<org.prevayler.demos.scalability.Main: java.lang.String prevaylerJournalSerializer()>/if/instruction3	1	<org.prevayler.demos.scalability.Main: java.lang.String prevaylerJournalSerializer()>/result#_277
<org.prevayler.demos.scalability.Main: java.lang.String property(java.lang.String)>/if/instruction4	1	<org.prevayler.demos.scalability.Main: java.lang.String property(java.lang.String)>/result#_327
<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/if/instruction5	1	<org.prevayler.demos.scalability.Main: boolean booleanProperty(java.lang.String)>/result#_342
<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/if/instruction4	1	<org.prevayler.implementation.journal.TransientJournal: void append(org.prevayler.implementation.TransactionGuide)>/$z0
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction16	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/minThreads#_0
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction16	2	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/maxThreads#_0
<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/if/instruction21	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void <init>(org.prevayler.demos.scalability.ScalabilityTestSubject,int,int,int)>/minThreads#_0
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction9	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/$b0
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction15	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/threads_$$A_1#_80
<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/if/instruction15	2	<org.prevayler.demos.scalability.ScalabilityTestRun: void performTest(int,int)>/maxThreads#_0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction5	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$z0
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction12	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$b1
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction30	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/i#_42
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction30	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$i4
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction56	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$b9
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction74	1	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/i_$$A_1#_53
<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/if/instruction74	2	<org.prevayler.implementation.journal.TransientJournal: void update(org.prevayler.implementation.publishing.TransactionSubscriber,long)>/$i5
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/if/instruction14	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/i_$$A_1#_113
<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/if/instruction14	2	<org.prevayler.demos.scalability.ScalabilityTestRun: void startThreads(int)>/threads#_0
<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/if/instruction3	1	<org.prevayler.implementation.journal.TransientJournal: long nextTransaction()>/$z0
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/if/instruction3	1	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/$z0
<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/if/instruction9	1	<org.prevayler.foundation.DurableInputStream: org.prevayler.foundation.Chunk readChunk()>/chunk#_42
<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/if/instruction7	1	<org.prevayler.demos.scalability.ScalabilityTestRun: java.lang.Object acquireConnection()>/$z0
<org.prevayler.demos.scalability.ScalabilityTestRun: void stopThreads()>/if/instruction7	1	<org.prevayler.demos.scalability.ScalabilityTestRun: void stopThreads()>/$i0
<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/if/instruction17	1	<org.prevayler.foundation.network.NetworkServerObjectReceiverImpl: void run()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/if/instruction9	1	<org.prevayler.demos.demo2.gui.AllAccountsFrame: void listenToAccounts()>/$z0
<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/if/instruction6	1	<org.prevayler.implementation.Capsule: org.prevayler.implementation.Capsule fromChunk(org.prevayler.foundation.Chunk)>/withQuery#_77
<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/if/instruction4	1	<org.prevayler.demos.demo2.gui.AllAccountsFrame$AccountDeleteAction: void action(org.prevayler.demos.demo2.business.Account)>/option#_137
<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/if/instruction10	1	<org.prevayler.foundation.network.NetworkClientObjectReceiverImpl: void receiveFromNetwork()>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/if/instruction4	1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void receive(java.lang.Object)>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/if/instruction5	1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void close()>/$r0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/if/instruction4	1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/$z0	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/if/instruction13	1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: void handleSession(java.lang.Object)>/$z1	@(Replication) /\ (Replication)
<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/if/instruction5	1	<org.prevayler.foundation.network.StubbornServerReceiverImpl: org.prevayler.foundation.network.StubbornNetworkProxy reestablishSession(org.prevayler.foundation.network.NetworkSessionId)>/proxy#_92	@(Replication) /\ (Replication)
<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/if/instruction5	1	<org.prevayler.demos.demo2.MainReplica: void main(java.lang.String[])>/$i0	@(Replication) /\ (Replication)
<org.prevayler.foundation.DeepCopier$Receiver: void run()>/if/instruction30	1	<org.prevayler.foundation.DeepCopier$Receiver: void run()>/$i0
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction11	1	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/$r0
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction18	1	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/$r1
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction22	1	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/$r2
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction26	1	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/$r3
<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/if/instruction30	1	<org.prevayler.foundation.DeepCopier$Receiver: java.lang.Object getResult()>/$r4
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction15	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/$z0	@Snapshot
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction17	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/$z1	@Snapshot
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction34	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/iterator_$$A_1#_41	@Snapshot
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/if/instruction41	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void <init>(java.util.Map,java.lang.String,java.lang.Object,org.prevayler.implementation.PrevaylerDirectory,org.prevayler.foundation.serialization.Serializer)>/iterator_$$A_1#_41	@Snapshot
<org.prevayler.PrevaylerFactory: org.prevayler.Clock clock()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.Clock clock()>/$r0
<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/if/instruction17	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: void writeSnapshot(java.lang.Object,long)>/$z1	@(Snapshot) /\ (Snapshot)
<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/if/instruction10	1	<org.prevayler.implementation.snapshot.GenericSnapshotManager: java.lang.Object readSnapshot(java.io.File)>/$z0	@(Snapshot) /\ (Snapshot)
<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/if/instruction6	1	<org.prevayler.PrevaylerFactory: void configureJournalSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/$r0
<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/if/instruction8	1	<org.prevayler.PrevaylerFactory: void configureSnapshotSerializer(java.lang.String,org.prevayler.foundation.serialization.Serializer)>/$r2	@(Snapshot) /\ (Snapshot)
<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/if/instruction5	1	<org.prevayler.PrevaylerFactory: org.prevayler.Prevayler create()>/$i0	@Replication
<org.prevayler.PrevaylerFactory: java.lang.String prevalenceDirectory()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: java.lang.String prevalenceDirectory()>/$r0
<org.prevayler.PrevaylerFactory: java.lang.Object prevalentSystem()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: java.lang.Object prevalentSystem()>/$r0
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction4	1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$r0	@(Snapshot) /\ (Replication /\ Snapshot)
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.TransactionPublisher publisher()>/$r0	@Replication
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.censorship.TransactionCensor censor(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/if/instruction4	1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.publishing.censorship.TransactionCensor censor(org.prevayler.implementation.snapshot.GenericSnapshotManager)>/$z0	@(Censor) /\ (Censor)
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.journal.Journal journal()>/$z0	@Snapshot
<org.prevayler.PrevaylerFactory: org.prevayler.foundation.serialization.Serializer journalSerializer()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.foundation.serialization.Serializer journalSerializer()>/$r0
<org.prevayler.PrevaylerFactory: java.lang.String journalSuffix()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: java.lang.String journalSuffix()>/$r0
<org.prevayler.PrevaylerFactory: org.prevayler.foundation.network.OldNetwork network()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.foundation.network.OldNetwork network()>/$r0	@(Replication) /\ (Replication)
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$r0	@(Snapshot) /\ (Snapshot)
<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/if/instruction12	1	<org.prevayler.PrevaylerFactory: org.prevayler.implementation.snapshot.GenericSnapshotManager snapshotManager()>/$z0	@(Snapshot) /\ (Snapshot)
<org.prevayler.PrevaylerFactory: org.prevayler.foundation.monitor.Monitor monitor()>/if/instruction3	1	<org.prevayler.PrevaylerFactory: org.prevayler.foundation.monitor.Monitor monitor()>/$r0	@(Monitor) /\ (Monitor)
<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/if/instruction7	1	<org.prevayler.foundation.DurableOutputStream: int writeObject(org.prevayler.foundation.Guided)>/$z0
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction7	1	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$i0
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction7	2	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/thisWrite#_0
<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/if/instruction12	1	<org.prevayler.foundation.DurableOutputStream: void waitUntilSynced(int)>/$z0
<org.prevayler.foundation.DurableOutputStream: void close()>/if/instruction9	1	<org.prevayler.foundation.DurableOutputStream: void close()>/$z0
<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/if/instruction12	1	<org.prevayler.demos.scalability.Record: void <init>(long,java.util.Random)>/$b2
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/if/instruction15	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$z0
<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/if/instruction35	1	<org.prevayler.demos.scalability.ScalabilityTestRun$1: void run()>/$b10
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/if/instruction4	1	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read()>/n#_23	@(GZip) /\ (GZip)
<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/if/instruction7	1	<org.prevayler.foundation.gzip.MultiMemberGZIPInputStream: int read(byte[],int,int)>/n#_32	@(GZip) /\ (GZip)
<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>/if/instruction3	1	<org.prevayler.foundation.Turn: org.prevayler.foundation.Turn next()>/$r0
<org.prevayler.foundation.Turn: void start()>/if/instruction3	1	<org.prevayler.foundation.Turn: void start()>/$i0
<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/if/instruction4	1	<org.prevayler.foundation.Turn: void haveSomeTickets(int)>/$z0

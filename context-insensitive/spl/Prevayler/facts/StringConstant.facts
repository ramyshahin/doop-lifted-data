Robustness Reminder
Withdraw...
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
Withdrawal
<<\\" you will see that nothing was lost. \\">>
Bank
The replication logic is still under development.	@Replication
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
00000
New Account
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
Amount must be greater than zero.
Amount maximum (10000) exceeded.
Error
Deposit...
Deposit
Unexpected InterruptedException.	@(Replication) /\ (Replication)
<<\\"Exception loading JDBC driver class: \\">>
JDBC
Transaction Test
<<\\"Exception while trying to connect: \\">>
All Accounts
Center
South
<<\\"Attempted to process \\">>
<<\\"Primes found: \\">>
Unexpected Exception was thrown.
PrevalenceBase
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
Transient Prevaylers are unable to take snapshots.	@Snapshot
<<\\"Creating \\">>
journal
xstreamjournal
skaringajournal
\\"QueryTest\\"
QueryTest
QueryTest
Read the javadoc to this method.
QueryTest
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
Prevalence
The prevalent system must be configured.
journal
Runtime Exception simulated for rollback demonstration purposes.
snapshot	@(Snapshot) /\ (Snapshot)
Query Test
NAME
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Invalid parameter name \'
Invalid parameter value \'
Chunk header corrupted
;=\r\n
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
Edit
Unexpected end of stream in chunk header
North
East
West
Center
South
Holder
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
#
Transfer
From Account
To Account
Amount
Invalid holder name.
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
<<HASH:-595253473>>
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
SubscriberUpToDate	@(Replication) /\ (Replication)
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
0.00
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
\n	@(Monitor) /\ (Monitor)
\n	@(Monitor) /\ (Monitor)
<<\\"update \\">>
Journal.update() has to be called at least once before Journal.append().
<<\\"delete from \\">>
writing to
TRANSACTION_TEST
closing
commiting transaction
creating
updating record
deleting record
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
update() must be called at least once
Unexpected Exception thrown.
<<HASH:-279482281>>
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
<<\\"selecting record from \\">>
Port In Service	@(Replication) /\ (Replication)
already closed
Port Not in Service	@(Replication) /\ (Replication)
Prevayler
already closed
<<\\"Unexpected Exception: \\">>
<<\\"Account not found: \\">>
yyyy/MM/dd  hh:mm:ss.SSS
hh:mm:ss
<<\\"Bank - \\">>
Transfer...
OK
Interesting accounts
OK
Refresh
South
Match
Account
Balance
#Entries
Center
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
balance()
transactionHistory().size()
locked
Already locked internally
rw
<<\\"\\">>
Already locked externally
<<\\"\\">>
<<\\"\\">>
Primary suffix \'	@Snapshot
snapshot	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2
<<\\"Account \\">>
Journal.update() has to be called at least once before Journal.journal().
Transaction History
Balance
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
<<\\"Expected \\">>
update() must be called at least once
Unable to serialize transaction
Unable to deserialize transaction
withQuery
withQuery
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
0000000000000000000
<<\\"Unable to serialize with Skaringa: \\">>
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
<<\\"Unable to deserialize with Skaringa: \\">>
<<\\"Unable to start Skaringa: \\">>
<<\\"Error reading file list from directory \\">>
Delete
Prevayler Network Server Receiver	@Replication
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
<<\\"Disk space used: \\">>
journal
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
setting AutoCommit to false
<<\\"insert into \\">>
systemVersion
executionTime
systemVersion
executionTime
inserting record
<<\\"preparing statement: \\">>
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
<<\\"SQLException \\">>
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
ScalabilityTest.properties
Creating the properties file.
<<HASH:1156460636>>
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
Create
NAME
<<\\"Unexpected Exception: \\">>
<<\\"Prevayler Stubborn Client \\">>	@Replication

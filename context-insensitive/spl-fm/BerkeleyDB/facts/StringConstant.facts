\\"sun.arch.data.model\\"
\\"je.forceJVMArch\\"
1.4 based 64 bit JVM not supported	@Memory_Budget
\\"je.info\\"
<DbPrintLog>
\\"!\\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\"
</DbPrintLog>
<<\\"Problem parsing parameter \\">>
!\\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
<Dbg time=\\\"	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
\\\">	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
<msg val=\\\"	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
\\\"/>	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
</Dbg>	@(Logging_DbLogHandler) /\ (Logging_DbLogHandler)
.
false	@Logging_DbLogHandler
true	@Logging_ConsoleHandler
SEVERE	@Logging_Base
Mac OS X
false
<<\\"java { \\">>
<<\\"Usage: \\">>
<<\\" -h  <envHomeDir>\\">>
<<\\" -e  <end file number, in hex>\\">>
<<\\" -k  <binary|text> (format for dumping the key)\\">>
<<\\" -s  <start file number, in hex>\\">>
<<\\" -tx <targetted txn ids, comma separated>\\">>
<<\\" -ty <targetted entry types, comma separated>\\">>
<<\\" -S  show Summary of log entries\\">>
<<\\" -q  if specified, concise version is printed\\">>
<<\\"     Default is verbose version.)\\">>
All arguments are optional
<offsets size=\\\"
\\\">
0x
</offsets>
<offsets size=\\\"0\\\"/>
<<\\"<LatchWaiter: \\">>	@(Latches) /\ (Latches)
NEXT
PREV
NEXT_DUP
PREV_DUP
NEXT_NODUP
\\"RootSplit:\\"
PREV_NODUP
\\"DupRootSplit:\\"
\\"Mut:\\"
\\"Ins:\\"
\\"InsD:\\"
Channel closed, may be due to thread interrupt
<<\\"Cursor.count: \\">>	@Logging_Finest
delete
<<\\"Cursor.delete: \\">>	@Logging_Finest
RootLatch	@(Latches) /\ (Latches)
key
data
put
<<\\"Cursor.put: \\">>	@Logging_Finest
\\"INCompress:\\"
key
data
putNoOverwrite
<key v=\\\"
<null>
<<\\"Cursor.putNoOverwrite: \\">>	@Logging_Finest
<null>
<<\\"\\">>
\\\"/>	@(INCompressor) /\ (INCompressor)
\\\"/>
key=
key
data
OPEN
CLOSED
putNoDupData
INVALID
<<\\"Cursor.putNoDupData: \\">>	@Logging_Finest
data
putCurrent
INCompressor.addToQueue should never be called.	@INCompressor
DatabaseConfig.setReadOnly() must be set to false when creating a Database
<<\\"Cursor.putCurrent: \\">>	@Logging_Finest
<<\\"Cursor.getCurrent: \\">>	@Logging_Finest
<<\\"Cursor.getFirst: \\">>	@Logging_Finest
<<\\"You can\'t open a Database with a duplicatesAllowed configuration of \\">>
<<\\"You can\'t open a Database with a transactional configuration of \\">>	@Transactions
<<\\"Cursor.getLast: \\">>	@Logging_Finest
Can\'t close Database:
<<\\"Database.close: \\">>	@Logging_Finest
There are open cursors against the database.\n
They will be closed.\n
<<\\"Cursor.getNext: \\">>	@Logging_Finest
key
Can\'t call Database.openSequence:
openSequence
Database.openSequence	@Logging_Finest
<<\\"Cursor.getNextDup: \\">>	@Logging_Finest
Can\'t open a cursor
Only one may be specified: ReadCommitted or ReadUncommitted
Database.openCursor	@Logging_Finest
<<\\"Cursor.getNextNoDup: \\">>	@Logging_Finest
<<\\"InCompress.doCompress called, queue size: \\">>	@INCompressor /\ Logging_Fine
key
Can\'t call Database.delete:
delete
Database.delete	@Logging_Finest
<<\\"Cursor.getPrev: \\">>	@Logging_Finest
getFirstNode passed null root
<<\\"Cursor.getPrevDup: \\">>	@Logging_Finest
getLastNode passed null root
<<\\"Cursor.getPrevNoDup: \\">>	@Logging_Finest
key
data
Can\'t call Database.get:
Database.get	@Logging_Finest
getParentNode passed null
key
data
<<\\"Cursor.getSearchKey: \\">>	@Logging_Finest
key
data
Can\'t call Database.getSearchBoth:
Database.getSearchBoth	@Logging_Finest
key
data
<<\\"Cursor.getSearchKeyRange: \\">>	@Logging_Finest
key
<<\\"Cursor.getSearchBoth: \\">>	@Logging_Finest
data
Can\'t call Database.put
put
Database.put	@Logging_Finest
<<\\"Cursor.getSearchBothRange: \\">>	@Logging_Finest
key
data
Can\'t call Database.putNoOverWrite
putNoOverwrite
Database.putNoOverwrite	@Logging_Finest
key
data
Can\'t call Database.putNoDupData
putNoDupData
Database.putNoDupData	@Logging_Finest
This statement would have triggered an Exception: virtualinvoke searchResult#1.<com.sleepycat.je.tree.IN: void releaseLatchIfOwner()>()
Can\'t call Database.join
cursors
At least one cursor is required.
All cursors must use the same transaction.	@Transactions
All cursors must use the same environment.	@Transactions
All cursors must use the same transaction.	@Transactions
\\";\\"
Can\'t call Database.truncate	@TruncateOp
truncate	@TruncateOp
Database.truncate: txnId=	@Logging_Finest /\ TruncateOp
<<\\" A configuration parameter name can\'t be null or 0 length\\">>
null	@Latches /\ TruncateOp
couldn\'t find database - truncate	@TruncateOp
truncate	@DeleteOp /\ TruncateOp
Can\'t call Database.preload
preload	@DeleteOp
Can\'t call Database.preload
preload	@DeleteOp
Can\'t call Database.preload
preload	@DeleteOp
Can\'t call Database.stat	@Statistics
stat	@DeleteOp /\ Statistics
Can\'t call Database.verify	@Statistics /\ Verifier
verify	@DeleteOp /\ Verifier /\ Statistics
<knownDeleted val=\\\"
true
false
\\\"/>
put passed a null DatabaseEntry arg
put passed a null DatabaseEntry arg
unknown PutMode
<<\\"Database is Read Only: \\">>
subtree did not have a BIN for leaf	@Latches
Unexpected interrupt while waiting for fsync	@FSync
RootSplit:	@Logging_Fine
<<\\" name=\\">>	@Logging_Finest /\ Logging_Base
delete
searchSubTree passed key and left/right search
<<\\"SecondaryCursor.delete: \\">>	@Logging_Finest
<<\\"Invalid value of searchType: \\">>
<<\\"SecondaryCursor.getCurrent: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getFirst: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getLast: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getNext: \\">>	@Logging_Finest
Nested transactions are not supported yet.	@Transactions
<<\\"SecondaryCursor.getNextDup: \\">>	@Logging_Finest
This statement would have triggered an Exception: $stack45 = result#4.<com.sleepycat.je.dbi.CursorImpl$KeyChangeStatus: com.sleepycat.je.OperationStatus status>
<<\\"SecondaryCursor.getNextNoDup: \\">>	@Logging_Finest
<<\\"XA Transaction \\">>	@Transactions
<<\\"SecondaryCursor.getPrev: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getPrevDup: \\">>	@Logging_Finest
<<\\"SecondaryCursor.getPrevNoDup: \\">>	@Logging_Finest
key
pKey
data
<<\\"SecondaryCursor.getSearchKey: \\">>	@Logging_Finest
key
pKey
data
<<\\"SecondaryCursor.getSearchKeyRange: \\">>	@Logging_Finest
key
pKey
data
<<\\"SecondaryCursor.getSearchBoth: \\">>	@Logging_Finest
key
pKey
data
<<\\"SecondaryCursor.getSearchBothRange: \\">>	@Logging_Finest
Log statistics:
type
total
provisional
total
min
max
avg
entries
<<\\"\\">>
count
count
bytes
bytes
bytes
bytes
as % of log
key/data
<<\\"\\">>
<<\\"\\">>
<<\\"\\">>
<<\\"\\">>
<<\\"\\">>
(
<<\\"\nTotal bytes in portion of log read: \\">>
<<\\"Total number of entries: \\">>
key
pKey
data
\\"CleanIN:\\"
\\"CleanLN:\\"
<<\\" \\">>
\\"CleanMigrateLN:\\"
\\"CleanPendingLN:\\"
\nPer checkpoint interval info:
lnTxn
ln
mapLNTxn
mapLN
end-end
end-start
start-end
maxLNReplay
ckptEnd
<<\\"Both \\">>	@Cleaner
unknown GetMode
<<\\"\\">>	@Cleaner
<<\\"Cleaner has \\">>	@Cleaner /\ Environment_Locking /\ Logging_Severe
.del	@Cleaner /\ Environment_Locking
Cleaner deleted file 0x	@Cleaner /\ Environment_Locking /\ Logging_Severe
Log file 0x	@(Cleaner /\ Logging_Severe) /\ (Cleaner /\ Logging_Severe)
deleted	@Cleaner /\ Logging_Severe
renamed	@Cleaner /\ Logging_Severe
Cleaner	@(Cleaner /\ Logging_Severe) /\ (Cleaner /\ Logging_Severe)
deleteSafeToDeleteFiles	@(Cleaner /\ Logging_Severe) /\ (Cleaner /\ Logging_Severe)
This statement would have triggered an Exception: virtualinvoke dupRoot#4.<com.sleepycat.je.tree.DIN: void releaseLatch()>()
activeTxns=[	@(Transactions /\ Statistics) /\ (Transactions /\ Statistics)
]\n	@(Transactions /\ Statistics) /\ (Transactions /\ Statistics)
neither LN or DIN found in BIN
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
DupRootSplit:	@Logging_Fine
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
CleanPendingLN:	@Cleaner
CleanPendingLN:	@Cleaner
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
CleanPendingLN:	@Cleaner /\ Logging_Cleaner
CleanMigrateLN:	@Cleaner
CleanMigrateLN:	@Cleaner
<<\\"A transaction was not supplied when opening this cursor: \\">>
key
data
CleanMigrateLN:	@Cleaner
key
data
allowDuplicates passed to insert but database doesn\'t have allow duplicates set.
exactParentFound=
null
SUCCESS
KEYEXIST
KEYEMPTY
NOTFOUND
OperationStatus.
\\\"/>
<<\\"SubtreeRemoval: subtreeRoot = \\">>	@Logging_Fine
<root>
Usage: EnvironmentParams <samplePropertyFile>
####################################################\n# Example Berkeley DB, Java Edition property file\n# Each parameter is set to its default value\n####################################################\n\n
#
<<\\"Shutting down \\">>
Exiting
Continuing
<<\\"usage: \\">>
</root>
<tree>
<in/>
</tree>
<<\\"IN \\">>
<<\\"IN \\">>
<<\\"IN \\">>
Mut:	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" existingLn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newLn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newLnLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dupCountLN=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dupRootLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" rootdin=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" ddinLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dbin=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" dbinLsn=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" bin=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\"CleanAddPendingDB \\">>	@(Cleaner /\ DeleteOp) /\ (DeleteOp /\ Cleaner /\ Logging_Cleaner)
-f requires an argument
-h requires an argument
-d requires an argument
-s requires an argument
-h is a required argument
Must supply a database name if -l not supplied.
<<\\" node=\\">>	@Cleaner /\ Logging_Cleaner /\ Logging_Base
<<\\" logLsn=\\">>	@Cleaner /\ Logging_Cleaner /\ Logging_Base
\\".jdb\\"
\\".cif\\"
\\".del\\"
\\".bad\\"
\\".lck\\"
.del
.jdb
.jdb
.del
Ins:	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" bin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" ln=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" lnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" index=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\"Environment home \\">>
InsD:	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" dbin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" bin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" ln=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" lnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
true
false
ABORT
CASCADE
NULLIFY
<<\\"DbDump.dump of \\">>	@Logging_Info
ForeignKeyDeleteAction.
.jdb
DATA=END
<<\\"DbDump.dump of \\">>	@Logging_Info
VERSION=3
format=print
format=bytevalue
type=btree
dupsort=
1
0
HEADER=END
.jdb
A checksum error was found in the log.
<<\\"Corruption begins at LSN:\n   \\">>
<<\\"Last known good record before corruption is at LSN:\n   \\">>
<<\\"Next known good record after corruption is at LSN:\n   \\">>
<<\\"\\">>
.
<<\\"Couldn\'t rename \\">>
<<\\"Couldn\'t delete \\">>
<dbId id=\\\"
\\\"/>
<<\\"Couldn\'t open file \\">>
\\\">
<<\\"Couldn\'t open file \\">>
</INDupDeleteEntry>
initialized
open
closed
invalid
<<\\"Can\'t go from environment state \\">>
<DatabaseEntry
NEW
WAIT_NEW
PROMOTION
WAIT_PROMOTION
EXISTING
DENIED
WAIT_RESTART
NONE_NEEDED
<<\\"usage: \\">>	@(Statistics /\ Verifier) /\ (Statistics /\ Verifier)
<<\\"Exit status = \\">>	@Statistics /\ Verifier
<<\\"Exit status = \\">>	@Statistics /\ Verifier
<<\\"Exit status = \\">>	@Statistics /\ Verifier
Channel closed, may be due to thread interrupt
<<\\"IOException caught: \\">>
<<\\"File \\">>
>
-h requires an argument	@Statistics /\ Verifier
-s requires an argument	@Statistics /\ Verifier
-v requires a positive argument	@Statistics /\ Verifier
-v requires an argument	@Statistics /\ Verifier
FileManager would overwrite non-empty file 0x
generated for testing
-h is a required argument	@Statistics /\ Verifier
-s is a required argument	@Statistics /\ Verifier
File closed, may be due to thread interrupt
generated for testing	@DiskFullErro
<<\\"DbVerify.verify of \\">>	@Logging_Info /\ Verifier /\ Statistics
Checking obsolete offsets ...	@Statistics /\ Verifier
<<\\"DbVerify.verify of \\">>	@Logging_Info /\ Verifier /\ Statistics
<<\\"DbVerify.verify of \\">>	@Logging_Info /\ Verifier /\ Statistics
<<\\"Cannot read backward over cleaned file from \\">>
\\"<fileSummaryLN>\\"
\\"</fileSummaryLN>\\"
\\"<mapLN>\\"
\\"</mapLN>\\"
UTF-8	@Cleaner
<mapLN>
</mapLN>
\\\">
<fileSummaryLN>	@(Cleaner) /\ (Cleaner)
</fileSummaryLN>	@(Cleaner) /\ (Cleaner)
<<\\"FileReader read invalid log entry type: \\">>
r
rw
Txnl access to UP db not allowed	@(Cleaner) /\ (Cleaner)
\\\">
</INDeleteEntry>
nGets=	@(Statistics) /\ (Statistics)
\\"LatchImpl\\"
je.lck	@(Environment_Locking) /\ (Environment_Locking)
rw	@(Environment_Locking) /\ (Environment_Locking)
<<\\"A je.lckfile exists in \\">>	@(Environment_Locking) /\ (Environment_Locking)
shared	@(Environment_Locking) /\ (Environment_Locking)
single writer	@(Environment_Locking) /\ (Environment_Locking)
LatchImpl	@Latches
<<\\"The Environment directory \\">>
<<\\"Problem in fillReadBuffer, readBufferFileNum = \\">>	@Latches
waitTarget.active but not owner	@(Latches) /\ (Latches)
txnId=
je.disable.java5.latches	@Latches
java.util.concurrent.locks.ReentrantLock	@Latches
java.util.concurrent.locks.ReentrantReadWriteLock	@Latches
LatchImpl	@Latches
Write after RunRecoveryException
Randomly generated for testing
DEFAULT
<<\\"usage: \\">>	@Statistics /\ Verifier
READ_UNCOMMITTED
READ_COMMITTED
RMW
LockMode.
<<\\"usage: \\">>	@(Statistics /\ Verifier) /\ (Statistics /\ Verifier)
,
,	@Transactions
-h requires an argument	@Statistics /\ Verifier
-s requires an argument	@Statistics /\ Verifier
-v requires a positive argument	@Statistics /\ Verifier
-v requires an argument	@Statistics /\ Verifier
-h is a required argument	@Statistics /\ Verifier
-s is a required argument	@Statistics /\ Verifier
<<\\"prepare() has already been called for Transaction \\">>	@Transactions
<<\\"Transaction \\">>	@Transactions
LN_TX
LN
MapLN_TX
MapLN
NameLN_TX
NameLN
DelDupLN_TX
DelDupLN
DupCountLN_TX
DupCountLN
FileSummaryLN	@Cleaner
<<\\"DbStat.stats of \\">>	@(Statistics /\ Verifier) /\ (Logging_Info /\ Verifier /\ Statistics)
IN
BIN
DIN
Recovery Info
<<\\" lastUsed=\\">>
<<\\"DbStat.stats of \\">>	@(Statistics /\ Verifier) /\ (Logging_Info /\ Verifier /\ Statistics)
<<\\" nextAvail=\\">>
<<\\" ckptStart=\\">>
<<\\" firstActive=\\">>
<<\\" ckptEnd=\\">>
<<\\" useRoot=\\">>
>
DBIN
Root
Commit
Abort
CkptStart
CkptEnd
INDelete
BINDelta
DupBINDelta
Trace
FileHeader
INDupDelete
Prepare
<<\\"Transaction \\">>	@(Transactions) /\ (Transactions)
<<\\"Commit of transaction \\">>	@(Transactions) /\ (Transactions /\ Logging_Severe)
Txn	@(Transactions) /\ (Transactions /\ Logging_Severe)
commit	@(Transactions) /\ (Transactions /\ Logging_Severe)
<<\\"Failed while attempting to commit transaction \\">>	@(Transactions) /\ (Transactions)
<<\\"Failed while attempting to commit transaction \\">>	@(Transactions) /\ (Transactions)
fsyncLatch	@FSync /\ Latches
<<\\"Abort:id = \\">>	@Transactions /\ Logging_Fine
<<\\"Transaction \\">>	@Transactions
<<\\"Not Exception or Error: \\">>
Txn undo for node=	@Transactions
<<\\"Dup Offset \\">>
<<\\"txnId = \\">>	@(Transactions /\ Statistics) /\ (Transactions /\ Statistics)
remaining=
\n
----- Event Dump -----
<<\\"\\">>
<<\\"\\">>
<<\\"Couldn\'t find lock for Node \\">>	@Transactions
<<\\"\\">>
<<\\"\\">>
Sequences not supported in databases configured for duplicates
Minimum sequence value must be less than the maximum
Initial sequence value is out of range
The cache size is larger than the sequence range
ExclusiveCreate=true and the sequence record already exists.
Sequence record removed during openSequence.
AllowCreate=false and the sequence record does not exist.
<<\\"Can\'t find \\">>	@Transactions
<<\\"Can\'t find \\">>	@Transactions
<<\\"Attempt to \\">>	@DeleteOp
Sequence delta must be greater than zero
Sequence delta is larger than the range
<<\\"Transaction \\">>	@Transactions
<<\\"Transaction \\">>	@Transactions
<<\\"Sequence overflow \\">>
Sequence.get value=	@Logging_Finest /\ Logging_Base
<txn id=\\\"	@(Transactions) /\ (Transactions)
\\\">	@(Transactions) /\ (Transactions)
</txn>	@(Transactions) /\ (Transactions)
<<\\"Error Key \\">>
UNKNOWN
<<\\"Error Data \\">>
UNKNOWN
The sequence record has been deleted while it is open.
<<\\"locker \\">>
<<\\"locker \\">>
<<\\"maxBytes parameter to Database.preload() was specified as \\">>	@Memory_Budget
<<\\" Owners:\\">>
<<\\" (none)\\">>
<<\\" Waiters:\\">>
<<\\" (none)\\">>
lsn=
<database id=\\\"
\\\"
<<\\" btc=\\\"\\">>
\\\"
<<\\" dupc=\\\"\\">>
\\\"
/>
\\"<node>\\"
\\"</node>\\"
Bad value for timeout:
\\"<dbin>\\"
\\"</dbin>\\"
matchLNByNodeId called on non DIN/DBIN
Btree
Duplicate
<node>
couldn\'t instantiate class comparator
</node>
Bad value for timeout:
<database>
\\\"/>
<btcf name=\\\"
\\\"/>
<
<dupcf name=\\\"
\\\"/>
</database>
<<\\"\\">>
<node>
</node>
<<\\"Exception while trying to load \\">>
allowCreate=
<<\\"Exception while trying to load \\">>
<DbLsn val=\\\"0x
0x
non LogEntryType passed to LogEntryType.compare
<dbin>
</dbin>
\\"<dupCountLN>\\"
\\"</dupCountLN>\\"
<dupkey>
<<\\"\\">>
</dupkey>
<dupCountLN>
</dupCountLN>
DBIN
\\\"/>
\\\"/>	@(Checkpointer_Daemon) /\ (Checkpointer_Daemon)
daemon	@Checkpointer_Daemon
Btree
Duplicate
<<\\" lastCkpt=\\">>	@Logging_Finest
<<\\" lastCkpt=\\">>	@Logging_Finest
<<\\" lastCkpt=\\">>	@Logging_Finest
The following DatabaseConfig parameters for the\ncached Database do not match the parameters for the\nrequested Database:\n
<<\\" lastCkpt=\\">>	@Logging_Finest
<<\\" Transactional\n\\">>	@Transactions
<<\\" Read-Only\n\\">>
<<\\" Sorted Duplicates\n\\">>
<<\\" Btree Comparator\n\\">>
<<\\" Duplicate Comparator\n\\">>
<<\\" lastCkpt=\\">>	@Logging_Finest
<<\\"\\">>
.
<<\\"Usage: \\">>
<<\\"                 -h <environment home>\\">>
(optional)
<<\\"                 -f <file number, in hex>\\">>
<<\\"                 -o <offset, in hex>\\">>
Log file is truncated at position starting at and inclusive of the offset. Beware, not  for general purpose use yet!
<<\\"A per-thread transaction was created in \\">>
\\\">
<ckptStart>
</ckptStart>
<root>
<<\\"usage: \\">>	@Cleaner
</root>
<firstActive>
</firstActive>
</CkptEnd>
All nodes should have been loaded	@Cleaner
\\"daemon\\"
\\"manual\\"
\\"critical\\"
\\\"/>	@(Evictor) /\ (Evictor)
-h requires an argument	@Cleaner
Evictor.addToQueue should never be called.	@Evictor /\ EvictorDaemon
-h is a required argument	@Cleaner
daemon	@Evictor /\ EvictorDaemon
File 0x	@Cleaner
<<\\"Lock Table \\">>	@Latches
<<\\"  File    Size (KB)  % Used\n--------  ---------  ------\\">>	@Cleaner
critical	@Evictor /\ Memory_Budget /\ Critical_Eviction
Evictor: pass=	@Logging_Evictor /\ Evictor /\ Logging_Base
\\\" gTxnId=\\\"
null
\\\" bqual=\\\"
null
\\\"/>
Evictor: pass=	@Logging_Evictor /\ Evictor /\ Logging_Base
Evictor: pass=	@Logging_Evictor /\ Evictor /\ Logging_Base
<<\\"latches held = \\">>	@Evictor
Transaction
Lock
Transaction
.bad
<<\\" IN type=\\">>	@Evictor
<<\\"Database \\">>	@Evictor
<<\\"No transaction found for \\">>	@Transactions
primaryDatabase
<<\\"No transaction found for \\">>	@(Transactions) /\ (Transactions)
Can\'t use as primary:
<<\\"Duplicates must not be allowed for a primary database: \\">>
Primary and secondary databases must be in the same environment
secConfig.getKeyCreator() and getMultiKeyCreator() may not both be non-null
secConfig and getKeyCreator()/getMultiKeyCreator() may be null only if the primary database is read-only
secConfig.getForeignKeyNullifier() and getForeignMultiKeyNullifier() may not both be non-null
ForeignKeyNullifier or ForeignMultiKeyNullifier must be non-null when ForeignKeyDeleteAction is NULLIFY
ForeignKeyNullifier may not be used with SecondaryMultiKeyCreator -- use ForeignMultiKeyNullifier instead
++++++++++ begin lock table dump ++++++++++
++++++++++ end lock table dump ++++++++++
: waited for lock
<<\\"Duplicates must not be allowed for a foreign key  database: \\">>
\n
<<\\"No transaction found for \\">>	@(Transactions) /\ (Transactions)
<<\\"Secondary is already associated with a different primary: \\">>
SecondaryDatabase open	@Logging_Finest
<<\\"Transfer, lock \\">>
\\\">
>
<<\\"Transfer, lock \\">>
\n
key
Can\'t call SecondaryDatabase.delete:
SecondaryDatabase.delete	@Logging_Finest
DbState.
key
pKey
data
Can\'t call SecondaryDatabase.get:
\\"                                                                                                                                \\"
SecondaryDatabase.get	@Logging_Finest
<<\\"                                                                                                                                \\">>
<<\\" \\">>
null
----\n
key
pKey
data
Can\'t call SecondaryDatabase.getSearchBoth:
SecondaryDatabase.getSearchBoth	@Logging_Finest
\n
<<\\" waits for \\">>
<<\\" nothing\\">>
<<\\" node \\">>
\n
<<\\"Transaction \\">>
\\"usage: java <utility> [options...]\\"
\\"com.sleepycat.je.util.\\"
Missing utility name
com.sleepycat.je.util.
usage: java <utility> [options...]
<Transaction id=\\\"	@(Transactions) /\ (Transactions)
\\"DupRootRecover:\\"
\\"LNRedo:\\"
\\\"	@(Transactions) /\ (Transactions)
\\"LNUndo\\"
\\"INRecover:\\"
\\"RootRecover:\\"
<<\\" name=\\\"\\">>	@(Transactions) /\ (Transactions)
\\"INDelReplay:\\"
\\\"	@(Transactions) /\ (Transactions)
>	@(Transactions) /\ (Transactions)
\\"INDupDelReplay:\\"
\\"RootDelete:\\"
<<\\"Transaction \\">>	@Transactions
Recovery underway, found end of log	@Logging_Config
<<\\"Recovery checkpoint search, \\">>	@Logging_Config
Recovery w/no files.	@Logging_Config
<<\\"There are \\">>	@Transactions /\ Logging_Info
recovery
RecoveryManager	@Logging_Severe
recover	@Logging_Severe
Couldn\'t recover	@Logging_Severe
<<\\"Couldn\'t recover: \\">>
<<\\"Recovery finished: \\">>
<<\\"Recovery finished: \\">>
lastUsed=
.
true	@Logging_ConsoleHandler
<<HASH:-870535562>>
false	@Logging_DbLogHandler
false	@Evictor
1000	@Evictor
<<\\"Files cleaned: \\">>	@Cleaner
<<\\"\nrecovery time = \\">>
<<\\"Secondary \\">>
<<\\"action time = \\">>
<<\\"\nrecovery time = \\">>
<summary totalCount=\\\"	@Cleaner
<<\\"action time = \\">>
\\\" totalSize=\\\"	@Cleaner
\\\" totalINCount=\\\"	@Cleaner
\\\" totalINSize=\\\"	@Cleaner
\\\" totalLNCount=\\\"	@Cleaner
<<\\"Secondary \\">>
\\\" totalLNSize=\\\"	@Cleaner
\\\" obsoleteINCount=\\\"	@Cleaner
\\\" obsoleteLNCount=\\\"	@Cleaner
\\\"/>	@Cleaner
<<\\"\nrecovery time = \\">>
<<\\"action time = \\">>
<<\\"Could not insert secondary key in \\">>
cleanedCount=	@Cleaner /\ DeleteOp
<<\\"Remove of \\">>	@DeleteOp
<<\\"Secondary \\">>
Preload starting
<<\\"Preloaded \\">>
evict time=	@Evictor
<<\\"Secondary \\">>
Operation not allowed on a secondary
<<\\"Usage: \n \\">>
<<\\"  -h <environment home> \\">>
<<\\"  -a <clean|compress|evict|checkpoint|removedb>\\">>
<<\\"  -ro (read-only - defaults to read-write)\\">>
<<\\"  -s <dbName> (for preloading of evict or db remove)\\">>
\\"<ln>\\"
\\"</ln>\\"
<
<<\\" exists = \\\"\\">>
\\\">
\\\"/>
readMapIns
<ln>
</ln>
<data>
</data>
<<\\"Environment invalid because of previous exception: \\">>
readNonMapIns
\n
<TreeLocation bin=\\\"
null
<data>
</data>
\\\" index=\\\"
\\\" lnKey=\\\"
\\\" childLsn=\\\"
\\\">
\\"<bin>\\"
\\"</bin>\\"
.
.
<<\\"Found unfinished prepare record: id: \\">>	@Transactions /\ Logging_Info
.
.
<<\\" (\\">>
undoLNs
)
Cleaner.addToQueue should never be called.	@Cleaner
<<\\"Cache percent is not a valid integer: \\">>
redoLns
nodeId=
<<\\"CleanerRun \\">>	@Cleaner
Cleaner	@Cleaner /\ Logging_Severe
doClean	@Cleaner /\ Logging_Severe
<<\\"\\">>	@Cleaner /\ Logging_Severe
<<\\"CleanerRun \\">>	@Cleaner
<<\\"CleanerRun \\">>	@Cleaner
<<\\" lsnFromLog:\\">>	@Logging_Severe
RecoveryManager	@Logging_Severe
replaceOrInsert	@Logging_Severe
lsnFromLog=
Trace list:
<<\\"Obsolete lsns contains valid lsn \\">>	@Verifier
BIN must be latched before evicting LNs	@Evictor /\ Latches
<<\\"Tree contains obsolete lsn \\">>	@Verifier
Lsn mismatch	@Verifier
TxnAbort
lsnFromLog=
CleanLN:	@Cleaner /\ Logging_Cleaner
RootRecover:	@Logging_Recovery
RootRecover:	@Logging_Recovery
CleanLN:	@Cleaner /\ Logging_Cleaner
\\"je.properties\\"
CleanLN:	@Cleaner /\ Logging_Cleaner
envHome
<bin>
</bin>
DupRootRecover:	@Logging_Recovery
BIN
DupRootRecover:	@Logging_Recovery
CleanLN:	@Cleaner /\ Logging_Cleaner
je.properties
CleanLN:	@Cleaner /\ Logging_Cleaner
<<\\"An error occurred when reading \\">>
INRecover:	@Logging_Recovery
.	@(Memory_Budget) /\ (Memory_Budget)
INRecover:	@Logging_Recovery
INRecover:	@Logging_Recovery
<<\\"There \\">>
is 1 open Database in the Environment.\n
<<\\"are \\">>
<<\\" open Database in the Environment.\n\\">>
Closing the following databases:\n
<<\\" \\">>
<<\\"There \\">>	@Transactions
is 1 existing transaction opened against	@Transactions
<<\\" the Environment.\n\\">>	@Transactions
<<\\"are \\">>	@Transactions
<<\\" existing transactions opened against\\">>	@Transactions
<<\\" the Environment.\n\\">>	@Transactions
Aborting open transactions ...\n	@Transactions
LNRedo:	@Logging_Recovery
CleanLN:	@Cleaner /\ Logging_Cleaner
CleanLN:	@Cleaner /\ Logging_Cleaner
databaseName
Environment.open:  name=	@Logging_Finest
<<\\"Database \\">>
CleanIN:	@Cleaner /\ Logging_Cleaner
<<\\"Database \\">>
LNRedo:	@Logging_Recovery
CleanIN:	@Cleaner /\ Logging_Cleaner
CleanIN:	@Cleaner /\ Logging_Cleaner
LNRedo:	@Logging_Recovery
<<\\"Logged item entrySize= \\">>
<<\\"Attempted to open Database \\">>	@Transactions
<<\\"Attempted to open Database \\">>
databaseName	@DeleteOp
databaseName	@RenameOp
newName	@RenameOp
databaseName	@TruncateOp
\\\"/>	@(Cleaner) /\ (Cleaner)
LNUndo	@Logging_Recovery /\ Logging_Base
Transactions can not be used in a non-transactional environment	@Transactions
LNUndo	@Logging_Recovery /\ Logging_Base
<<\\"null buffer given to checksum validation, probably  result of 0\'s in log file. \\">>	@Checksum
Only one may be specified: SerializableIsolation, ReadCommitted or ReadUncommitted	@Transactions
<<\\"Read non-valid log entry type: \\">>
<<\\"Location \\">>	@Checksum
Channel closed, may be due to thread interrupt
<<\\"Location \\">>	@Checksum
api
sync
mutableConfig
SET
BOTH
SET_RANGE
BOTH_RANGE
<<\\"DatabaseEntry \\">>
SearchMode.
<<\\"Data field for DatabaseEntry \\">>
A partial key DatabaseEntry is not allowed
Attempt to use non-open Environment object().
<<\\"Recovery Pass \\">>
<<\\"environmentImpl is null for target db \\">>
<<\\"Recovery Pass \\">>
copy.remaining=
<<\\" node=\\">>	@Logging_Base
\\"  File    Size (KB)  % Used\n--------  ---------  ------\\"
<<\\" lsn=\\">>	@Logging_Base
<<\\" found=\\">>	@Logging_Base
<<\\" replaced=\\">>	@Logging_Base
<<\\" inserted=\\">>	@Logging_Base
<<\\" replacedLsn=\\">>	@Logging_Base
<<\\" TOTALS \\">>	@(Cleaner) /\ (Cleaner)
<<\\" abortLsn=\\">>	@Logging_Base
<<\\"  \\">>	@(Cleaner) /\ (Cleaner)
<<\\"     \\">>	@(Cleaner) /\ (Cleaner)
INDupDelReplay:	@(Logging_Recovery) /\ (Logging_Recovery /\ Logging_Base)
INDelReplay:	@(Logging_Recovery) /\ (Logging_Recovery /\ Logging_Base)
<<\\"last LSN = \\">>	@Logging_Severe
RecoveryManager	@Logging_Severe
last LSN=
RootDelete:	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<LockInfo locker=\\\"
\\\" type=\\\"
\\\"/>
<<\\" lock taken at: \\">>
\\"Delete\\"
\\"Mod:\\"
<<\\"usage: \\">>
<<\\"Wrong filenum in header for file \\">>
<<\\"Expected log version 3 or earlier but found \\">>
<FileHeader num=\\\"0x
\\\" lastEntryInPrevFileOffset=\\\"0x
\\\" logVersion=\\\"0x
\\\"/>
-f requires an argument
-h requires an argument
-s requires an argument
<<\\"-c: \\">>
-c requires an argument
-h is a required argument
-v requires -f
<<\\"DbLoad.load of \\">>	@Logging_Info
<<\\"Load start: \\">>
Must supply a database name if -l not supplied.
<<\\"DbLoad.load of \\">>	@Logging_Info
<<\\"Load end: \\">>
<<\\"Invalid header parameter: \\">>
<<\\"Version \\">>
\'
<<\\"No data to match key \\">>
<<\\"Key exists: \\">>
<<\\"loaded \\">>
<<\\"Error in \\">>	@Cleaner
No \\\"DATA=END\\\"
,-	@Cleaner
,	@Cleaner
-	@Cleaner
Delete	@Logging_Finer /\ Latches
Corrupted file
Corrupted file
A Transaction cannot be used because the environment was opened non-transactionally	@Transactions
A Transaction cannot be used because the database was opened non-transactionally	@Transactions
A Transaction cannot be used because the database was opened non-transactionally	@Transactions
A Transaction cannot be used because the database was opened non-transactionally	@Transactions
Cannot write file summary in a read-only environment	@Cleaner
.jdb	@Cleaner
putNoDupData() called, but database is not configured for duplicate data.
\n	@(Statistics) /\ (Statistics)
numBottomInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
numInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
numDuplicateInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
numDuplicateBottomInternalNodes=	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
<<\\"\\">>
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
\n	@(Statistics) /\ (Statistics)
READ
WRITE
RANGE_READ
RANGE_WRITE
RANGE_INSERT
NONE
RESTART
Can\'t replace a duplicate with different data.	@Latches
Mod:	@Logging_Finer /\ Latches
_jeUtilization	@Transactions /\ Cleaner
_jeUtilization	@Transactions /\ Cleaner
Cleaner duplicate key sequence file=0x	@Cleaner /\ Logging_Base /\ Logging_Severe
<<\\"lsn \\">>	@Cleaner /\ Latches
<<\\"failed adding in \\">>	@Memory_Budget
\\"<din>\\"
\\"</din>\\"
size=
db=
<<\\"Pass 1: \\">>
<<\\"Pass 2: \\">>
<<\\"End: \\">>
<<\\"processing file \\">>
<<\\".jdb  \\">>
<din>
</din>
<dupkey>
<<\\"\\">>
</dupkey>
<dupCountLN/>
idKey=
DIN
\\"<in>\\"
\\"</in>\\"
\\"Split:\\"
\\"Delete:\\"
<<\\"Already name mapped for dbId: \\">>
<<\\"Already saw dupSort entry for dbId: \\">>
db
DATA=END
<lastFullLsn>
</lastFullLsn>
\\\"/>
foreignKeyDeleteAction
The SecondaryConfig argument is null.
The following SecondaryConfig parameters for the\ncached Database do not match the parameters for the\nrequested Database:\n
NULL_LSN without KnownDeleted
<<\\" SecondaryKeyCreator\n\\">>
<<\\" SecondaryMultiKeyCreator\n\\">>
<<\\" ForeignKeyDelete\n\\">>
<<\\" ForeignKeyDeleteAction\n\\">>
<<\\" ForeignKeyNullifier\n\\">>
<<\\" ForeignMultiKeyNullifier\n\\">>
<<\\" ImmutableSecondaryKey\n\\">>
<<\\"fetchTarget of \\">>
null lsn
.
.
<<\\"-Warning: Out of sync. Should be \\">>	@Memory_Budget
TxnPrepare
\\\">
>
SUCCESS
FILLED_CACHE
EXCEEDED_TIME
PreloadStatus.
BIN cursorSet is inconsistent.	@Verifier
<<\\"Node \\">>
Cursor Not Initialized.
Cursor has been closed.
<<\\"Unknown cursor status: \\">>
CURSOR_NOT_INITIALIZED
CURSOR_INITIALIZED
CURSOR_CLOSED
UNKNOWN (
\\\"
\\\"
\\\"
>\n
<<\\"\\">>
<<\\"\\">>
\n</Cursor>
<<\\" bin=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" ln=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" lnIdx=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" oldLnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
<<\\" newLnLsn=\\">>	@(Logging_Finer) /\ (Logging_Finer /\ Logging_Base)
idkey is null
)	@Latches
\\"je.disable.java.adler32\\"
<<\\"<LATCH \\">>	@Latches
<<\\"] \\">>	@Latches
]	@Latches
<<\\" [waiters: \\">>	@Latches
<<\\" \\">>	@Latches
]	@Latches
>	@Latches
MapTreeRoot	@Latches
\\\" isProvisional=\\\"true
\\\" prev=\\\"0x
\\\">
Can\'t set \'je.env.isNoLocking\' and \'je.env.isTransactional\';	@Transactions
</entry>
\\"<nameLN>\\"
\\"</nameLN>\\"
<<\\"Enviroment creation isn\'t allowed,  but there is no pre-existing  environment in \\">>
TriggerLatch	@Latches
<nameLN>
</nameLN>
<<\\"IN \\">>
\\\">
\\\">
<<\\"IN \\">>
Evictor	@Evictor
Checkpointer	@Checkpointer_Daemon
INCompressor	@INCompressor
Cleaner	@Cleaner
<<\\"Found non-deletable IN \\">>
0000000000000000
0x
NULL_LSN without KnownDeleted
<<\\"Invalid value of searchType: \\">>
Attempt to use a Environment that has been closed.
\\\">
</ref>
<<\\"Close of environment \\">>	@Logging_Fine
<lsn/>
close
<key/>
<<\\"\nException shutting down daemon threads: \\">>
\n
<<\\"Env \\">>	@Logging_Fine
<target/>
<<\\"\nException clearing file manager: \\">>
<knownDeleted val=\\\"
\n
\\\"/>
<<\\"\nException clearing file manager: \\">>
<pendingDeleted val=\\\"
\n
\\\"/>
\\\"/>
\\"    Cache Size      Btree Size  Description\n--------------  --------------  -----------\\"
<<\\"Problem: \\">>	@Statistics /\ CheckLeaks
<<\\"Problem: \\">>	@Transactions /\ CheckLeaks /\ Statistics
Some latches held at env close.	@CheckLeaks /\ Latches
Lock, transaction, or latch left behind at environment close
File Flip	@Logging_FileHandler /\ Logging_Base
manual	@Evictor
No value after -records	@(Memory_Budget) /\ (Memory_Budget)
No value after -key	@(Memory_Budget) /\ (Memory_Budget)
No value after -data	@(Memory_Budget) /\ (Memory_Budget)
beginTransaction called,  but Environment was not opened with transactional cpabilities	@Transactions
No value after -nodemax	@(Memory_Budget) /\ (Memory_Budget)
No value after -density	@(Memory_Budget) /\ (Memory_Budget)
No value after -overhead	@(Memory_Budget) /\ (Memory_Budget)
No value after -measure	@(Memory_Budget) /\ (Memory_Budget)
<<\\"Unknown arg: \\">>	@(Memory_Budget) /\ (Memory_Budget)
<isRoot val=\\\"
\\\"/>
<level val=\\\"
\\\"/>
<entries numEntries=\\\"
\\\" length=\\\"
\\\" baseFileNumber=\\\"
\\\">
\\\">
</ref>
</entries>
-records not specified	@(Memory_Budget) /\ (Memory_Budget)
-key not specified	@(Memory_Budget) /\ (Memory_Budget)
<in>
</in>
<<\\"usage:\njava \\">>	@Memory_Budget
<idkey>
<<\\"\\">>
</idkey>
\\\"/>
\\\"/>
<level val=\\\"
\\\"/>
\\\"/>
<entries nEntries=\\\"
\\\">
Inputs: records=	@Memory_Budget
<entry id=\\\"
<lsn/>
<key/>
<target/>
<<\\"    Cache Size      Btree Size  Description\n--------------  --------------  -----------\\">>	@Memory_Budget
Minimum, internal nodes only	@Memory_Budget
Maximum, internal nodes only	@Memory_Budget
\\\"/>
Minimum, internal nodes and leaf nodes	@Memory_Budget
</entry>
Maximum, internal nodes and leaf nodes	@Memory_Budget
\nTo get leaf node sizing specify -data	@Memory_Budget
<<\\"\nBtree levels: \\">>	@Memory_Budget
</entries>
Already closed
<knownDeleted val=\\\"
\\\"/>
<pendingDeleted val=\\\"
\\\"/>
IN
key
<<\\"JoinCursor.getNext(key): \\">>	@Logging_Finest
Split:	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" parent=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" child=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
key
<<\\" newSibling=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
data
<<\\" parentLsn = \\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\"JoinCursor.getNext(key,data): \\">>	@Logging_Finest
<<\\" childLsn = \\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" newSiblingLsn = \\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" splitIdx=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" idKeyIdx=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
<<\\" childIdx=\\">>	@(Logging_Fine) /\ (Logging_Fine /\ Logging_Base)
Delete:	@(Logging_Finest) /\ (Logging_Finest /\ Logging_Base)
<<\\" index=\\">>	@(Logging_Finest) /\ (Logging_Finest /\ Logging_Base)
<<\\"Directory is not empty: \\">>	@Memory_Budget
<<\\"\nMeasuring with cache size: \\">>	@Memory_Budget
Stats for internal and leaf nodes (after insert)	@Memory_Budget /\ Statistics
<<\\"\nPreloading with cache size: \\">>	@Memory_Budget
Stats for internal nodes only (after preload)	@Memory_Budget /\ Statistics
<<\\"During close: \\">>	@Memory_Budget
<<\\"During close: \\">>	@Memory_Budget
Secondary corrupt
foo	@Memory_Budget
*** Key doesn\'t fit value=	@Memory_Budget
Random key already exists -- retrying	@Memory_Budget
<<\\"*** \\">>	@Memory_Budget
<<\\"*** Ran out of cache memory at record \\">>	@Memory_Budget /\ Statistics
.	@Memory_Budget
CacheSize=	@Memory_Budget /\ Statistics
*** All records did not fit in the cache ***	@Memory_Budget /\ Statistics
\\"_jeIdMap\\"
\\"_jeNameMap\\"
\\"_jeUtilization\\"
_jeIdMap
_jeNameMap
_jeUtilization
_jeIdMap
_jeNameMap
_jeIdMap
_jeNameMap
<<\\"can\'t find database \\">>
<<\\"Attempted to \\">>
<<\\"Can\'t \\">>
rename	@RenameOp
remove	@DeleteOp
truncate	@TruncateOp
<<\\"Database \\">>	@TruncateOp
<<\\"Can\'t truncate database \\">>	@TruncateOp
_jeIdMap
_jeNameMap
UTF-8
UTF-8
<dbtree lastId = \\\"
\\\">
<idDb>
</idDb><nameDb>
</nameDb>
</dbtree>
<dbTree lastDbId =\\\"
\\\">
</dbtree>
Non-blocking lock was denied.
<<\\"\\">>
<<\\"\\">>
\\\"/>
TxnCommit

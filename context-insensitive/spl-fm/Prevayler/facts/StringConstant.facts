Edit
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
<<\\"Exception loading JDBC driver class: \\">>
JDBC
Query Test
<<\\"Exception while trying to connect: \\">>
NAME
The minimum number of threads cannot be greater than the maximum number.
Deposit...
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Deposit
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
Transfer
From Account
To Account
Amount
<<\\"\nMemory used: \\">>
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
Prevayler Network Server Receiver	@Replication
setting AutoCommit to false
<<\\"insert into \\">>
Prevayler
0.00
<<\\"Unexpected Exception: \\">>
inserting record
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
<<\\"preparing statement: \\">>
<<\\"Prevayler Stubborn Client \\">>	@Replication
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
commiting insertion of test records
<<\\"SQLException \\">>
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
Unexpected Exception was thrown.
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
<<\\"Attempted to process \\">>
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
Runtime Exception simulated for rollback demonstration purposes.
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
locked
Already locked internally
rw
<<\\"\\">>
Already locked externally
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
<<\\"\\">>
<<\\"\\">>
Transaction Test
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
Checking transaction log consistency.
Transaction log consistency check failed.
Transaction log OK.\n
<<HASH:-279482281>>
ScalabilityTest.properties
Creating the properties file.
<<HASH:1156460636>>
Unable to serialize transaction
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
Unable to deserialize transaction
TransactionTestCheckConsistency
TransactionLogDirectory
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
RunJdbcQueryTest
JdbcQueryThreadsMinimum
JdbcQueryThreadsMaximum
RunJdbcTransactionTest
withQuery
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
withQuery
JdbcConnectionURL
JdbcUser
JdbcPassword
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
00000
Amount must be greater than zero.
Amount maximum (10000) exceeded.
<<\\"Disk space used: \\">>
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2
journal
hh:mm:ss
<<\\"Bank - \\">>
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
Port In Service	@(Replication) /\ (Replication)
SubscriberUpToDate	@(Replication) /\ (Replication)
Port Not in Service	@(Replication) /\ (Replication)
Create
Interesting accounts
Refresh
South
Match
Account
Balance
#Entries
Center
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
balance()
transactionHistory().size()
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
already closed
already closed
<<\\"Account not found: \\">>
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
Withdraw...
Withdrawal
0000000000000000000
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
<<\\"Error reading file list from directory \\">>
<<\\"Primes found: \\">>
OK
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
<<\\"Unexpected Exception: \\">>
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
Delete
OK
Error
The replication logic is still under development.	@Replication
<<\\"Account \\">>
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Transaction History
Balance
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
Unexpected InterruptedException.	@(Replication) /\ (Replication)
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
\n	@(Monitor) /\ (Monitor)
\n	@(Monitor) /\ (Monitor)
Bank
<<\\"Unable to serialize with Skaringa: \\">>
<<HASH:-595253473>>
<<\\"Unable to deserialize with Skaringa: \\">>
<<\\"Unable to start Skaringa: \\">>
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
\\"QueryTest\\"
New Account
QueryTest
QueryTest
QueryTest
Journal.update() has to be called at least once before Journal.journal().
Journal.update() has to be called at least once before Journal.append().
writing to
closing
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
<<\\"Expected \\">>
creating
update() must be called at least once
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
<<\\"There are transactions needing to be recovered from \\">>
Unexpected Exception thrown.
<<\\"Expected \\">>
<<\\"update \\">>
<<\\"delete from \\">>
TRANSACTION_TEST
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
commiting transaction
update() must be called at least once
updating record
deleting record
All Accounts
Center
South
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
QUERY_TEST
Invalid holder name.
<<\\"selecting record from \\">>
<<\\"Creating \\">>
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Invalid parameter name \'
Invalid parameter value \'
Chunk header corrupted
;=\r\n
Unexpected end of stream in chunk data
Unexpected end of stream in chunk trailer
Chunk trailer corrupted
Unexpected end of stream in chunk header
North
East
West
Center
South
Holder
#
NAME
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
journal
xstreamjournal
skaringajournal
Read the javadoc to this method.
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
Prevalence
The prevalent system must be configured.
journal
snapshot	@(Snapshot) /\ (Snapshot)
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
systemVersion
executionTime
systemVersion
executionTime
Primary suffix \'	@Snapshot
snapshot	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
Transfer...
yyyy/MM/dd  hh:mm:ss.SSS

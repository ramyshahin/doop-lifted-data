\\"QueryTest\\"
Invalid holder name.
QueryTest
QueryTest
QueryTest
<<\\"Directory doesn\'t exist and could not be created: \\">>
<<\\"Path exists but is not a directory: \\">>
<<\\"Account \\">>
Transfer
From Account
Transaction History
To Account
Balance
Amount
yyyy/MM/dd  hh:mm:ss.SSS
<<\\"select ID,STRING1,BIGDECIMAL1,BIGDECIMAL2,DATE1,DATE2 from \\">>
OK
QUERY_TEST
<<\\"selecting record from \\">>
\\"[a-zA-Z0-9]*[Ss]napshot\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot\\"
\\"[a-zA-Z0-9]*[Jj]ournal\\"
\\"\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal\\"
Journal.update() has to be called at least once before Journal.append().
writing to
Snapshot filename suffix must match /[a-zA-Z0-9]*[Ss]napshot/, but \'
closing
Port In Service	@(Replication) /\ (Replication)
Journal filename suffix must match /[a-zA-Z0-9]*[Jj]ournal/, but \'
Port Not in Service	@(Replication) /\ (Replication)
creating
<<\\"The transaction log has not yet reached transaction \\">>
<<\\"Unable to find journal file containing transaction \\">>
0000000000000000000
\\d{19}\\.[a-zA-Z0-9]*[Ss]napshot
\\d{19}\\.[a-zA-Z0-9]*[Jj]ournal
<<\\"There are transactions needing to be recovered from \\">>
<<\\"Expected \\">>
<<\\"Error reading file list from directory \\">>
<<\\"All transaction processing is now blocked. An IOException was thrown while \\">>
update() must be called at least once
Create
The replication logic is still under development.	@Replication
The current implementation can only support one subscriber. Future implementations will support more.	@Replication
Prevayler
Removing subscribers is not yet supported by the current implementation.	@(Replication) /\ (Replication)
<<\\"Unexpected Exception: \\">>
To publish a transaction, this ClientPublisher needs a registered subscriber.	@Replication
<<\\"Primes found: \\">>
Unexpected InterruptedException.	@(Replication) /\ (Replication)
Unexpected Exception was thrown.
<<\\"Prevayler Stubborn Client \\">>	@Replication
Withdraw...
Withdrawal
\\"SubscriberUpToDate\\"
\\"RemoteTransaction\\"
SubscriberUpToDate	@(Replication) /\ (Replication)
<<\\"NetworkSessionId for \\">>	@(Replication) /\ (Replication)
<<\\"Disk space used: \\">>
journal
<<\\"Unable to serialize with Skaringa: \\">>
<<\\"Unable to deserialize with Skaringa: \\">>
Unexpected Exception thrown.
<<\\"Unable to start Skaringa: \\">>
Prevayler is no longer allowing access to the prevalent system due to an Error thrown from an earlier transaction.
locked
Already locked internally
rw
<<\\"\\">>
Already locked externally
Prevayler is no longer processing transactions due to an Error thrown from an earlier transaction.
<<\\"Attempted to apply transaction \\">>
<<\\"\\">>
<<\\"\\">>
Prevayler is no longer processing queries due to an Error thrown from an earlier transaction.
Prevayler is no longer allowing snapshots due to an Error thrown from an earlier transaction.	@(Snapshot) /\ (Snapshot)
00000
Prevayler is no longer accepting transactions due to an Error thrown from an earlier transaction.
<<\\"Already at \\">>
Amount must be greater than zero.
Amount maximum (10000) exceeded.
\n	@(Monitor) /\ (Monitor)
\n	@(Monitor) /\ (Monitor)
Deposit...
<<\\"Attempted to process \\">>
Deposit
\nOne snapshot per day is more than enough for most applications\n  because the journal recovery rate is in the order of\n  6000 transactions per second. For demoing purposes, though, a\n  snapshot will be taken every 20 seconds...
demo2
Runtime Exception simulated for rollback demonstration purposes.
Error
Edit
<<\\"Creating \\">>
setting AutoCommit to false
<<\\"insert into \\">>
inserting record
demo1
\nRobustness Reminder: You can kill this process at any time.\nWhen you restart the system, you will see that nothing was lost.\nPress Enter to continue.\n
<<\\"preparing statement: \\">>
<<\\"Exception loading JDBC driver class: \\">>
<<\\"delete from \\">>
<<\\"deleting all records from \\">>
JDBC
commiting insertion of test records
<<\\"SQLException \\">>
<<\\"Exception while trying to connect: \\">>
A snapshot using Skaringa\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2Skaringa	@(Snapshot) /\ (Snapshot)
systemVersion
executionTime
systemVersion
executionTime
Transfer...
North
East
West
Center
South
Holder
#
New Account
bank	@(Snapshot) /\ (Snapshot)
account	@(Snapshot) /\ (Snapshot)
accountEntry	@(Snapshot) /\ (Snapshot)
Robustness Reminder
<<\\" You can kill this process at any time. \\">>
<<\\" When you run the application again, \\">>
<<\\" you will see that nothing was lost. \\">>
A snapshot using XStream\'s XML serialization will be taken every 20 seconds...	@(Snapshot) /\ (Snapshot)
demo2XStream	@(Snapshot) /\ (Snapshot)
Interesting accounts
Unable to produce a copy of the prevalent system for trying out transactions before applying them to the real system.	@(Censor) /\ (Censor)
Refresh
South
Match
Account
Balance
#Entries
Center
balance()
transactionHistory().size()
\n=============================================================
<<\\"             Prevayler vs JDBC Scalability Tests             \\">>
=============================================================\n
If you have any trouble running the tests, just write to
prevayler-scalability@lists.sourceforge.net and we will be glad to help.\n
Reading the properties file:\n
You can edit this file to configure the tests for the next run.\n
\n\n\nFor better results, edit the properties file:
\nYou can publish your best results by mail to:
prevayler-scalability@lists.sourceforge.net. Please include info about your
processors (quantity, type, speed), compiler, VM, operating system and DBMS.
<<\\"\\">>
Scalability test results are published on www.prevayler.org.
See you there.\n
Klaus Wuestefeld and Daniel Santos.\n\n
\\"US-ASCII\\"
\\"0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7}\\"
\\"[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+\\"
Checking transaction log consistency.
\\"(0|[1-9A-F][0-9A-F]{0,6}|[1-7][0-9A-F]{7})(;[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+=[^\u0000- ()<>@,;:\\\\\\\"/\\[\\]?={}\u007f-\uffff]+)*\r\n\\"
Transaction log consistency check failed.
Transaction log OK.\n
ScalabilityTest.properties
Creating the properties file.
<<HASH:1156460636>>
Invalid parameter name \'
Invalid parameter value \'
NumberOfObjects
ONE_HUNDRED_THOUSAND
ONE_MILLION
TEN_MILLION
TWENTY_MILLION
NumberOfObjects property must be equal to ONE_HUNDRED_THOUSAND, ONE_MILLION, TEN_MILLION or TWENTY_MILLION.
RunPrevaylerQueryTest
PrevaylerQueryThreadsMinimum
PrevaylerQueryThreadsMaximum
RunPrevaylerTransactionTest
PrevaylerTransactionThreadsMinimum
PrevaylerTransactionThreadsMaximum
TransactionTestCheckConsistency
Chunk header corrupted
TransactionLogDirectory
;=\r\n
<<\\"\n\nPrevayler TransactionLog Directory: \\">>
<<\\"\n\nPrevayler Journal Serializer: \\">>
Unexpected end of stream in chunk data
RunJdbcQueryTest
JdbcQueryThreadsMinimum
Unexpected end of stream in chunk trailer
JdbcQueryThreadsMaximum
Chunk trailer corrupted
RunJdbcTransactionTest
JdbcTransactionThreadsMinimum
JdbcTransactionThreadsMaximum
JdbcDriverClassName
JdbcConnectionURL
JdbcUser
JdbcPassword
Unexpected end of stream in chunk header
<<\\"Property \\">>
<<\\"NumberFormatException reading property \\">>
yes
\n\n\n
This test will be skipped (see properties file).
Bank
The minimum number of threads cannot be greater than the maximum number.
The minimum number of threads cannot be smaller than one.
<<\\"\n\n========= Running \\">>
Each round will take approx. 20 seconds to run...
<<\\"\n----------- BEST ROUND: \\">>
<<\\"\nMemory used: \\">>
Journal.update() has to be called at least once before Journal.journal().
<<\\"Seconds ellapsed: \\">>
<<\\"--------- Round Result: \\">>
<<\\"Unable to recover transaction \\">>
<<\\"The transaction journal has not yet reached transaction \\">>
0.00
<<\\"Expected \\">>
\n\nOutOfMemoryError.\n===========================================================\nThe VM must be started with a sufficient maximum heap size.\nExample for Linux and Windows:  java -Xmx512000000 ...\n\n
update() must be called at least once
Unable to serialize transaction
Unable to deserialize transaction
<<HASH:-279482281>>
withQuery
withQuery
Prevayler Network Server Receiver	@Replication
Prevayler Network Client Receiver	@(Replication) /\ (Replication)
All Accounts
Center
South
This demo shows how your application can be replicated\nwithout changing ONE SINGLE LINE OF CODE in the\nbusiness classes or GUI. This enables query load-\nbalancing and system fault-tolerance.\n\n	@(Replication) /\ (Replication)
<<HASH:2013142096>>	@(Replication) /\ (Replication)
localhost	@(Replication) /\ (Replication)
demo2Replica	@(Replication) /\ (Replication)
Delete
Unexpected InterruptedException
Error during deserialization
Deep copy failed in an unknown way
<<HASH:-595253473>>
OK
PrevalenceBase
Transient Prevaylers are unable to take snapshots.	@Snapshot
<<\\"Unexpected Exception: \\">>
journal
xstreamjournal
skaringajournal
Read the javadoc to this method.
Primary suffix \'	@Snapshot
snapshot	@(Snapshot) /\ (Snapshot)
xstreamsnapshot	@(Snapshot) /\ (Snapshot)
skaringasnapshot	@(Snapshot) /\ (Snapshot)
snapshot	@Snapshot
Prevalence
The prevalent system must be configured.
snapshot	@(Snapshot) /\ (Snapshot)
generatingSnapshot	@(Snapshot) /\ (Snapshot)
<<\\"Temporary snapshot file generated: \\">>	@(Snapshot) /\ (Snapshot)
Query Test
journal
NAME
hh:mm:ss
<<\\"Bank - \\">>
snapshot	@(Snapshot) /\ (Snapshot)
<<\\"update \\">>
<<\\"delete from \\">>
TRANSACTION_TEST
commiting transaction
already closed
already closed
updating record
deleting record
<<\\"Account not found: \\">>
NAME
<<HASH:713442402>>	@(Replication) /\ (Replication)
demo2	@(Replication) /\ (Replication)
Transaction Test
